{"ast":null,"code":"import _classCallCheck from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Rotate } from \"./Options/Classes/Rotate\";\n\nfunction updateAngle(particle, delta) {\n  var _a, _b;\n\n  var rotate = particle.rotate,\n      rotateOptions = particle.options.rotate;\n\n  if (!rotate || !rotateOptions) {\n    return;\n  }\n\n  var rotateAnimation = rotateOptions.animation,\n      speed = ((_a = rotate.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor,\n      max = 2 * Math.PI,\n      decay = (_b = rotate.decay) !== null && _b !== void 0 ? _b : 1;\n\n  if (!rotateAnimation.enable) {\n    return;\n  }\n\n  switch (rotate.status) {\n    case \"increasing\":\n      rotate.value += speed;\n\n      if (rotate.value > max) {\n        rotate.value -= max;\n      }\n\n      break;\n\n    case \"decreasing\":\n    default:\n      rotate.value -= speed;\n\n      if (rotate.value < 0) {\n        rotate.value += max;\n      }\n\n      break;\n  }\n\n  if (rotate.velocity && decay !== 1) {\n    rotate.velocity *= decay;\n  }\n}\n\nexport var RotateUpdater = /*#__PURE__*/function () {\n  function RotateUpdater(container) {\n    _classCallCheck(this, RotateUpdater);\n\n    this.container = container;\n  }\n\n  _createClass(RotateUpdater, [{\n    key: \"init\",\n    value: function init(particle) {\n      var rotateOptions = particle.options.rotate;\n\n      if (!rotateOptions) {\n        return;\n      }\n\n      particle.rotate = {\n        enable: rotateOptions.animation.enable,\n        value: getRangeValue(rotateOptions.value) * Math.PI / 180\n      };\n      particle.pathRotation = rotateOptions.path;\n      var rotateDirection = rotateOptions.direction;\n\n      if (rotateDirection === \"random\") {\n        var index = Math.floor(getRandom() * 2);\n        rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n      }\n\n      switch (rotateDirection) {\n        case \"counter-clockwise\":\n        case \"counterClockwise\":\n          particle.rotate.status = \"decreasing\";\n          break;\n\n        case \"clockwise\":\n          particle.rotate.status = \"increasing\";\n          break;\n      }\n\n      var rotateAnimation = rotateOptions.animation;\n\n      if (rotateAnimation.enable) {\n        particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n        particle.rotate.velocity = getRangeValue(rotateAnimation.speed) / 360 * this.container.retina.reduceFactor;\n\n        if (!rotateAnimation.sync) {\n          particle.rotate.velocity *= getRandom();\n        }\n      }\n\n      particle.rotation = particle.rotate.value;\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      var rotate = particle.options.rotate;\n\n      if (!rotate) {\n        return false;\n      }\n\n      return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;\n    }\n  }, {\n    key: \"loadOptions\",\n    value: function loadOptions(options) {\n      if (!options.rotate) {\n        options.rotate = new Rotate();\n      }\n\n      for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        sources[_key - 1] = arguments[_key];\n      }\n\n      for (var _i = 0, _sources = sources; _i < _sources.length; _i++) {\n        var source = _sources[_i];\n        options.rotate.load(source === null || source === void 0 ? void 0 : source.rotate);\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      var _a, _b;\n\n      if (!this.isEnabled(particle)) {\n        return;\n      }\n\n      updateAngle(particle, delta);\n      particle.rotation = (_b = (_a = particle.rotate) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 0;\n    }\n  }]);\n\n  return RotateUpdater;\n}();","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/tsparticles-updater-angle/esm/RotateUpdater.js"],"names":["getRandom","getRangeValue","Rotate","updateAngle","particle","delta","_a","_b","rotate","rotateOptions","options","rotateAnimation","animation","speed","velocity","factor","max","Math","PI","decay","enable","status","value","RotateUpdater","container","pathRotation","path","rotateDirection","direction","index","floor","retina","reduceFactor","sync","rotation","destroyed","spawning","sources","source","load","isEnabled"],"mappings":"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","sourcesContent":["import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Rotate } from \"./Options/Classes/Rotate\";\nfunction updateAngle(particle, delta) {\n    var _a, _b;\n    const rotate = particle.rotate, rotateOptions = particle.options.rotate;\n    if (!rotate || !rotateOptions) {\n        return;\n    }\n    const rotateAnimation = rotateOptions.animation, speed = ((_a = rotate.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, max = 2 * Math.PI, decay = (_b = rotate.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case \"increasing\":\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n    if (rotate.velocity && decay !== 1) {\n        rotate.velocity *= decay;\n    }\n}\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: (getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.rotate.status = \"increasing\";\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source === null || source === void 0 ? void 0 : source.rotate);\n        }\n    }\n    update(particle, delta) {\n        var _a, _b;\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAngle(particle, delta);\n        particle.rotation = (_b = (_a = particle.rotate) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 0;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}