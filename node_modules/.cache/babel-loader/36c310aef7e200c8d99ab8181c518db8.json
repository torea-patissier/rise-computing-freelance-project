{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nexport var Modes = /*#__PURE__*/function () {\n  function Modes(engine, container) {\n    _classCallCheck(this, Modes);\n\n    this._engine = engine;\n    this._container = container;\n  }\n\n  _createClass(Modes, [{\n    key: \"load\",\n    value: function load(data) {\n      if (!data) {\n        return;\n      }\n\n      if (this._container) {\n        var interactors = this._engine.plugins.interactors.get(this._container);\n\n        if (interactors) {\n          var _iterator = _createForOfIteratorHelper(interactors),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var interactor = _step.value;\n\n              if (interactor.loadModeOptions) {\n                interactor.loadModeOptions(this, data);\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      }\n    }\n  }]);\n\n  return Modes;\n}();","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js"],"names":["Modes","engine","container","_engine","_container","data","interactors","plugins","get","interactor","loadModeOptions"],"mappings":";;;AAAA,WAAaA,KAAb;AACI,iBAAYC,MAAZ,EAAoBC,SAApB,EAA+B;AAAA;;AAC3B,SAAKC,OAAL,GAAeF,MAAf;AACA,SAAKG,UAAL,GAAkBF,SAAlB;AACH;;AAJL;AAAA;AAAA,yBAKSG,IALT,EAKe;AACP,UAAI,CAACA,IAAL,EAAW;AACP;AACH;;AACD,UAAI,KAAKD,UAAT,EAAqB;AACjB,YAAME,WAAW,GAAG,KAAKH,OAAL,CAAaI,OAAb,CAAqBD,WAArB,CAAiCE,GAAjC,CAAqC,KAAKJ,UAA1C,CAApB;;AACA,YAAIE,WAAJ,EAAiB;AAAA,qDACYA,WADZ;AAAA;;AAAA;AACb,gEAAsC;AAAA,kBAA3BG,UAA2B;;AAClC,kBAAIA,UAAU,CAACC,eAAf,EAAgC;AAC5BD,gBAAAA,UAAU,CAACC,eAAX,CAA2B,IAA3B,EAAiCL,IAAjC;AACH;AACJ;AALY;AAAA;AAAA;AAAA;AAAA;AAMhB;AACJ;AACJ;AAnBL;;AAAA;AAAA","sourcesContent":["export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (this._container) {\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadModeOptions) {\n                        interactor.loadModeOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}