{"ast":null,"code":"import { getWindow } from 'ssr-window';\nimport { elementChildren, elementOffset, elementParents, getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const evCache = [];\n  const gesture = {\n    slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    imageEl: undefined,\n    imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.imageEl;\n        const slideEl = gesture.slideEl;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n\n      scale = value;\n    }\n\n  });\n\n  function getDistanceBetweenTouches() {\n    if (evCache.length < 2) return 1;\n    const x1 = evCache[0].pageX;\n    const y1 = evCache[0].pageY;\n    const x2 = evCache[1].pageX;\n    const y2 = evCache[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  }\n\n  function getSlideSelector() {\n    return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  }\n\n  function eventWithinSlide(e) {\n    const slideSelector = getSlideSelector();\n    if (e.target.matches(slideSelector)) return true;\n    if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n\n  function eventWithinZoomContainer(e) {\n    const selector = `.${swiper.params.zoom.containerClass}`;\n    if (e.target.matches(selector)) return true;\n    if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n    return false;\n  } // Events\n\n\n  function onGestureStart(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    evCache.push(e);\n\n    if (evCache.length < 2) {\n      return;\n    }\n\n    fakeGestureTouched = true;\n    gesture.scaleStart = getDistanceBetweenTouches();\n\n    if (!gesture.slideEl) {\n      gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n\n      gesture.imageEl = imageEl;\n\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n\n      if (!gesture.imageWrapEl) {\n        gesture.imageEl = undefined;\n        return;\n      }\n\n      gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    }\n\n    if (gesture.imageEl) {\n      gesture.imageEl.style.transitionDuration = '0ms';\n    }\n\n    isScaling = true;\n  }\n\n  function onGestureChange(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache[pointerIndex] = e;\n\n    if (evCache.length < 2) {\n      return;\n    }\n\n    fakeGestureMoved = true;\n    gesture.scaleMove = getDistanceBetweenTouches();\n\n    if (!gesture.imageEl) {\n      return;\n    }\n\n    zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n\n  function onGestureEnd(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n\n    if (!fakeGestureTouched || !fakeGestureMoved) {\n      return;\n    }\n\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    if (!gesture.imageE) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale === 1) gesture.slideEl = undefined;\n  }\n\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.imageEl) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.pageX;\n    image.touchesStart.y = e.pageY;\n  }\n\n  function onTouchMove(e) {\n    if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.imageEl.offsetWidth;\n      image.height = gesture.imageEl.offsetHeight;\n      image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n      image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n      gesture.slideWidth = gesture.slideEl.offsetWidth;\n      gesture.slideHeight = gesture.slideEl.offsetHeight;\n      gesture.imageWrapEl.style.transitionDuration = '0ms';\n    } // Define if we need image drag\n\n\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n    image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n\n    e.stopPropagation();\n    image.isMoved = true;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    } // Velocity\n\n\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY; // Fix duration\n\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY; // Define if we need image drag\n\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n\n    if (gesture.slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      if (gesture.imageEl) {\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n      }\n\n      if (gesture.imageWrapEl) {\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n      }\n\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.slideEl = undefined;\n      gesture.imageEl = undefined;\n      gesture.imageWrapEl = undefined;\n    }\n  }\n\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n\n    if (!gesture.slideEl) {\n      if (e && e.target) {\n        gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      }\n\n      if (!gesture.slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n        } else {\n          gesture.slideEl = swiper.slides[swiper.activeIndex];\n        }\n      }\n\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n\n      gesture.imageEl = imageEl;\n\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n\n    gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.pageX;\n      touchY = e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    const forceZoomRatio = typeof e === 'number' ? e : null;\n\n    if (currentScale === 1 && forceZoomRatio) {\n      touchX = undefined;\n      touchY = undefined;\n    }\n\n    zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n\n    if (e && !(currentScale === 1 && forceZoomRatio)) {\n      slideWidth = gesture.slideEl.offsetWidth;\n      slideHeight = gesture.slideEl.offsetHeight;\n      offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n      offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.imageEl.offsetWidth;\n      imageHeight = gesture.imageEl.offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n\n    if (!gesture.slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n      } else {\n        gesture.slideEl = swiper.slides[swiper.activeIndex];\n      }\n\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n\n      gesture.imageEl = imageEl;\n\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n    gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    gesture.slideEl = undefined;\n  } // Toggle Zoom\n\n\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n\n  function getListeners() {\n    const passiveListener = swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = swiper.params.passiveListeners ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  } // Attach/Detach Events\n\n\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners(); // Scale image\n\n    swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel'].forEach(eventName => {\n      swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n    }); // Move image\n\n    swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners(); // Scale image\n\n    swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel'].forEach(eventName => {\n      swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n    }); // Move image\n\n    swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/swiper/modules/zoom/zoom.js"],"names":["getWindow","elementChildren","elementOffset","elementParents","getTranslate","Zoom","swiper","extendParams","on","emit","window","zoom","enabled","maxRatio","minRatio","toggle","containerClass","zoomedSlideClass","currentScale","isScaling","fakeGestureTouched","fakeGestureMoved","evCache","gesture","slideEl","undefined","slideWidth","slideHeight","imageEl","imageWrapEl","image","isTouched","isMoved","currentX","currentY","minX","minY","maxX","maxY","width","height","startX","startY","touchesStart","touchesCurrent","velocity","x","y","prevPositionX","prevPositionY","prevTime","scale","Object","defineProperty","get","set","value","getDistanceBetweenTouches","length","x1","pageX","y1","pageY","x2","y2","distance","Math","sqrt","getSlideSelector","isElement","params","slideClass","eventWithinSlide","e","slideSelector","target","matches","slides","filter","contains","eventWithinZoomContainer","selector","el","querySelectorAll","containerEl","onGestureStart","push","scaleStart","closest","activeIndex","querySelector","getAttribute","style","transitionDuration","onGestureChange","pointerIndex","findIndex","cachedEv","pointerId","scaleMove","transform","onGestureEnd","splice","imageE","max","min","speed","onTouchStart","device","android","cancelable","preventDefault","onTouchMove","allowClick","offsetWidth","offsetHeight","scaledWidth","scaledHeight","isHorizontal","floor","stopPropagation","Date","now","abs","onTouchEnd","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","momentumDuration","onTransitionEnd","previousIndex","zoomIn","virtual","slidesEl","slideActiveClass","cssMode","wrapperEl","overflow","touchAction","classList","add","touchX","touchY","offsetX","offsetY","diffX","diffY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","forceZoomRatio","left","scrollX","top","scrollY","zoomOut","remove","zoomToggle","getListeners","passiveListener","passiveListeners","passive","capture","activeListenerWithCapture","enable","addEventListener","forEach","eventName","disable","removeEventListener","_s","animating","assign","in","out"],"mappings":"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","sourcesContent":["import { getWindow } from 'ssr-window';\nimport { elementChildren, elementOffset, elementParents, getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const evCache = [];\n  const gesture = {\n    slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    imageEl: undefined,\n    imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.imageEl;\n        const slideEl = gesture.slideEl;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n      scale = value;\n    }\n  });\n  function getDistanceBetweenTouches() {\n    if (evCache.length < 2) return 1;\n    const x1 = evCache[0].pageX;\n    const y1 = evCache[0].pageY;\n    const x2 = evCache[1].pageX;\n    const y2 = evCache[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  }\n  function getSlideSelector() {\n    return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  }\n  function eventWithinSlide(e) {\n    const slideSelector = getSlideSelector();\n    if (e.target.matches(slideSelector)) return true;\n    if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n  function eventWithinZoomContainer(e) {\n    const selector = `.${swiper.params.zoom.containerClass}`;\n    if (e.target.matches(selector)) return true;\n    if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n\n  // Events\n  function onGestureStart(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    evCache.push(e);\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureTouched = true;\n    gesture.scaleStart = getDistanceBetweenTouches();\n    if (!gesture.slideEl) {\n      gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n      if (!gesture.imageWrapEl) {\n        gesture.imageEl = undefined;\n        return;\n      }\n      gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    }\n    if (gesture.imageEl) {\n      gesture.imageEl.style.transitionDuration = '0ms';\n    }\n    isScaling = true;\n  }\n  function onGestureChange(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache[pointerIndex] = e;\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureMoved = true;\n    gesture.scaleMove = getDistanceBetweenTouches();\n    if (!gesture.imageEl) {\n      return;\n    }\n    zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function onGestureEnd(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n    if (!fakeGestureTouched || !fakeGestureMoved) {\n      return;\n    }\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    if (!gesture.imageE) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale === 1) gesture.slideEl = undefined;\n  }\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.imageEl) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.pageX;\n    image.touchesStart.y = e.pageY;\n  }\n  function onTouchMove(e) {\n    if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.slideEl) return;\n    if (!image.isMoved) {\n      image.width = gesture.imageEl.offsetWidth;\n      image.height = gesture.imageEl.offsetHeight;\n      image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n      image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n      gesture.slideWidth = gesture.slideEl.offsetWidth;\n      gesture.slideHeight = gesture.slideEl.offsetHeight;\n      gesture.imageWrapEl.style.transitionDuration = '0ms';\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n    image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n    image.isMoved = true;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n    if (gesture.slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      if (gesture.imageEl) {\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n      }\n      if (gesture.imageWrapEl) {\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n      }\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.slideEl = undefined;\n      gesture.imageEl = undefined;\n      gesture.imageWrapEl = undefined;\n    }\n  }\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (e && e.target) {\n        gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      }\n      if (!gesture.slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n        } else {\n          gesture.slideEl = swiper.slides[swiper.activeIndex];\n        }\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n    gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.pageX;\n      touchY = e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n    const forceZoomRatio = typeof e === 'number' ? e : null;\n    if (currentScale === 1 && forceZoomRatio) {\n      touchX = undefined;\n      touchY = undefined;\n    }\n    zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    if (e && !(currentScale === 1 && forceZoomRatio)) {\n      slideWidth = gesture.slideEl.offsetWidth;\n      slideHeight = gesture.slideEl.offsetHeight;\n      offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n      offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.imageEl.offsetWidth;\n      imageHeight = gesture.imageEl.offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n      } else {\n        gesture.slideEl = swiper.slides[swiper.activeIndex];\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n    gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    gesture.slideEl = undefined;\n  }\n\n  // Toggle Zoom\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n  function getListeners() {\n    const passiveListener = swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = swiper.params.passiveListeners ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  // Attach/Detach Events\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n\n    swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel'].forEach(eventName => {\n      swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel'].forEach(eventName => {\n      swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}"]},"metadata":{},"sourceType":"module"}