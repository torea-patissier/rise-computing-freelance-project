{"ast":null,"code":"import _regeneratorRuntime from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _createForOfIteratorHelper from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { calcPositionFromSize } from \"../Utils/NumberUtils\";\nexport var Particles = /*#__PURE__*/function () {\n  function Particles(engine, container) {\n    _classCallCheck(this, Particles);\n\n    this.container = container;\n    this._engine = engine;\n    this.nextId = 0;\n    this.array = [];\n    this.zArray = [];\n    this.pool = [];\n    this.limit = 0;\n    this.needsSort = false;\n    this.lastZIndex = 0;\n    this.interactionManager = new InteractionManager(this._engine, container);\n    var canvasSize = this.container.canvas.size;\n    this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n    this.movers = this._engine.plugins.getMovers(container, true);\n    this.updaters = this._engine.plugins.getUpdaters(container, true);\n  }\n\n  _createClass(Particles, [{\n    key: \"addManualParticles\",\n    value: function addManualParticles() {\n      var container = this.container,\n          options = container.actualOptions;\n\n      var _iterator = _createForOfIteratorHelper(options.manualParticles),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var particle = _step.value;\n          this.addParticle(calcPositionFromSize({\n            size: container.canvas.size,\n            position: particle.position\n          }), particle.options);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"addParticle\",\n    value: function addParticle(position, overrideOptions, group, initializer) {\n      var container = this.container,\n          options = container.actualOptions,\n          limit = options.particles.number.limit;\n\n      if (limit > 0) {\n        var countToRemove = this.count + 1 - limit;\n\n        if (countToRemove > 0) {\n          this.removeQuantity(countToRemove);\n        }\n      }\n\n      return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.array = [];\n      this.zArray = [];\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.array = [];\n      this.zArray = [];\n      this.movers = [];\n      this.updaters = [];\n    }\n  }, {\n    key: \"draw\",\n    value: function () {\n      var _draw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(delta) {\n        var container, canvasSize, _iterator2, _step2, _step2$value, plugin, _iterator3, _step3, p;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                container = this.container, canvasSize = this.container.canvas.size;\n                this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n                container.canvas.clear();\n                _context.next = 5;\n                return this.update(delta);\n\n              case 5:\n                if (this.needsSort) {\n                  this.zArray.sort(function (a, b) {\n                    return b.position.z - a.position.z || a.id - b.id;\n                  });\n                  this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n                  this.needsSort = false;\n                }\n\n                _iterator2 = _createForOfIteratorHelper(container.plugins);\n\n                try {\n                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                    _step2$value = _slicedToArray(_step2.value, 2), plugin = _step2$value[1];\n                    container.canvas.drawPlugin(plugin, delta);\n                  }\n                } catch (err) {\n                  _iterator2.e(err);\n                } finally {\n                  _iterator2.f();\n                }\n\n                _iterator3 = _createForOfIteratorHelper(this.zArray);\n\n                try {\n                  for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                    p = _step3.value;\n                    p.draw(delta);\n                  }\n                } catch (err) {\n                  _iterator3.e(err);\n                } finally {\n                  _iterator3.f();\n                }\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function draw(_x) {\n        return _draw.apply(this, arguments);\n      }\n\n      return draw;\n    }()\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      this.interactionManager.handleClickMode(mode);\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _a;\n\n      var container = this.container,\n          options = container.actualOptions;\n      this.lastZIndex = 0;\n      this.needsSort = false;\n      var handled = false;\n      this.updaters = this._engine.plugins.getUpdaters(container, true);\n      this.interactionManager.init();\n\n      var _iterator4 = _createForOfIteratorHelper(container.plugins),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n              plugin = _step4$value[1];\n\n          if (plugin.particlesInitialization !== undefined) {\n            handled = plugin.particlesInitialization();\n          }\n\n          if (handled) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      this.interactionManager.init();\n\n      var _iterator5 = _createForOfIteratorHelper(container.pathGenerators),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _step5$value = _slicedToArray(_step5.value, 2),\n              pathGenerator = _step5$value[1];\n\n          pathGenerator.init(container);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      this.addManualParticles();\n\n      if (!handled) {\n        for (var group in options.particles.groups) {\n          var groupOptions = options.particles.groups[group];\n\n          for (var i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n            this.addParticle(undefined, groupOptions, group);\n          }\n        }\n\n        for (var _i = this.count; _i < options.particles.number.value; _i++) {\n          this.addParticle();\n        }\n      }\n    }\n  }, {\n    key: \"push\",\n    value: function push(nb, mouse, overrideOptions, group) {\n      this.pushing = true;\n\n      for (var i = 0; i < nb; i++) {\n        this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n      }\n\n      this.pushing = false;\n    }\n  }, {\n    key: \"redraw\",\n    value: function () {\n      var _redraw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.clear();\n                this.init();\n                _context2.next = 4;\n                return this.draw({\n                  value: 0,\n                  factor: 0\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function redraw() {\n        return _redraw.apply(this, arguments);\n      }\n\n      return redraw;\n    }()\n  }, {\n    key: \"remove\",\n    value: function remove(particle, group, override) {\n      this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n  }, {\n    key: \"removeAt\",\n    value: function removeAt(index) {\n      var quantity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var group = arguments.length > 2 ? arguments[2] : undefined;\n      var override = arguments.length > 3 ? arguments[3] : undefined;\n\n      if (index < 0 || index > this.count) {\n        return;\n      }\n\n      var deleted = 0;\n\n      for (var i = index; deleted < quantity && i < this.count; i++) {\n        var particle = this.array[i];\n\n        if (!particle || particle.group !== group) {\n          continue;\n        }\n\n        particle.destroy(override);\n        this.array.splice(i--, 1);\n        var zIdx = this.zArray.indexOf(particle);\n        this.zArray.splice(zIdx, 1);\n        this.pool.push(particle);\n        deleted++;\n\n        this._engine.dispatchEvent(\"particleRemoved\", {\n          container: this.container,\n          data: {\n            particle: particle\n          }\n        });\n      }\n    }\n  }, {\n    key: \"removeQuantity\",\n    value: function removeQuantity(quantity, group) {\n      this.removeAt(0, quantity, group);\n    }\n  }, {\n    key: \"setDensity\",\n    value: function setDensity() {\n      var options = this.container.actualOptions;\n\n      for (var group in options.particles.groups) {\n        this._applyDensity(options.particles.groups[group], 0, group);\n      }\n\n      this._applyDensity(options.particles, options.manualParticles.length);\n    }\n  }, {\n    key: \"update\",\n    value: function () {\n      var _update = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(delta) {\n        var _a, _b, container, particlesToDelete, _iterator6, _step6, _step6$value, pathGenerator, _iterator7, _step7, _step7$value, plugin, _iterator8, _step8, _particle, resizeFactor, _iterator10, _step10, _step10$value, _plugin, _iterator11, _step11, mover, _i2, _particlesToDelete, particle, _iterator9, _step9, _particle2, _iterator12, _step12, updater;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                container = this.container, particlesToDelete = [];\n                _iterator6 = _createForOfIteratorHelper(container.pathGenerators);\n\n                try {\n                  for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                    _step6$value = _slicedToArray(_step6.value, 2), pathGenerator = _step6$value[1];\n                    pathGenerator.update();\n                  }\n                } catch (err) {\n                  _iterator6.e(err);\n                } finally {\n                  _iterator6.f();\n                }\n\n                _iterator7 = _createForOfIteratorHelper(container.plugins);\n\n                try {\n                  for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                    _step7$value = _slicedToArray(_step7.value, 2), plugin = _step7$value[1];\n                    (_a = plugin.update) === null || _a === void 0 ? void 0 : _a.call(plugin, delta);\n                  }\n                } catch (err) {\n                  _iterator7.e(err);\n                } finally {\n                  _iterator7.f();\n                }\n\n                _iterator8 = _createForOfIteratorHelper(this.array);\n                _context3.prev = 6;\n\n                _iterator8.s();\n\n              case 8:\n                if ((_step8 = _iterator8.n()).done) {\n                  _context3.next = 41;\n                  break;\n                }\n\n                _particle = _step8.value;\n                resizeFactor = container.canvas.resizeFactor;\n\n                if (resizeFactor && !_particle.ignoresResizeRatio) {\n                  _particle.position.x *= resizeFactor.width;\n                  _particle.position.y *= resizeFactor.height;\n                  _particle.initialPosition.x *= resizeFactor.width;\n                  _particle.initialPosition.y *= resizeFactor.height;\n                }\n\n                _particle.ignoresResizeRatio = false;\n                _context3.next = 15;\n                return this.interactionManager.reset(_particle);\n\n              case 15:\n                _iterator10 = _createForOfIteratorHelper(this.container.plugins);\n                _context3.prev = 16;\n\n                _iterator10.s();\n\n              case 18:\n                if ((_step10 = _iterator10.n()).done) {\n                  _context3.next = 25;\n                  break;\n                }\n\n                _step10$value = _slicedToArray(_step10.value, 2), _plugin = _step10$value[1];\n\n                if (!_particle.destroyed) {\n                  _context3.next = 22;\n                  break;\n                }\n\n                return _context3.abrupt(\"break\", 25);\n\n              case 22:\n                (_b = _plugin.particleUpdate) === null || _b === void 0 ? void 0 : _b.call(_plugin, _particle, delta);\n\n              case 23:\n                _context3.next = 18;\n                break;\n\n              case 25:\n                _context3.next = 30;\n                break;\n\n              case 27:\n                _context3.prev = 27;\n                _context3.t0 = _context3[\"catch\"](16);\n\n                _iterator10.e(_context3.t0);\n\n              case 30:\n                _context3.prev = 30;\n\n                _iterator10.f();\n\n                return _context3.finish(30);\n\n              case 33:\n                _iterator11 = _createForOfIteratorHelper(this.movers);\n\n                try {\n                  for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n                    mover = _step11.value;\n\n                    if (mover.isEnabled(_particle)) {\n                      mover.move(_particle, delta);\n                    }\n                  }\n                } catch (err) {\n                  _iterator11.e(err);\n                } finally {\n                  _iterator11.f();\n                }\n\n                if (!_particle.destroyed) {\n                  _context3.next = 38;\n                  break;\n                }\n\n                particlesToDelete.push(_particle);\n                return _context3.abrupt(\"continue\", 39);\n\n              case 38:\n                this.quadTree.insert(new Point(_particle.getPosition(), _particle));\n\n              case 39:\n                _context3.next = 8;\n                break;\n\n              case 41:\n                _context3.next = 46;\n                break;\n\n              case 43:\n                _context3.prev = 43;\n                _context3.t1 = _context3[\"catch\"](6);\n\n                _iterator8.e(_context3.t1);\n\n              case 46:\n                _context3.prev = 46;\n\n                _iterator8.f();\n\n                return _context3.finish(46);\n\n              case 49:\n                for (_i2 = 0, _particlesToDelete = particlesToDelete; _i2 < _particlesToDelete.length; _i2++) {\n                  particle = _particlesToDelete[_i2];\n                  this.remove(particle);\n                }\n\n                _context3.next = 52;\n                return this.interactionManager.externalInteract(delta);\n\n              case 52:\n                _iterator9 = _createForOfIteratorHelper(this.array);\n                _context3.prev = 53;\n\n                _iterator9.s();\n\n              case 55:\n                if ((_step9 = _iterator9.n()).done) {\n                  _context3.next = 64;\n                  break;\n                }\n\n                _particle2 = _step9.value;\n                _iterator12 = _createForOfIteratorHelper(this.updaters);\n\n                try {\n                  for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n                    updater = _step12.value;\n                    updater.update(_particle2, delta);\n                  }\n                } catch (err) {\n                  _iterator12.e(err);\n                } finally {\n                  _iterator12.f();\n                }\n\n                if (!(!_particle2.destroyed && !_particle2.spawning)) {\n                  _context3.next = 62;\n                  break;\n                }\n\n                _context3.next = 62;\n                return this.interactionManager.particlesInteract(_particle2, delta);\n\n              case 62:\n                _context3.next = 55;\n                break;\n\n              case 64:\n                _context3.next = 69;\n                break;\n\n              case 66:\n                _context3.prev = 66;\n                _context3.t2 = _context3[\"catch\"](53);\n\n                _iterator9.e(_context3.t2);\n\n              case 69:\n                _context3.prev = 69;\n\n                _iterator9.f();\n\n                return _context3.finish(69);\n\n              case 72:\n                delete container.canvas.resizeFactor;\n\n              case 73:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[6, 43, 46, 49], [16, 27, 30, 33], [53, 66, 69, 72]]);\n      }));\n\n      function update(_x2) {\n        return _update.apply(this, arguments);\n      }\n\n      return update;\n    }()\n  }, {\n    key: \"_applyDensity\",\n    value: function _applyDensity(options, manualCount, group) {\n      var _a;\n\n      if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n        return;\n      }\n\n      var numberOptions = options.number,\n          densityFactor = this._initDensityFactor(numberOptions.density),\n          optParticlesNumber = numberOptions.value,\n          optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber,\n          particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount,\n          particlesCount = Math.min(this.count, this.array.filter(function (t) {\n        return t.group === group;\n      }).length);\n\n      this.limit = numberOptions.limit * densityFactor;\n\n      if (particlesCount < particlesNumber) {\n        this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n      } else if (particlesCount > particlesNumber) {\n        this.removeQuantity(particlesCount - particlesNumber, group);\n      }\n    }\n  }, {\n    key: \"_initDensityFactor\",\n    value: function _initDensityFactor(densityOptions) {\n      var container = this.container;\n\n      if (!container.canvas.element || !densityOptions.enable) {\n        return 1;\n      }\n\n      var canvas = container.canvas.element,\n          pxRatio = container.retina.pixelRatio;\n      return canvas.width * canvas.height / (densityOptions.factor * Math.pow(pxRatio, 2) * densityOptions.area);\n    }\n  }, {\n    key: \"_pushParticle\",\n    value: function _pushParticle(position, overrideOptions, group, initializer) {\n      try {\n        var particle = this.pool.pop();\n\n        if (particle) {\n          particle.init(this.nextId, position, overrideOptions, group);\n        } else {\n          particle = new Particle(this._engine, this.nextId, this.container, position, overrideOptions, group);\n        }\n\n        var canAdd = true;\n\n        if (initializer) {\n          canAdd = initializer(particle);\n        }\n\n        if (!canAdd) {\n          return;\n        }\n\n        this.array.push(particle);\n        this.zArray.push(particle);\n        this.nextId++;\n\n        this._engine.dispatchEvent(\"particleAdded\", {\n          container: this.container,\n          data: {\n            particle: particle\n          }\n        });\n\n        return particle;\n      } catch (e) {\n        console.warn(\"error adding particle: \".concat(e));\n        return;\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this.array.length;\n    }\n  }]);\n\n  return Particles;\n}();","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/tsparticles-engine/esm/Core/Particles.js"],"names":["InteractionManager","Particle","Point","QuadTree","Rectangle","calcPositionFromSize","Particles","engine","container","_engine","nextId","array","zArray","pool","limit","needsSort","lastZIndex","interactionManager","canvasSize","canvas","size","quadTree","width","height","movers","plugins","getMovers","updaters","getUpdaters","options","actualOptions","manualParticles","particle","addParticle","position","overrideOptions","group","initializer","particles","number","countToRemove","count","removeQuantity","_pushParticle","delta","clear","update","sort","a","b","z","id","length","plugin","drawPlugin","p","draw","mode","handleClickMode","_a","handled","init","particlesInitialization","undefined","pathGenerators","pathGenerator","addManualParticles","groups","groupOptions","i","j","value","nb","mouse","pushing","factor","override","removeAt","indexOf","index","quantity","deleted","destroy","splice","zIdx","push","dispatchEvent","data","_applyDensity","particlesToDelete","call","resizeFactor","ignoresResizeRatio","x","y","initialPosition","reset","destroyed","_b","particleUpdate","mover","isEnabled","move","insert","getPosition","remove","externalInteract","updater","spawning","particlesInteract","manualCount","density","enable","numberOptions","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","Math","min","particlesCount","filter","t","abs","densityOptions","element","pxRatio","retina","pixelRatio","area","pop","canAdd","e","console","warn"],"mappings":"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","sourcesContent":["import { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { calcPositionFromSize } from \"../Utils/NumberUtils\";\nexport class Particles {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.nextId = 0;\n        this.array = [];\n        this.zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this.interactionManager = new InteractionManager(this._engine, container);\n        const canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this.array.length;\n    }\n    addManualParticles() {\n        const container = this.container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(calcPositionFromSize({\n                size: container.canvas.size,\n                position: particle.position,\n            }), particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this.container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this.array = [];\n        this.zArray = [];\n    }\n    destroy() {\n        this.array = [];\n        this.zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this.container, canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        container.canvas.clear();\n        await this.update(delta);\n        if (this.needsSort) {\n            this.zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this.zArray) {\n            p.draw(delta);\n        }\n    }\n    handleClickMode(mode) {\n        this.interactionManager.handleClickMode(mode);\n    }\n    init() {\n        var _a;\n        const container = this.container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this.interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this.interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            const particle = this.array[i];\n            if (!particle || particle.group !== group) {\n                continue;\n            }\n            particle.destroy(override);\n            this.array.splice(i--, 1);\n            const zIdx = this.zArray.indexOf(particle);\n            this.zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            deleted++;\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this.container.actualOptions;\n        for (const group in options.particles.groups) {\n            this._applyDensity(options.particles.groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        var _a, _b;\n        const container = this.container, particlesToDelete = [];\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            (_a = plugin.update) === null || _a === void 0 ? void 0 : _a.call(plugin, delta);\n        }\n        for (const particle of this.array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this.interactionManager.reset(particle);\n            for (const [, plugin] of this.container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                (_b = plugin.particleUpdate) === null || _b === void 0 ? void 0 : _b.call(plugin, particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.push(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        for (const particle of particlesToDelete) {\n            this.remove(particle);\n        }\n        await this.interactionManager.externalInteract(delta);\n        for (const particle of this.array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this.interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n    }\n    _applyDensity(options, manualCount, group) {\n        var _a;\n        if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n            return;\n        }\n        const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.array.filter((t) => t.group === group).length);\n        this.limit = numberOptions.limit * densityFactor;\n        if (particlesCount < particlesNumber) {\n            this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n        }\n        else if (particlesCount > particlesNumber) {\n            this.removeQuantity(particlesCount - particlesNumber, group);\n        }\n    }\n    _initDensityFactor(densityOptions) {\n        const container = this.container;\n        if (!container.canvas.element || !densityOptions.enable) {\n            return 1;\n        }\n        const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n        return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n    }\n    _pushParticle(position, overrideOptions, group, initializer) {\n        try {\n            let particle = this.pool.pop();\n            if (particle) {\n                particle.init(this.nextId, position, overrideOptions, group);\n            }\n            else {\n                particle = new Particle(this._engine, this.nextId, this.container, position, overrideOptions, group);\n            }\n            let canAdd = true;\n            if (initializer) {\n                canAdd = initializer(particle);\n            }\n            if (!canAdd) {\n                return;\n            }\n            this.array.push(particle);\n            this.zArray.push(particle);\n            this.nextId++;\n            this._engine.dispatchEvent(\"particleAdded\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n            return particle;\n        }\n        catch (e) {\n            console.warn(`error adding particle: ${e}`);\n            return;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}