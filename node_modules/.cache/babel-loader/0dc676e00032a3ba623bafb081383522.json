{"ast":null,"code":"import { getRangeValue } from \"tsparticles-engine\";\nexport class StarDrawer {\n  draw(context, particle, radius) {\n    var _a;\n\n    const sides = particle.sides,\n          inset = (_a = particle.starInset) !== null && _a !== void 0 ? _a : 2;\n    context.moveTo(0, 0 - radius);\n\n    for (let i = 0; i < sides; i++) {\n      context.rotate(Math.PI / sides);\n      context.lineTo(0, 0 - radius * inset);\n      context.rotate(Math.PI / sides);\n      context.lineTo(0, 0 - radius);\n    }\n  }\n\n  getSidesCount(particle) {\n    var _a, _b;\n\n    const star = particle.shapeData;\n    return Math.round(getRangeValue((_b = (_a = star === null || star === void 0 ? void 0 : star.sides) !== null && _a !== void 0 ? _a : star === null || star === void 0 ? void 0 : star.nb_sides) !== null && _b !== void 0 ? _b : 5));\n  }\n\n  particleInit(container, particle) {\n    var _a;\n\n    const star = particle.shapeData,\n          inset = getRangeValue((_a = star === null || star === void 0 ? void 0 : star.inset) !== null && _a !== void 0 ? _a : 2);\n    particle.starInset = inset;\n  }\n\n}","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/tsparticles-shape-star/esm/StarDrawer.js"],"names":["getRangeValue","StarDrawer","draw","context","particle","radius","_a","sides","inset","starInset","moveTo","i","rotate","Math","PI","lineTo","getSidesCount","_b","star","shapeData","round","nb_sides","particleInit","container"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,OAAO,MAAMC,UAAN,CAAiB;AACpBC,EAAAA,IAAI,CAACC,OAAD,EAAUC,QAAV,EAAoBC,MAApB,EAA4B;AAC5B,QAAIC,EAAJ;;AACA,UAAMC,KAAK,GAAGH,QAAQ,CAACG,KAAvB;AAAA,UAA8BC,KAAK,GAAG,CAACF,EAAE,GAAGF,QAAQ,CAACK,SAAf,MAA8B,IAA9B,IAAsCH,EAAE,KAAK,KAAK,CAAlD,GAAsDA,EAAtD,GAA2D,CAAjG;AACAH,IAAAA,OAAO,CAACO,MAAR,CAAe,CAAf,EAAkB,IAAIL,MAAtB;;AACA,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAApB,EAA2BI,CAAC,EAA5B,EAAgC;AAC5BR,MAAAA,OAAO,CAACS,MAAR,CAAeC,IAAI,CAACC,EAAL,GAAUP,KAAzB;AACAJ,MAAAA,OAAO,CAACY,MAAR,CAAe,CAAf,EAAkB,IAAIV,MAAM,GAAGG,KAA/B;AACAL,MAAAA,OAAO,CAACS,MAAR,CAAeC,IAAI,CAACC,EAAL,GAAUP,KAAzB;AACAJ,MAAAA,OAAO,CAACY,MAAR,CAAe,CAAf,EAAkB,IAAIV,MAAtB;AACH;AACJ;;AACDW,EAAAA,aAAa,CAACZ,QAAD,EAAW;AACpB,QAAIE,EAAJ,EAAQW,EAAR;;AACA,UAAMC,IAAI,GAAGd,QAAQ,CAACe,SAAtB;AACA,WAAON,IAAI,CAACO,KAAL,CAAWpB,aAAa,CAAC,CAACiB,EAAE,GAAG,CAACX,EAAE,GAAGY,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACX,KAAvD,MAAkE,IAAlE,IAA0ED,EAAE,KAAK,KAAK,CAAtF,GAA0FA,EAA1F,GAA+FY,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACG,QAAtJ,MAAoK,IAApK,IAA4KJ,EAAE,KAAK,KAAK,CAAxL,GAA4LA,EAA5L,GAAiM,CAAlM,CAAxB,CAAP;AACH;;AACDK,EAAAA,YAAY,CAACC,SAAD,EAAYnB,QAAZ,EAAsB;AAC9B,QAAIE,EAAJ;;AACA,UAAMY,IAAI,GAAGd,QAAQ,CAACe,SAAtB;AAAA,UAAiCX,KAAK,GAAGR,aAAa,CAAC,CAACM,EAAE,GAAGY,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACV,KAAvD,MAAkE,IAAlE,IAA0EF,EAAE,KAAK,KAAK,CAAtF,GAA0FA,EAA1F,GAA+F,CAAhG,CAAtD;AACAF,IAAAA,QAAQ,CAACK,SAAT,GAAqBD,KAArB;AACH;;AArBmB","sourcesContent":["import { getRangeValue } from \"tsparticles-engine\";\nexport class StarDrawer {\n    draw(context, particle, radius) {\n        var _a;\n        const sides = particle.sides, inset = (_a = particle.starInset) !== null && _a !== void 0 ? _a : 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n    getSidesCount(particle) {\n        var _a, _b;\n        const star = particle.shapeData;\n        return Math.round(getRangeValue((_b = (_a = star === null || star === void 0 ? void 0 : star.sides) !== null && _a !== void 0 ? _a : star === null || star === void 0 ? void 0 : star.nb_sides) !== null && _b !== void 0 ? _b : 5));\n    }\n    particleInit(container, particle) {\n        var _a;\n        const star = particle.shapeData, inset = getRangeValue((_a = star === null || star === void 0 ? void 0 : star.inset) !== null && _a !== void 0 ? _a : 2);\n        particle.starInset = inset;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}