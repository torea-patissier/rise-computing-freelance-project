{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _toConsumableArray from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\n\nfunction getItemsFromInitializer(container, map, initializers) {\n  var force = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var res = map.get(container);\n\n  if (!res || force) {\n    res = _toConsumableArray(initializers.values()).map(function (t) {\n      return t(container);\n    });\n    map.set(container, res);\n  }\n\n  return res;\n}\n\nexport var Plugins = /*#__PURE__*/function () {\n  function Plugins(engine) {\n    _classCallCheck(this, Plugins);\n\n    this._engine = engine;\n    this.plugins = [];\n    this._initializers = {\n      interactors: new Map(),\n      movers: new Map(),\n      updaters: new Map()\n    };\n    this.interactors = new Map();\n    this.movers = new Map();\n    this.updaters = new Map();\n    this.presets = new Map();\n    this.drawers = new Map();\n    this.pathGenerators = new Map();\n  }\n\n  _createClass(Plugins, [{\n    key: \"addInteractor\",\n    value: function addInteractor(name, initInteractor) {\n      this._initializers.interactors.set(name, initInteractor);\n    }\n  }, {\n    key: \"addParticleMover\",\n    value: function addParticleMover(name, initMover) {\n      this._initializers.movers.set(name, initMover);\n    }\n  }, {\n    key: \"addParticleUpdater\",\n    value: function addParticleUpdater(name, initUpdater) {\n      this._initializers.updaters.set(name, initUpdater);\n    }\n  }, {\n    key: \"addPathGenerator\",\n    value: function addPathGenerator(type, pathGenerator) {\n      if (!this.getPathGenerator(type)) {\n        this.pathGenerators.set(type, pathGenerator);\n      }\n    }\n  }, {\n    key: \"addPlugin\",\n    value: function addPlugin(plugin) {\n      if (!this.getPlugin(plugin.id)) {\n        this.plugins.push(plugin);\n      }\n    }\n  }, {\n    key: \"addPreset\",\n    value: function addPreset(presetKey, options) {\n      var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (override || !this.getPreset(presetKey)) {\n        this.presets.set(presetKey, options);\n      }\n    }\n  }, {\n    key: \"addShapeDrawer\",\n    value: function addShapeDrawer(types, drawer) {\n      var _this = this;\n\n      executeOnSingleOrMultiple(types, function (type) {\n        if (!_this.getShapeDrawer(type)) {\n          _this.drawers.set(type, drawer);\n        }\n      });\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy(container) {\n      this.updaters.delete(container);\n      this.movers.delete(container);\n      this.interactors.delete(container);\n    }\n  }, {\n    key: \"getAvailablePlugins\",\n    value: function getAvailablePlugins(container) {\n      var res = new Map();\n\n      var _iterator = _createForOfIteratorHelper(this.plugins),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var plugin = _step.value;\n\n          if (!plugin.needsPlugin(container.actualOptions)) {\n            continue;\n          }\n\n          res.set(plugin.id, plugin.getPlugin(container));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return res;\n    }\n  }, {\n    key: \"getInteractors\",\n    value: function getInteractors(container) {\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n  }, {\n    key: \"getMovers\",\n    value: function getMovers(container) {\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n  }, {\n    key: \"getPathGenerator\",\n    value: function getPathGenerator(type) {\n      return this.pathGenerators.get(type);\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(plugin) {\n      return this.plugins.find(function (t) {\n        return t.id === plugin;\n      });\n    }\n  }, {\n    key: \"getPreset\",\n    value: function getPreset(preset) {\n      return this.presets.get(preset);\n    }\n  }, {\n    key: \"getShapeDrawer\",\n    value: function getShapeDrawer(type) {\n      return this.drawers.get(type);\n    }\n  }, {\n    key: \"getSupportedShapes\",\n    value: function getSupportedShapes() {\n      return this.drawers.keys();\n    }\n  }, {\n    key: \"getUpdaters\",\n    value: function getUpdaters(container) {\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n  }, {\n    key: \"loadOptions\",\n    value: function loadOptions(options, sourceOptions) {\n      var _iterator2 = _createForOfIteratorHelper(this.plugins),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var plugin = _step2.value;\n          plugin.loadOptions(options, sourceOptions);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"loadParticlesOptions\",\n    value: function loadParticlesOptions(container, options) {\n      var updaters = this.updaters.get(container);\n\n      if (!updaters) {\n        return;\n      }\n\n      for (var _len = arguments.length, sourceOptions = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        sourceOptions[_key - 2] = arguments[_key];\n      }\n\n      var _iterator3 = _createForOfIteratorHelper(updaters),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var updater = _step3.value;\n\n          if (updater.loadOptions) {\n            updater.loadOptions.apply(updater, [options].concat(sourceOptions));\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }]);\n\n  return Plugins;\n}();","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js"],"names":["executeOnSingleOrMultiple","getItemsFromInitializer","container","map","initializers","force","res","get","values","t","set","Plugins","engine","_engine","plugins","_initializers","interactors","Map","movers","updaters","presets","drawers","pathGenerators","name","initInteractor","initMover","initUpdater","type","pathGenerator","getPathGenerator","plugin","getPlugin","id","push","presetKey","options","override","getPreset","types","drawer","getShapeDrawer","delete","needsPlugin","actualOptions","find","preset","keys","sourceOptions","loadOptions","updater"],"mappings":"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","sourcesContent":["import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        if (!this.getPathGenerator(type)) {\n            this.pathGenerators.set(type, pathGenerator);\n        }\n    }\n    addPlugin(plugin) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n    }\n    addPreset(presetKey, options, override = false) {\n        if (override || !this.getPreset(presetKey)) {\n            this.presets.set(presetKey, options);\n        }\n    }\n    addShapeDrawer(types, drawer) {\n        executeOnSingleOrMultiple(types, (type) => {\n            if (!this.getShapeDrawer(type)) {\n                this.drawers.set(type, drawer);\n            }\n        });\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (!plugin.needsPlugin(container.actualOptions)) {\n                continue;\n            }\n            res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            if (updater.loadOptions) {\n                updater.loadOptions(options, ...sourceOptions);\n            }\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}