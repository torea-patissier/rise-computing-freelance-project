{"ast":null,"code":"import { executeOnSingleOrMultiple, isInArray } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nimport { Absorbers } from \"./Absorbers\";\n\nclass AbsorbersPlugin {\n  constructor() {\n    this.id = \"absorbers\";\n  }\n\n  getPlugin(container) {\n    return new Absorbers(container);\n  }\n\n  loadOptions(options, source) {\n    var _a, _b;\n\n    if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n      return;\n    }\n\n    if (source === null || source === void 0 ? void 0 : source.absorbers) {\n      options.absorbers = executeOnSingleOrMultiple(source.absorbers, absorber => {\n        const tmp = new Absorber();\n        tmp.load(absorber);\n        return tmp;\n      });\n    }\n\n    options.interactivity.modes.absorbers = executeOnSingleOrMultiple((_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers, absorber => {\n      const tmp = new Absorber();\n      tmp.load(absorber);\n      return tmp;\n    });\n  }\n\n  needsPlugin(options) {\n    var _a, _b, _c;\n\n    if (!options) {\n      return false;\n    }\n\n    const absorbers = options.absorbers;\n\n    if (absorbers instanceof Array) {\n      return !!absorbers.length;\n    } else if (absorbers) {\n      return true;\n    } else if (((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) && isInArray(\"absorber\", options.interactivity.events.onClick.mode)) {\n      return true;\n    }\n\n    return false;\n  }\n\n}\n\nexport async function loadAbsorbersPlugin(engine) {\n  const plugin = new AbsorbersPlugin();\n  await engine.addPlugin(plugin);\n}\nexport * from \"./AbsorberContainer\";\nexport * from \"./Enums/AbsorberClickMode\";","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/tsparticles-plugin-absorbers/esm/index.js"],"names":["executeOnSingleOrMultiple","isInArray","Absorber","Absorbers","AbsorbersPlugin","constructor","id","getPlugin","container","loadOptions","options","source","_a","_b","needsPlugin","absorbers","absorber","tmp","load","interactivity","modes","_c","Array","length","events","onClick","mode","loadAbsorbersPlugin","engine","plugin","addPlugin"],"mappings":"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","sourcesContent":["import { executeOnSingleOrMultiple, isInArray } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nimport { Absorbers } from \"./Absorbers\";\nclass AbsorbersPlugin {\n    constructor() {\n        this.id = \"absorbers\";\n    }\n    getPlugin(container) {\n        return new Absorbers(container);\n    }\n    loadOptions(options, source) {\n        var _a, _b;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source === null || source === void 0 ? void 0 : source.absorbers) {\n            options.absorbers = executeOnSingleOrMultiple(source.absorbers, (absorber) => {\n                const tmp = new Absorber();\n                tmp.load(absorber);\n                return tmp;\n            });\n        }\n        options.interactivity.modes.absorbers = executeOnSingleOrMultiple((_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers, (absorber) => {\n            const tmp = new Absorber();\n            tmp.load(absorber);\n            return tmp;\n        });\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (!options) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        if (absorbers instanceof Array) {\n            return !!absorbers.length;\n        }\n        else if (absorbers) {\n            return true;\n        }\n        else if (((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n            isInArray(\"absorber\", options.interactivity.events.onClick.mode)) {\n            return true;\n        }\n        return false;\n    }\n}\nexport async function loadAbsorbersPlugin(engine) {\n    const plugin = new AbsorbersPlugin();\n    await engine.addPlugin(plugin);\n}\nexport * from \"./AbsorberContainer\";\nexport * from \"./Enums/AbsorberClickMode\";\n"]},"metadata":{},"sourceType":"module"}