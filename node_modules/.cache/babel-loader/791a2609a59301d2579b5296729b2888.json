{"ast":null,"code":"import _classCallCheck from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport var RgbColorManager = /*#__PURE__*/function () {\n  function RgbColorManager() {\n    _classCallCheck(this, RgbColorManager);\n\n    this.key = \"rgb\";\n    this.stringPrefix = \"rgb\";\n  }\n\n  _createClass(RgbColorManager, [{\n    key: \"handleColor\",\n    value: function handleColor(color) {\n      var _a;\n\n      var colorValue = color.value,\n          rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n\n      if (rgbColor.r !== undefined) {\n        return rgbColor;\n      }\n    }\n  }, {\n    key: \"handleRangeColor\",\n    value: function handleRangeColor(color) {\n      var _a;\n\n      var colorValue = color.value,\n          rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n\n      if (rgbColor.r !== undefined) {\n        return {\n          r: getRangeValue(rgbColor.r),\n          g: getRangeValue(rgbColor.g),\n          b: getRangeValue(rgbColor.b)\n        };\n      }\n    }\n  }, {\n    key: \"parseString\",\n    value: function parseString(input) {\n      if (!input.startsWith(this.stringPrefix)) {\n        return;\n      }\n\n      var regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i,\n          result = regex.exec(input);\n      return result ? {\n        a: result.length > 4 ? parseAlpha(result[5]) : 1,\n        b: parseInt(result[3], 10),\n        g: parseInt(result[2], 10),\n        r: parseInt(result[1], 10)\n      } : undefined;\n    }\n  }]);\n\n  return RgbColorManager;\n}();","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js"],"names":["getRangeValue","parseAlpha","RgbColorManager","key","stringPrefix","color","_a","colorValue","value","rgbColor","rgb","r","undefined","g","b","input","startsWith","regex","result","exec","a","length","parseInt"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,eAA1C;AACA,WAAaC,eAAb;AACI,6BAAc;AAAA;;AACV,SAAKC,GAAL,GAAW,KAAX;AACA,SAAKC,YAAL,GAAoB,KAApB;AACH;;AAJL;AAAA;AAAA,gCAKgBC,KALhB,EAKuB;AACf,UAAIC,EAAJ;;AACA,UAAMC,UAAU,GAAGF,KAAK,CAACG,KAAzB;AAAA,UAAgCC,QAAQ,GAAG,CAACH,EAAE,GAAGC,UAAU,CAACG,GAAjB,MAA0B,IAA1B,IAAkCJ,EAAE,KAAK,KAAK,CAA9C,GAAkDA,EAAlD,GAAuDD,KAAK,CAACG,KAAxG;;AACA,UAAIC,QAAQ,CAACE,CAAT,KAAeC,SAAnB,EAA8B;AAC1B,eAAOH,QAAP;AACH;AACJ;AAXL;AAAA;AAAA,qCAYqBJ,KAZrB,EAY4B;AACpB,UAAIC,EAAJ;;AACA,UAAMC,UAAU,GAAGF,KAAK,CAACG,KAAzB;AAAA,UAAgCC,QAAQ,GAAG,CAACH,EAAE,GAAGC,UAAU,CAACG,GAAjB,MAA0B,IAA1B,IAAkCJ,EAAE,KAAK,KAAK,CAA9C,GAAkDA,EAAlD,GAAuDD,KAAK,CAACG,KAAxG;;AACA,UAAIC,QAAQ,CAACE,CAAT,KAAeC,SAAnB,EAA8B;AAC1B,eAAO;AACHD,UAAAA,CAAC,EAAEX,aAAa,CAACS,QAAQ,CAACE,CAAV,CADb;AAEHE,UAAAA,CAAC,EAAEb,aAAa,CAACS,QAAQ,CAACI,CAAV,CAFb;AAGHC,UAAAA,CAAC,EAAEd,aAAa,CAACS,QAAQ,CAACK,CAAV;AAHb,SAAP;AAKH;AACJ;AAtBL;AAAA;AAAA,gCAuBgBC,KAvBhB,EAuBuB;AACf,UAAI,CAACA,KAAK,CAACC,UAAN,CAAiB,KAAKZ,YAAtB,CAAL,EAA0C;AACtC;AACH;;AACD,UAAMa,KAAK,GAAG,kEAAd;AAAA,UAAkFC,MAAM,GAAGD,KAAK,CAACE,IAAN,CAAWJ,KAAX,CAA3F;AACA,aAAOG,MAAM,GACP;AACEE,QAAAA,CAAC,EAAEF,MAAM,CAACG,MAAP,GAAgB,CAAhB,GAAoBpB,UAAU,CAACiB,MAAM,CAAC,CAAD,CAAP,CAA9B,GAA4C,CADjD;AAEEJ,QAAAA,CAAC,EAAEQ,QAAQ,CAACJ,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAFb;AAGEL,QAAAA,CAAC,EAAES,QAAQ,CAACJ,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAHb;AAIEP,QAAAA,CAAC,EAAEW,QAAQ,CAACJ,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ;AAJb,OADO,GAOPN,SAPN;AAQH;AApCL;;AAAA;AAAA","sourcesContent":["import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        var _a;\n        const colorValue = color.value, rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        var _a;\n        const colorValue = color.value, rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}