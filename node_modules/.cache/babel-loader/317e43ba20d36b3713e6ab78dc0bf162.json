{"ast":null,"code":"import _regeneratorRuntime from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _createForOfIteratorHelper from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _createSuper from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _inherits from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { Circle, ExternalInteractorBase, Vector, clamp, getDistances, getEasing, isInArray, mouseMoveEvent } from \"tsparticles-engine\";\nimport { Attract } from \"./Options/Classes/Attract\";\nexport var Attractor = /*#__PURE__*/function (_ExternalInteractorBa) {\n  _inherits(Attractor, _ExternalInteractorBa);\n\n  var _super = _createSuper(Attractor);\n\n  function Attractor(engine, container) {\n    var _this;\n\n    _classCallCheck(this, Attractor);\n\n    _this = _super.call(this, container);\n    _this._engine = engine;\n\n    if (!container.attract) {\n      container.attract = {\n        particles: []\n      };\n    }\n\n    _this.handleClickMode = function (mode) {\n      var options = _this.container.actualOptions,\n          attract = options.interactivity.modes.attract;\n\n      if (!attract || mode !== \"attract\") {\n        return;\n      }\n\n      if (!container.attract) {\n        container.attract = {\n          particles: []\n        };\n      }\n\n      container.attract.clicking = true;\n      container.attract.count = 0;\n\n      var _iterator = _createForOfIteratorHelper(container.attract.particles),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var particle = _step.value;\n\n          if (!_this.isEnabled(particle)) {\n            continue;\n          }\n\n          particle.velocity.setTo(particle.initialVelocity);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      container.attract.particles = [];\n      container.attract.finish = false;\n      setTimeout(function () {\n        if (!container.destroyed) {\n          if (!container.attract) {\n            container.attract = {\n              particles: []\n            };\n          }\n\n          container.attract.clicking = false;\n        }\n      }, attract.duration * 1000);\n    };\n\n    return _this;\n  }\n\n  _createClass(Attractor, [{\n    key: \"clear\",\n    value: function clear() {}\n  }, {\n    key: \"init\",\n    value: function init() {\n      var container = this.container,\n          attract = container.actualOptions.interactivity.modes.attract;\n\n      if (!attract) {\n        return;\n      }\n\n      container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n  }, {\n    key: \"interact\",\n    value: function () {\n      var _interact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var container, options, mouseMoveStatus, events, hoverEnabled, hoverMode, clickEnabled, clickMode;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n\n                if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n                  this.hoverAttract();\n                } else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n                  this.clickAttract();\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function interact() {\n        return _interact.apply(this, arguments);\n      }\n\n      return interact;\n    }()\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      var _a;\n\n      var container = this.container,\n          options = container.actualOptions,\n          mouse = container.interactivity.mouse,\n          events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events;\n\n      if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n        return false;\n      }\n\n      var hoverMode = events.onHover.mode,\n          clickMode = events.onClick.mode;\n      return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n  }, {\n    key: \"loadModeOptions\",\n    value: function loadModeOptions(options) {\n      if (!options.attract) {\n        options.attract = new Attract();\n      }\n\n      for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        sources[_key - 1] = arguments[_key];\n      }\n\n      for (var _i = 0, _sources = sources; _i < _sources.length; _i++) {\n        var source = _sources[_i];\n        options.attract.load(source === null || source === void 0 ? void 0 : source.attract);\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }, {\n    key: \"clickAttract\",\n    value: function clickAttract() {\n      var container = this.container;\n\n      if (!container.attract) {\n        container.attract = {\n          particles: []\n        };\n      }\n\n      if (!container.attract.finish) {\n        if (!container.attract.count) {\n          container.attract.count = 0;\n        }\n\n        container.attract.count++;\n\n        if (container.attract.count === container.particles.count) {\n          container.attract.finish = true;\n        }\n      }\n\n      if (container.attract.clicking) {\n        var mousePos = container.interactivity.mouse.clickPosition,\n            attractRadius = container.retina.attractModeDistance;\n\n        if (!attractRadius || attractRadius < 0 || !mousePos) {\n          return;\n        }\n\n        this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n      } else if (container.attract.clicking === false) {\n        container.attract.particles = [];\n      }\n\n      return;\n    }\n  }, {\n    key: \"hoverAttract\",\n    value: function hoverAttract() {\n      var container = this.container,\n          mousePos = container.interactivity.mouse.position,\n          attractRadius = container.retina.attractModeDistance;\n\n      if (!attractRadius || attractRadius < 0 || !mousePos) {\n        return;\n      }\n\n      this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n  }, {\n    key: \"processAttract\",\n    value: function processAttract(position, attractRadius, area) {\n      var _this2 = this;\n\n      var container = this.container,\n          attractOptions = container.actualOptions.interactivity.modes.attract;\n\n      if (!attractOptions) {\n        return;\n      }\n\n      var query = container.particles.quadTree.query(area, function (p) {\n        return _this2.isEnabled(p);\n      });\n\n      var _iterator2 = _createForOfIteratorHelper(query),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var particle = _step2.value;\n\n          var _getDistances = getDistances(particle.position, position),\n              dx = _getDistances.dx,\n              dy = _getDistances.dy,\n              distance = _getDistances.distance;\n\n          var velocity = attractOptions.speed * attractOptions.factor;\n          var attractFactor = clamp(getEasing(attractOptions.easing)(1 - distance / attractRadius) * velocity, 0, attractOptions.maxSpeed);\n          var normVec = Vector.create(distance === 0 ? velocity : dx / distance * attractFactor, distance === 0 ? velocity : dy / distance * attractFactor);\n          particle.position.subFrom(normVec);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }]);\n\n  return Attractor;\n}(ExternalInteractorBase);","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/tsparticles-interaction-external-attract/esm/Attractor.js"],"names":["Circle","ExternalInteractorBase","Vector","clamp","getDistances","getEasing","isInArray","mouseMoveEvent","Attract","Attractor","engine","container","_engine","attract","particles","handleClickMode","mode","options","actualOptions","interactivity","modes","clicking","count","particle","isEnabled","velocity","setTo","initialVelocity","finish","setTimeout","destroyed","duration","retina","attractModeDistance","distance","pixelRatio","mouseMoveStatus","status","events","hoverEnabled","onHover","enable","hoverMode","clickEnabled","onClick","clickMode","hoverAttract","clickAttract","_a","mouse","position","clickPosition","sources","source","load","mousePos","attractRadius","processAttract","x","y","area","attractOptions","query","quadTree","p","dx","dy","speed","factor","attractFactor","easing","maxSpeed","normVec","create","subFrom"],"mappings":"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","sourcesContent":["import { Circle, ExternalInteractorBase, Vector, clamp, getDistances, getEasing, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Attract } from \"./Options/Classes/Attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (!container.destroyed) {\n                    if (!container.attract) {\n                        container.attract = { particles: [] };\n                    }\n                    container.attract.clicking = false;\n                }\n            }, attract.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this.hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this.clickAttract();\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source === null || source === void 0 ? void 0 : source.attract);\n        }\n    }\n    reset() {\n    }\n    clickAttract() {\n        const container = this.container;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        if (!container.attract.finish) {\n            if (!container.attract.count) {\n                container.attract.count = 0;\n            }\n            container.attract.count++;\n            if (container.attract.count === container.particles.count) {\n                container.attract.finish = true;\n            }\n        }\n        if (container.attract.clicking) {\n            const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n            if (!attractRadius || attractRadius < 0 || !mousePos) {\n                return;\n            }\n            this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        }\n        else if (container.attract.clicking === false) {\n            container.attract.particles = [];\n        }\n        return;\n    }\n    hoverAttract() {\n        const container = this.container, mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n        if (!attractRadius || attractRadius < 0 || !mousePos) {\n            return;\n        }\n        this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n    processAttract(position, attractRadius, area) {\n        const container = this.container, attractOptions = container.actualOptions.interactivity.modes.attract;\n        if (!attractOptions) {\n            return;\n        }\n        const query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position);\n            const velocity = attractOptions.speed * attractOptions.factor;\n            const attractFactor = clamp(getEasing(attractOptions.easing)(1 - distance / attractRadius) * velocity, 0, attractOptions.maxSpeed);\n            const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n            particle.position.subFrom(normVec);\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}