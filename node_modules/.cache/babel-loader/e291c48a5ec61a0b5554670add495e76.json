{"ast":null,"code":"import _classCallCheck from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport var Retina = /*#__PURE__*/function () {\n  function Retina(container) {\n    _classCallCheck(this, Retina);\n\n    this.container = container;\n  }\n\n  _createClass(Retina, [{\n    key: \"init\",\n    value: function init() {\n      var container = this.container,\n          options = container.actualOptions;\n      this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n      this.reduceFactor = 1;\n      var ratio = this.pixelRatio;\n\n      if (container.canvas.element) {\n        var element = container.canvas.element;\n        container.canvas.size.width = element.offsetWidth * ratio;\n        container.canvas.size.height = element.offsetHeight * ratio;\n      }\n\n      var particles = options.particles;\n      this.attractDistance = getRangeValue(particles.move.attract.distance) * ratio;\n      this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n      this.maxSpeed = getRangeValue(particles.move.gravity.maxSpeed) * ratio;\n    }\n  }, {\n    key: \"initParticle\",\n    value: function initParticle(particle) {\n      var options = particle.options,\n          ratio = this.pixelRatio,\n          moveDistance = options.move.distance,\n          props = particle.retina;\n      props.attractDistance = getRangeValue(options.move.attract.distance) * ratio;\n      props.moveDrift = getRangeValue(options.move.drift) * ratio;\n      props.moveSpeed = getRangeValue(options.move.speed) * ratio;\n      props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n      var maxDistance = props.maxDistance;\n      maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n      maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n      props.maxSpeed = getRangeValue(options.move.gravity.maxSpeed) * ratio;\n    }\n  }]);\n\n  return Retina;\n}();","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/tsparticles-engine/esm/Core/Retina.js"],"names":["getRangeValue","isSsr","Retina","container","options","actualOptions","pixelRatio","detectRetina","window","devicePixelRatio","reduceFactor","ratio","canvas","element","size","width","offsetWidth","height","offsetHeight","particles","attractDistance","move","attract","distance","sizeAnimationSpeed","animation","speed","maxSpeed","gravity","particle","moveDistance","props","retina","moveDrift","drift","moveSpeed","maxDistance","horizontal","undefined","vertical"],"mappings":";;AAAA,SAASA,aAAT,QAA8B,sBAA9B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,WAAaC,MAAb;AACI,kBAAYC,SAAZ,EAAuB;AAAA;;AACnB,SAAKA,SAAL,GAAiBA,SAAjB;AACH;;AAHL;AAAA;AAAA,2BAIW;AACH,UAAMA,SAAS,GAAG,KAAKA,SAAvB;AAAA,UAAkCC,OAAO,GAAGD,SAAS,CAACE,aAAtD;AACA,WAAKC,UAAL,GAAkB,CAACF,OAAO,CAACG,YAAT,IAAyBN,KAAK,EAA9B,GAAmC,CAAnC,GAAuCO,MAAM,CAACC,gBAAhE;AACA,WAAKC,YAAL,GAAoB,CAApB;AACA,UAAMC,KAAK,GAAG,KAAKL,UAAnB;;AACA,UAAIH,SAAS,CAACS,MAAV,CAAiBC,OAArB,EAA8B;AAC1B,YAAMA,OAAO,GAAGV,SAAS,CAACS,MAAV,CAAiBC,OAAjC;AACAV,QAAAA,SAAS,CAACS,MAAV,CAAiBE,IAAjB,CAAsBC,KAAtB,GAA8BF,OAAO,CAACG,WAAR,GAAsBL,KAApD;AACAR,QAAAA,SAAS,CAACS,MAAV,CAAiBE,IAAjB,CAAsBG,MAAtB,GAA+BJ,OAAO,CAACK,YAAR,GAAuBP,KAAtD;AACH;;AACD,UAAMQ,SAAS,GAAGf,OAAO,CAACe,SAA1B;AACA,WAAKC,eAAL,GAAuBpB,aAAa,CAACmB,SAAS,CAACE,IAAV,CAAeC,OAAf,CAAuBC,QAAxB,CAAb,GAAiDZ,KAAxE;AACA,WAAKa,kBAAL,GAA0BxB,aAAa,CAACmB,SAAS,CAACL,IAAV,CAAeW,SAAf,CAAyBC,KAA1B,CAAb,GAAgDf,KAA1E;AACA,WAAKgB,QAAL,GAAgB3B,aAAa,CAACmB,SAAS,CAACE,IAAV,CAAeO,OAAf,CAAuBD,QAAxB,CAAb,GAAiDhB,KAAjE;AACH;AAlBL;AAAA;AAAA,iCAmBiBkB,QAnBjB,EAmB2B;AACnB,UAAMzB,OAAO,GAAGyB,QAAQ,CAACzB,OAAzB;AAAA,UAAkCO,KAAK,GAAG,KAAKL,UAA/C;AAAA,UAA2DwB,YAAY,GAAG1B,OAAO,CAACiB,IAAR,CAAaE,QAAvF;AAAA,UAAiGQ,KAAK,GAAGF,QAAQ,CAACG,MAAlH;AACAD,MAAAA,KAAK,CAACX,eAAN,GAAwBpB,aAAa,CAACI,OAAO,CAACiB,IAAR,CAAaC,OAAb,CAAqBC,QAAtB,CAAb,GAA+CZ,KAAvE;AACAoB,MAAAA,KAAK,CAACE,SAAN,GAAkBjC,aAAa,CAACI,OAAO,CAACiB,IAAR,CAAaa,KAAd,CAAb,GAAoCvB,KAAtD;AACAoB,MAAAA,KAAK,CAACI,SAAN,GAAkBnC,aAAa,CAACI,OAAO,CAACiB,IAAR,CAAaK,KAAd,CAAb,GAAoCf,KAAtD;AACAoB,MAAAA,KAAK,CAACP,kBAAN,GAA2BxB,aAAa,CAACI,OAAO,CAACU,IAAR,CAAaW,SAAb,CAAuBC,KAAxB,CAAb,GAA8Cf,KAAzE;AACA,UAAMyB,WAAW,GAAGL,KAAK,CAACK,WAA1B;AACAA,MAAAA,WAAW,CAACC,UAAZ,GAAyBP,YAAY,CAACO,UAAb,KAA4BC,SAA5B,GAAwCR,YAAY,CAACO,UAAb,GAA0B1B,KAAlE,GAA0E2B,SAAnG;AACAF,MAAAA,WAAW,CAACG,QAAZ,GAAuBT,YAAY,CAACS,QAAb,KAA0BD,SAA1B,GAAsCR,YAAY,CAACS,QAAb,GAAwB5B,KAA9D,GAAsE2B,SAA7F;AACAP,MAAAA,KAAK,CAACJ,QAAN,GAAiB3B,aAAa,CAACI,OAAO,CAACiB,IAAR,CAAaO,OAAb,CAAqBD,QAAtB,CAAb,GAA+ChB,KAAhE;AACH;AA7BL;;AAAA;AAAA","sourcesContent":["import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles;\n        this.attractDistance = getRangeValue(particles.move.attract.distance) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n        this.maxSpeed = getRangeValue(particles.move.gravity.maxSpeed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveDistance = options.move.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(options.move.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(options.move.drift) * ratio;\n        props.moveSpeed = getRangeValue(options.move.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(options.move.gravity.maxSpeed) * ratio;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}