{"ast":null,"code":"import _classCallCheck from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _createSuper from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _inherits from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { Range } from \"./Range\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport var Circle = /*#__PURE__*/function (_Range) {\n  _inherits(Circle, _Range);\n\n  var _super = _createSuper(Circle);\n\n  function Circle(x, y, radius) {\n    var _this;\n\n    _classCallCheck(this, Circle);\n\n    _this = _super.call(this, x, y);\n    _this.radius = radius;\n    return _this;\n  }\n\n  _createClass(Circle, [{\n    key: \"contains\",\n    value: function contains(point) {\n      return getDistance(point, this.position) <= this.radius;\n    }\n  }, {\n    key: \"intersects\",\n    value: function intersects(range) {\n      var rect = range,\n          circle = range,\n          pos1 = this.position,\n          pos2 = range.position,\n          distPos = {\n        x: Math.abs(pos2.x - pos1.x),\n        y: Math.abs(pos2.y - pos1.y)\n      },\n          r = this.radius;\n\n      if (circle.radius !== undefined) {\n        var rSum = r + circle.radius,\n            dist = Math.sqrt(Math.pow(distPos.x, 2) + Math.pow(distPos.y, 2));\n        return rSum > dist;\n      } else if (rect.size !== undefined) {\n        var w = rect.size.width,\n            h = rect.size.height,\n            edges = Math.pow(distPos.x - w, 2) + Math.pow(distPos.y - h, 2);\n        return edges <= Math.pow(r, 2) || distPos.x <= r + w && distPos.y <= r + h || distPos.x <= w || distPos.y <= h;\n      }\n\n      return false;\n    }\n  }]);\n\n  return Circle;\n}(Range);","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/tsparticles-engine/esm/Core/Utils/Circle.js"],"names":["Range","getDistance","Circle","x","y","radius","point","position","range","rect","circle","pos1","pos2","distPos","Math","abs","r","undefined","rSum","dist","sqrt","size","w","width","h","height","edges","pow"],"mappings":";;;;AAAA,SAASA,KAAT,QAAsB,SAAtB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,WAAaC,MAAb;AAAA;;AAAA;;AACI,kBAAYC,CAAZ,EAAeC,CAAf,EAAkBC,MAAlB,EAA0B;AAAA;;AAAA;;AACtB,8BAAMF,CAAN,EAASC,CAAT;AACA,UAAKC,MAAL,GAAcA,MAAd;AAFsB;AAGzB;;AAJL;AAAA;AAAA,6BAKaC,KALb,EAKoB;AACZ,aAAOL,WAAW,CAACK,KAAD,EAAQ,KAAKC,QAAb,CAAX,IAAqC,KAAKF,MAAjD;AACH;AAPL;AAAA;AAAA,+BAQeG,KARf,EAQsB;AACd,UAAMC,IAAI,GAAGD,KAAb;AAAA,UAAoBE,MAAM,GAAGF,KAA7B;AAAA,UAAoCG,IAAI,GAAG,KAAKJ,QAAhD;AAAA,UAA0DK,IAAI,GAAGJ,KAAK,CAACD,QAAvE;AAAA,UAAiFM,OAAO,GAAG;AAAEV,QAAAA,CAAC,EAAEW,IAAI,CAACC,GAAL,CAASH,IAAI,CAACT,CAAL,GAASQ,IAAI,CAACR,CAAvB,CAAL;AAAgCC,QAAAA,CAAC,EAAEU,IAAI,CAACC,GAAL,CAASH,IAAI,CAACR,CAAL,GAASO,IAAI,CAACP,CAAvB;AAAnC,OAA3F;AAAA,UAA2JY,CAAC,GAAG,KAAKX,MAApK;;AACA,UAAIK,MAAM,CAACL,MAAP,KAAkBY,SAAtB,EAAiC;AAC7B,YAAMC,IAAI,GAAGF,CAAC,GAAGN,MAAM,CAACL,MAAxB;AAAA,YAAgCc,IAAI,GAAGL,IAAI,CAACM,IAAL,CAAU,SAAAP,OAAO,CAACV,CAAR,EAAa,CAAb,aAAiBU,OAAO,CAACT,CAAzB,EAA8B,CAA9B,CAAV,CAAvC;AACA,eAAOc,IAAI,GAAGC,IAAd;AACH,OAHD,MAIK,IAAIV,IAAI,CAACY,IAAL,KAAcJ,SAAlB,EAA6B;AAC9B,YAAMK,CAAC,GAAGb,IAAI,CAACY,IAAL,CAAUE,KAApB;AAAA,YAA2BC,CAAC,GAAGf,IAAI,CAACY,IAAL,CAAUI,MAAzC;AAAA,YAAiDC,KAAK,GAAGZ,IAAI,CAACa,GAAL,CAASd,OAAO,CAACV,CAAR,GAAYmB,CAArB,EAAwB,CAAxB,IAA6BR,IAAI,CAACa,GAAL,CAASd,OAAO,CAACT,CAAR,GAAYoB,CAArB,EAAwB,CAAxB,CAAtF;AACA,eAAOE,KAAK,aAAIV,CAAJ,EAAS,CAAT,CAAL,IAAoBH,OAAO,CAACV,CAAR,IAAaa,CAAC,GAAGM,CAAjB,IAAsBT,OAAO,CAACT,CAAR,IAAaY,CAAC,GAAGQ,CAA3D,IAAiEX,OAAO,CAACV,CAAR,IAAamB,CAA9E,IAAmFT,OAAO,CAACT,CAAR,IAAaoB,CAAvG;AACH;;AACD,aAAO,KAAP;AACH;AAnBL;;AAAA;AAAA,EAA4BxB,KAA5B","sourcesContent":["import { Range } from \"./Range\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const rect = range, circle = range, pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (circle.radius !== undefined) {\n            const rSum = r + circle.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (rect.size !== undefined) {\n            const w = rect.size.width, h = rect.size.height, edges = Math.pow(distPos.x - w, 2) + Math.pow(distPos.y - h, 2);\n            return edges <= r ** 2 || (distPos.x <= r + w && distPos.y <= r + h) || distPos.x <= w || distPos.y <= h;\n        }\n        return false;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}