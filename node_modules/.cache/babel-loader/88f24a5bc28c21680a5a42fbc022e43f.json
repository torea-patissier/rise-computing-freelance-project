{"ast":null,"code":"import _classCallCheck from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport var Interactivity = /*#__PURE__*/function () {\n  function Interactivity(engine, container) {\n    _classCallCheck(this, Interactivity);\n\n    this.detectsOn = \"window\";\n    this.events = new Events();\n    this.modes = new Modes(engine, container);\n  }\n\n  _createClass(Interactivity, [{\n    key: \"load\",\n    value: function load(data) {\n      var _a;\n\n      if (!data) {\n        return;\n      }\n\n      var detectsOn = (_a = data.detectsOn) !== null && _a !== void 0 ? _a : data.detect_on;\n\n      if (detectsOn !== undefined) {\n        this.detectsOn = detectsOn;\n      }\n\n      this.events.load(data.events);\n      this.modes.load(data.modes);\n    }\n  }, {\n    key: \"detect_on\",\n    get: function get() {\n      return this.detectsOn;\n    },\n    set: function set(value) {\n      this.detectsOn = value;\n    }\n  }]);\n\n  return Interactivity;\n}();","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js"],"names":["Events","Modes","Interactivity","engine","container","detectsOn","events","modes","data","_a","detect_on","undefined","load","value"],"mappings":";;AAAA,SAASA,MAAT,QAAuB,iBAAvB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,WAAaC,aAAb;AACI,yBAAYC,MAAZ,EAAoBC,SAApB,EAA+B;AAAA;;AAC3B,SAAKC,SAAL,GAAiB,QAAjB;AACA,SAAKC,MAAL,GAAc,IAAIN,MAAJ,EAAd;AACA,SAAKO,KAAL,GAAa,IAAIN,KAAJ,CAAUE,MAAV,EAAkBC,SAAlB,CAAb;AACH;;AALL;AAAA;AAAA,yBAYSI,IAZT,EAYe;AACP,UAAIC,EAAJ;;AACA,UAAI,CAACD,IAAL,EAAW;AACP;AACH;;AACD,UAAMH,SAAS,GAAG,CAACI,EAAE,GAAGD,IAAI,CAACH,SAAX,MAA0B,IAA1B,IAAkCI,EAAE,KAAK,KAAK,CAA9C,GAAkDA,EAAlD,GAAuDD,IAAI,CAACE,SAA9E;;AACA,UAAIL,SAAS,KAAKM,SAAlB,EAA6B;AACzB,aAAKN,SAAL,GAAiBA,SAAjB;AACH;;AACD,WAAKC,MAAL,CAAYM,IAAZ,CAAiBJ,IAAI,CAACF,MAAtB;AACA,WAAKC,KAAL,CAAWK,IAAX,CAAgBJ,IAAI,CAACD,KAArB;AACH;AAvBL;AAAA;AAAA,wBAMoB;AACZ,aAAO,KAAKF,SAAZ;AACH,KARL;AAAA,sBASkBQ,KATlB,EASyB;AACjB,WAAKR,SAAL,GAAiBQ,KAAjB;AACH;AAXL;;AAAA;AAAA","sourcesContent":["import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        const detectsOn = (_a = data.detectsOn) !== null && _a !== void 0 ? _a : data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}