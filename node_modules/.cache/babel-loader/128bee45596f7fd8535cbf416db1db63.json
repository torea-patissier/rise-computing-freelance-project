{"ast":null,"code":"import _slicedToArray from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _createForOfIteratorHelper from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _regeneratorRuntime from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent } from \"./Constants\";\n\nfunction manageListener(element, event, handler, add, options) {\n  if (add) {\n    var addOptions = {\n      passive: true\n    };\n\n    if (typeof options === \"boolean\") {\n      addOptions.capture = options;\n    } else if (options !== undefined) {\n      addOptions = options;\n    }\n\n    element.addEventListener(event, handler, addOptions);\n  } else {\n    var removeOptions = options;\n    element.removeEventListener(event, handler, removeOptions);\n  }\n}\n\nexport var EventListeners = /*#__PURE__*/function () {\n  function EventListeners(container) {\n    var _this = this;\n\n    _classCallCheck(this, EventListeners);\n\n    this.container = container;\n    this.canPush = true;\n    this.handlers = {\n      mouseMove: function mouseMove(e) {\n        return _this.mouseTouchMove(e);\n      },\n      touchStart: function touchStart(e) {\n        return _this.mouseTouchMove(e);\n      },\n      touchMove: function touchMove(e) {\n        return _this.mouseTouchMove(e);\n      },\n      touchEnd: function touchEnd() {\n        return _this.mouseTouchFinish();\n      },\n      mouseLeave: function mouseLeave() {\n        return _this.mouseTouchFinish();\n      },\n      touchCancel: function touchCancel() {\n        return _this.mouseTouchFinish();\n      },\n      touchEndClick: function touchEndClick(e) {\n        return _this.mouseTouchClick(e);\n      },\n      mouseUp: function mouseUp(e) {\n        return _this.mouseTouchClick(e);\n      },\n      mouseDown: function mouseDown() {\n        return _this.mouseDown();\n      },\n      visibilityChange: function visibilityChange() {\n        return _this.handleVisibilityChange();\n      },\n      themeChange: function themeChange(e) {\n        return _this.handleThemeChange(e);\n      },\n      oldThemeChange: function oldThemeChange(e) {\n        return _this.handleThemeChange(e);\n      },\n      resize: function resize() {\n        return _this.handleWindowResize();\n      }\n    };\n  }\n\n  _createClass(EventListeners, [{\n    key: \"addListeners\",\n    value: function addListeners() {\n      this.manageListeners(true);\n    }\n  }, {\n    key: \"removeListeners\",\n    value: function removeListeners() {\n      this.manageListeners(false);\n    }\n  }, {\n    key: \"doMouseTouchClick\",\n    value: function doMouseTouchClick(e) {\n      var _this2 = this;\n\n      var container = this.container,\n          options = container.actualOptions;\n\n      if (this.canPush) {\n        var mouseInteractivity = container.interactivity.mouse,\n            mousePos = mouseInteractivity.position;\n\n        if (!mousePos) {\n          return;\n        }\n\n        mouseInteractivity.clickPosition = Object.assign({}, mousePos);\n        mouseInteractivity.clickTime = new Date().getTime();\n        var onClick = options.interactivity.events.onClick;\n        executeOnSingleOrMultiple(onClick.mode, function (mode) {\n          return _this2.handleClickMode(mode);\n        });\n      }\n\n      if (e.type === \"touchend\") {\n        setTimeout(function () {\n          return _this2.mouseTouchFinish();\n        }, 500);\n      }\n    }\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      this.container.handleClickMode(mode);\n    }\n  }, {\n    key: \"handleThemeChange\",\n    value: function handleThemeChange(e) {\n      var mediaEvent = e,\n          container = this.container,\n          options = container.options,\n          defaultThemes = options.defaultThemes,\n          themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light,\n          theme = options.themes.find(function (theme) {\n        return theme.name === themeName;\n      });\n\n      if (theme && theme.default.auto) {\n        container.loadTheme(themeName);\n      }\n    }\n  }, {\n    key: \"handleVisibilityChange\",\n    value: function handleVisibilityChange() {\n      var container = this.container,\n          options = container.actualOptions;\n      this.mouseTouchFinish();\n\n      if (!options.pauseOnBlur) {\n        return;\n      }\n\n      if (document === null || document === void 0 ? void 0 : document.hidden) {\n        container.pageHidden = true;\n        container.pause();\n      } else {\n        container.pageHidden = false;\n\n        if (container.getAnimationStatus()) {\n          container.play(true);\n        } else {\n          container.draw(true);\n        }\n      }\n    }\n  }, {\n    key: \"handleWindowResize\",\n    value: function handleWindowResize() {\n      var _this3 = this;\n\n      if (this.resizeTimeout) {\n        clearTimeout(this.resizeTimeout);\n        delete this.resizeTimeout;\n      }\n\n      this.resizeTimeout = setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _a;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", (_a = _this3.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize());\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })), this.container.actualOptions.interactivity.events.resize.delay * 1000);\n    }\n  }, {\n    key: \"manageListeners\",\n    value: function manageListeners(add) {\n      var _this4 = this;\n\n      var _a;\n\n      var handlers = this.handlers,\n          container = this.container,\n          options = container.actualOptions,\n          detectType = options.interactivity.detectsOn;\n      var mouseLeaveTmpEvent = mouseLeaveEvent;\n\n      if (detectType === \"window\") {\n        container.interactivity.element = window;\n        mouseLeaveTmpEvent = mouseOutEvent;\n      } else if (detectType === \"parent\" && container.canvas.element) {\n        var canvasEl = container.canvas.element;\n        container.interactivity.element = (_a = canvasEl.parentElement) !== null && _a !== void 0 ? _a : canvasEl.parentNode;\n      } else {\n        container.interactivity.element = container.canvas.element;\n      }\n\n      var mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n\n      if (mediaMatch) {\n        if (mediaMatch.addEventListener !== undefined) {\n          manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n        } else if (mediaMatch.addListener !== undefined) {\n          if (add) {\n            mediaMatch.addListener(handlers.oldThemeChange);\n          } else {\n            mediaMatch.removeListener(handlers.oldThemeChange);\n          }\n        }\n      }\n\n      var interactivityEl = container.interactivity.element;\n\n      if (!interactivityEl) {\n        return;\n      }\n\n      var html = interactivityEl;\n\n      if (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable) {\n        manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n        manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n        manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n\n        if (!options.interactivity.events.onClick.enable) {\n          manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n        } else {\n          manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n          manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n          manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n        }\n\n        manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n        manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n      }\n\n      if (container.canvas.element) {\n        container.canvas.element.style.pointerEvents = html === container.canvas.element ? \"initial\" : \"none\";\n      }\n\n      if (options.interactivity.events.resize) {\n        if (typeof ResizeObserver !== \"undefined\") {\n          if (this.resizeObserver && !add) {\n            if (container.canvas.element) {\n              this.resizeObserver.unobserve(container.canvas.element);\n            }\n\n            this.resizeObserver.disconnect();\n            delete this.resizeObserver;\n          } else if (!this.resizeObserver && add && container.canvas.element) {\n            this.resizeObserver = new ResizeObserver(function (entries) {\n              var entry = entries.find(function (e) {\n                return e.target === container.canvas.element;\n              });\n\n              if (!entry) {\n                return;\n              }\n\n              _this4.handleWindowResize();\n            });\n            this.resizeObserver.observe(container.canvas.element);\n          }\n        } else {\n          manageListener(window, resizeEvent, handlers.resize, add);\n        }\n      }\n\n      if (document) {\n        manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n      }\n    }\n  }, {\n    key: \"mouseDown\",\n    value: function mouseDown() {\n      var interactivity = this.container.interactivity;\n\n      if (interactivity) {\n        var mouse = interactivity.mouse;\n        mouse.clicking = true;\n        mouse.downPosition = mouse.position;\n      }\n    }\n  }, {\n    key: \"mouseTouchClick\",\n    value: function mouseTouchClick(e) {\n      var container = this.container,\n          options = container.actualOptions,\n          mouse = container.interactivity.mouse;\n      mouse.inside = true;\n      var handled = false;\n      var mousePosition = mouse.position;\n\n      if (!mousePosition || !options.interactivity.events.onClick.enable) {\n        return;\n      }\n\n      var _iterator = _createForOfIteratorHelper(container.plugins),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n              plugin = _step$value[1];\n\n          if (!plugin.clickPositionValid) {\n            continue;\n          }\n\n          handled = plugin.clickPositionValid(mousePosition);\n\n          if (handled) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (!handled) {\n        this.doMouseTouchClick(e);\n      }\n\n      mouse.clicking = false;\n    }\n  }, {\n    key: \"mouseTouchFinish\",\n    value: function mouseTouchFinish() {\n      var interactivity = this.container.interactivity;\n\n      if (!interactivity) {\n        return;\n      }\n\n      var mouse = interactivity.mouse;\n      delete mouse.position;\n      delete mouse.clickPosition;\n      delete mouse.downPosition;\n      interactivity.status = mouseLeaveEvent;\n      mouse.inside = false;\n      mouse.clicking = false;\n    }\n  }, {\n    key: \"mouseTouchMove\",\n    value: function mouseTouchMove(e) {\n      var _a, _b, _c, _d, _e, _f, _g;\n\n      var container = this.container,\n          options = container.actualOptions;\n\n      if (!((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element)) {\n        return;\n      }\n\n      container.interactivity.mouse.inside = true;\n      var pos;\n      var canvas = container.canvas.element;\n\n      if (e.type.startsWith(\"pointer\")) {\n        this.canPush = true;\n        var mouseEvent = e;\n\n        if (container.interactivity.element === window) {\n          if (canvas) {\n            var clientRect = canvas.getBoundingClientRect();\n            pos = {\n              x: mouseEvent.clientX - clientRect.left,\n              y: mouseEvent.clientY - clientRect.top\n            };\n          }\n        } else if (options.interactivity.detectsOn === \"parent\") {\n          var source = mouseEvent.target,\n              target = mouseEvent.currentTarget,\n              canvasEl = container.canvas.element;\n\n          if (source && target && canvasEl) {\n            var sourceRect = source.getBoundingClientRect(),\n                targetRect = target.getBoundingClientRect(),\n                canvasRect = canvasEl.getBoundingClientRect();\n            pos = {\n              x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n              y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top)\n            };\n          } else {\n            pos = {\n              x: (_b = mouseEvent.offsetX) !== null && _b !== void 0 ? _b : mouseEvent.clientX,\n              y: (_c = mouseEvent.offsetY) !== null && _c !== void 0 ? _c : mouseEvent.clientY\n            };\n          }\n        } else if (mouseEvent.target === container.canvas.element) {\n          pos = {\n            x: (_d = mouseEvent.offsetX) !== null && _d !== void 0 ? _d : mouseEvent.clientX,\n            y: (_e = mouseEvent.offsetY) !== null && _e !== void 0 ? _e : mouseEvent.clientY\n          };\n        }\n      } else {\n        this.canPush = e.type !== \"touchmove\";\n\n        var touchEvent = e,\n            lastTouch = touchEvent.touches[touchEvent.touches.length - 1],\n            _canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n\n        pos = {\n          x: lastTouch.clientX - ((_f = _canvasRect === null || _canvasRect === void 0 ? void 0 : _canvasRect.left) !== null && _f !== void 0 ? _f : 0),\n          y: lastTouch.clientY - ((_g = _canvasRect === null || _canvasRect === void 0 ? void 0 : _canvasRect.top) !== null && _g !== void 0 ? _g : 0)\n        };\n      }\n\n      var pxRatio = container.retina.pixelRatio;\n\n      if (pos) {\n        pos.x *= pxRatio;\n        pos.y *= pxRatio;\n      }\n\n      container.interactivity.mouse.position = pos;\n      container.interactivity.status = mouseMoveEvent;\n    }\n  }]);\n\n  return EventListeners;\n}();","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js"],"names":["executeOnSingleOrMultiple","safeMatchMedia","mouseDownEvent","mouseLeaveEvent","mouseMoveEvent","mouseOutEvent","mouseUpEvent","resizeEvent","touchCancelEvent","touchEndEvent","touchMoveEvent","touchStartEvent","visibilityChangeEvent","manageListener","element","event","handler","add","options","addOptions","passive","capture","undefined","addEventListener","removeOptions","removeEventListener","EventListeners","container","canPush","handlers","mouseMove","e","mouseTouchMove","touchStart","touchMove","touchEnd","mouseTouchFinish","mouseLeave","touchCancel","touchEndClick","mouseTouchClick","mouseUp","mouseDown","visibilityChange","handleVisibilityChange","themeChange","handleThemeChange","oldThemeChange","resize","handleWindowResize","manageListeners","actualOptions","mouseInteractivity","interactivity","mouse","mousePos","position","clickPosition","Object","assign","clickTime","Date","getTime","onClick","events","mode","handleClickMode","type","setTimeout","mediaEvent","defaultThemes","themeName","matches","dark","light","theme","themes","find","name","default","auto","loadTheme","pauseOnBlur","document","hidden","pageHidden","pause","getAnimationStatus","play","draw","resizeTimeout","clearTimeout","_a","canvas","windowResize","delay","detectType","detectsOn","mouseLeaveTmpEvent","window","canvasEl","parentElement","parentNode","mediaMatch","addListener","removeListener","interactivityEl","html","onHover","enable","style","pointerEvents","ResizeObserver","resizeObserver","unobserve","disconnect","entries","entry","target","observe","clicking","downPosition","inside","handled","mousePosition","plugins","plugin","clickPositionValid","doMouseTouchClick","status","_b","_c","_d","_e","_f","_g","pos","startsWith","mouseEvent","clientRect","getBoundingClientRect","x","clientX","left","y","clientY","top","source","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","touchEvent","lastTouch","touches","length","pxRatio","retina","pixelRatio"],"mappings":"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","sourcesContent":["import { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (typeof options === \"boolean\") {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this.canPush = true;\n        this.handlers = {\n            mouseMove: (e) => this.mouseTouchMove(e),\n            touchStart: (e) => this.mouseTouchMove(e),\n            touchMove: (e) => this.mouseTouchMove(e),\n            touchEnd: () => this.mouseTouchFinish(),\n            mouseLeave: () => this.mouseTouchFinish(),\n            touchCancel: () => this.mouseTouchFinish(),\n            touchEndClick: (e) => this.mouseTouchClick(e),\n            mouseUp: (e) => this.mouseTouchClick(e),\n            mouseDown: () => this.mouseDown(),\n            visibilityChange: () => this.handleVisibilityChange(),\n            themeChange: (e) => this.handleThemeChange(e),\n            oldThemeChange: (e) => this.handleThemeChange(e),\n            resize: () => this.handleWindowResize(),\n        };\n    }\n    addListeners() {\n        this.manageListeners(true);\n    }\n    removeListeners() {\n        this.manageListeners(false);\n    }\n    doMouseTouchClick(e) {\n        const container = this.container, options = container.actualOptions;\n        if (this.canPush) {\n            const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n            if (!mousePos) {\n                return;\n            }\n            mouseInteractivity.clickPosition = Object.assign({}, mousePos);\n            mouseInteractivity.clickTime = new Date().getTime();\n            const onClick = options.interactivity.events.onClick;\n            executeOnSingleOrMultiple(onClick.mode, (mode) => this.handleClickMode(mode));\n        }\n        if (e.type === \"touchend\") {\n            setTimeout(() => this.mouseTouchFinish(), 500);\n        }\n    }\n    handleClickMode(mode) {\n        this.container.handleClickMode(mode);\n    }\n    handleThemeChange(e) {\n        const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n        if (theme && theme.default.auto) {\n            container.loadTheme(themeName);\n        }\n    }\n    handleVisibilityChange() {\n        const container = this.container, options = container.actualOptions;\n        this.mouseTouchFinish();\n        if (!options.pauseOnBlur) {\n            return;\n        }\n        if (document === null || document === void 0 ? void 0 : document.hidden) {\n            container.pageHidden = true;\n            container.pause();\n        }\n        else {\n            container.pageHidden = false;\n            if (container.getAnimationStatus()) {\n                container.play(true);\n            }\n            else {\n                container.draw(true);\n            }\n        }\n    }\n    handleWindowResize() {\n        if (this.resizeTimeout) {\n            clearTimeout(this.resizeTimeout);\n            delete this.resizeTimeout;\n        }\n        this.resizeTimeout = setTimeout(async () => { var _a; return (_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize(); }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n    }\n    manageListeners(add) {\n        var _a;\n        const handlers = this.handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn;\n        let mouseLeaveTmpEvent = mouseLeaveEvent;\n        if (detectType === \"window\") {\n            container.interactivity.element = window;\n            mouseLeaveTmpEvent = mouseOutEvent;\n        }\n        else if (detectType === \"parent\" && container.canvas.element) {\n            const canvasEl = container.canvas.element;\n            container.interactivity.element = (_a = canvasEl.parentElement) !== null && _a !== void 0 ? _a : canvasEl.parentNode;\n        }\n        else {\n            container.interactivity.element = container.canvas.element;\n        }\n        const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n        if (mediaMatch) {\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n            }\n            else if (mediaMatch.addListener !== undefined) {\n                if (add) {\n                    mediaMatch.addListener(handlers.oldThemeChange);\n                }\n                else {\n                    mediaMatch.removeListener(handlers.oldThemeChange);\n                }\n            }\n        }\n        const interactivityEl = container.interactivity.element;\n        if (!interactivityEl) {\n            return;\n        }\n        const html = interactivityEl;\n        if (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable) {\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        }\n        if (container.canvas.element) {\n            container.canvas.element.style.pointerEvents = html === container.canvas.element ? \"initial\" : \"none\";\n        }\n        if (options.interactivity.events.resize) {\n            if (typeof ResizeObserver !== \"undefined\") {\n                if (this.resizeObserver && !add) {\n                    if (container.canvas.element) {\n                        this.resizeObserver.unobserve(container.canvas.element);\n                    }\n                    this.resizeObserver.disconnect();\n                    delete this.resizeObserver;\n                }\n                else if (!this.resizeObserver && add && container.canvas.element) {\n                    this.resizeObserver = new ResizeObserver((entries) => {\n                        const entry = entries.find((e) => e.target === container.canvas.element);\n                        if (!entry) {\n                            return;\n                        }\n                        this.handleWindowResize();\n                    });\n                    this.resizeObserver.observe(container.canvas.element);\n                }\n            }\n            else {\n                manageListener(window, resizeEvent, handlers.resize, add);\n            }\n        }\n        if (document) {\n            manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n        }\n    }\n    mouseDown() {\n        const interactivity = this.container.interactivity;\n        if (interactivity) {\n            const mouse = interactivity.mouse;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        }\n    }\n    mouseTouchClick(e) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse;\n        mouse.inside = true;\n        let handled = false;\n        const mousePosition = mouse.position;\n        if (!mousePosition || !options.interactivity.events.onClick.enable) {\n            return;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (!plugin.clickPositionValid) {\n                continue;\n            }\n            handled = plugin.clickPositionValid(mousePosition);\n            if (handled) {\n                break;\n            }\n        }\n        if (!handled) {\n            this.doMouseTouchClick(e);\n        }\n        mouse.clicking = false;\n    }\n    mouseTouchFinish() {\n        const interactivity = this.container.interactivity;\n        if (!interactivity) {\n            return;\n        }\n        const mouse = interactivity.mouse;\n        delete mouse.position;\n        delete mouse.clickPosition;\n        delete mouse.downPosition;\n        interactivity.status = mouseLeaveEvent;\n        mouse.inside = false;\n        mouse.clicking = false;\n    }\n    mouseTouchMove(e) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const container = this.container, options = container.actualOptions;\n        if (!((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element)) {\n            return;\n        }\n        container.interactivity.mouse.inside = true;\n        let pos;\n        const canvas = container.canvas.element;\n        if (e.type.startsWith(\"pointer\")) {\n            this.canPush = true;\n            const mouseEvent = e;\n            if (container.interactivity.element === window) {\n                if (canvas) {\n                    const clientRect = canvas.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.clientX - clientRect.left,\n                        y: mouseEvent.clientY - clientRect.top,\n                    };\n                }\n            }\n            else if (options.interactivity.detectsOn === \"parent\") {\n                const source = mouseEvent.target, target = mouseEvent.currentTarget, canvasEl = container.canvas.element;\n                if (source && target && canvasEl) {\n                    const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                        y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                    };\n                }\n                else {\n                    pos = {\n                        x: (_b = mouseEvent.offsetX) !== null && _b !== void 0 ? _b : mouseEvent.clientX,\n                        y: (_c = mouseEvent.offsetY) !== null && _c !== void 0 ? _c : mouseEvent.clientY,\n                    };\n                }\n            }\n            else if (mouseEvent.target === container.canvas.element) {\n                pos = {\n                    x: (_d = mouseEvent.offsetX) !== null && _d !== void 0 ? _d : mouseEvent.clientX,\n                    y: (_e = mouseEvent.offsetY) !== null && _e !== void 0 ? _e : mouseEvent.clientY,\n                };\n            }\n        }\n        else {\n            this.canPush = e.type !== \"touchmove\";\n            const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n            pos = {\n                x: lastTouch.clientX - ((_f = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _f !== void 0 ? _f : 0),\n                y: lastTouch.clientY - ((_g = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _g !== void 0 ? _g : 0),\n            };\n        }\n        const pxRatio = container.retina.pixelRatio;\n        if (pos) {\n            pos.x *= pxRatio;\n            pos.y *= pxRatio;\n        }\n        container.interactivity.mouse.position = pos;\n        container.interactivity.status = mouseMoveEvent;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}