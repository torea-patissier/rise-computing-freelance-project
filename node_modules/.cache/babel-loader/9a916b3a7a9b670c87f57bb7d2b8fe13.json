{"ast":null,"code":"import { ExternalInteractorBase } from \"tsparticles-engine\";\nimport { Push } from \"./Options/Classes/Push\";\nimport { itemFromArray } from \"tsparticles-engine\";\nexport class Pusher extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n\n    this.handleClickMode = mode => {\n      if (mode !== \"push\") {\n        return;\n      }\n\n      const container = this.container,\n            options = container.actualOptions,\n            pushOptions = options.interactivity.modes.push;\n\n      if (!pushOptions) {\n        return;\n      }\n\n      const pushNb = pushOptions.quantity;\n\n      if (pushNb <= 0) {\n        return;\n      }\n\n      const group = itemFromArray([undefined, ...pushOptions.groups]),\n            groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n      container.particles.push(pushNb, container.interactivity.mouse, groupOptions, group);\n    };\n  }\n\n  clear() {}\n\n  init() {}\n\n  async interact() {}\n\n  isEnabled() {\n    return true;\n  }\n\n  loadModeOptions(options, ...sources) {\n    if (!options.push) {\n      options.push = new Push();\n    }\n\n    for (const source of sources) {\n      options.push.load(source === null || source === void 0 ? void 0 : source.push);\n    }\n  }\n\n  reset() {}\n\n}","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/tsparticles-interaction-external-push/esm/Pusher.js"],"names":["ExternalInteractorBase","Push","itemFromArray","Pusher","constructor","container","handleClickMode","mode","options","actualOptions","pushOptions","interactivity","modes","push","pushNb","quantity","group","undefined","groups","groupOptions","particles","mouse","clear","init","interact","isEnabled","loadModeOptions","sources","source","load","reset"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,oBAAvC;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAO,MAAMC,MAAN,SAAqBH,sBAArB,CAA4C;AAC/CI,EAAAA,WAAW,CAACC,SAAD,EAAY;AACnB,UAAMA,SAAN;;AACA,SAAKC,eAAL,GAAwBC,IAAD,IAAU;AAC7B,UAAIA,IAAI,KAAK,MAAb,EAAqB;AACjB;AACH;;AACD,YAAMF,SAAS,GAAG,KAAKA,SAAvB;AAAA,YAAkCG,OAAO,GAAGH,SAAS,CAACI,aAAtD;AAAA,YAAqEC,WAAW,GAAGF,OAAO,CAACG,aAAR,CAAsBC,KAAtB,CAA4BC,IAA/G;;AACA,UAAI,CAACH,WAAL,EAAkB;AACd;AACH;;AACD,YAAMI,MAAM,GAAGJ,WAAW,CAACK,QAA3B;;AACA,UAAID,MAAM,IAAI,CAAd,EAAiB;AACb;AACH;;AACD,YAAME,KAAK,GAAGd,aAAa,CAAC,CAACe,SAAD,EAAY,GAAGP,WAAW,CAACQ,MAA3B,CAAD,CAA3B;AAAA,YAAiEC,YAAY,GAAGH,KAAK,KAAKC,SAAV,GAAsBZ,SAAS,CAACI,aAAV,CAAwBW,SAAxB,CAAkCF,MAAlC,CAAyCF,KAAzC,CAAtB,GAAwEC,SAAxJ;AACAZ,MAAAA,SAAS,CAACe,SAAV,CAAoBP,IAApB,CAAyBC,MAAzB,EAAiCT,SAAS,CAACM,aAAV,CAAwBU,KAAzD,EAAgEF,YAAhE,EAA8EH,KAA9E;AACH,KAdD;AAeH;;AACDM,EAAAA,KAAK,GAAG,CACP;;AACDC,EAAAA,IAAI,GAAG,CACN;;AACD,QAAMC,QAAN,GAAiB,CAChB;;AACDC,EAAAA,SAAS,GAAG;AACR,WAAO,IAAP;AACH;;AACDC,EAAAA,eAAe,CAAClB,OAAD,EAAU,GAAGmB,OAAb,EAAsB;AACjC,QAAI,CAACnB,OAAO,CAACK,IAAb,EAAmB;AACfL,MAAAA,OAAO,CAACK,IAAR,GAAe,IAAIZ,IAAJ,EAAf;AACH;;AACD,SAAK,MAAM2B,MAAX,IAAqBD,OAArB,EAA8B;AAC1BnB,MAAAA,OAAO,CAACK,IAAR,CAAagB,IAAb,CAAkBD,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACf,IAAzE;AACH;AACJ;;AACDiB,EAAAA,KAAK,GAAG,CACP;;AArC8C","sourcesContent":["import { ExternalInteractorBase } from \"tsparticles-engine\";\nimport { Push } from \"./Options/Classes/Push\";\nimport { itemFromArray } from \"tsparticles-engine\";\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"push\") {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const pushNb = pushOptions.quantity;\n            if (pushNb <= 0) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            container.particles.push(pushNb, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source === null || source === void 0 ? void 0 : source.push);\n        }\n    }\n    reset() {\n    }\n}\n"]},"metadata":{},"sourceType":"module"}