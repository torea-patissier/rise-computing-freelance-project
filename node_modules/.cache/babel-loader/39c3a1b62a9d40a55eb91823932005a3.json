{"ast":null,"code":"import { RepulseBase } from \"./RepulseBase\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class RepulseDiv extends RepulseBase {\n  constructor() {\n    super();\n    this.selectors = [];\n  }\n\n  get ids() {\n    return executeOnSingleOrMultiple(this.selectors, t => t.replace(\"#\", \"\"));\n  }\n\n  set ids(value) {\n    this.selectors = executeOnSingleOrMultiple(value, t => `#${t}`);\n  }\n\n  load(data) {\n    super.load(data);\n\n    if (!data) {\n      return;\n    }\n\n    if (data.ids !== undefined) {\n      this.ids = data.ids;\n    }\n\n    if (data.selectors !== undefined) {\n      this.selectors = data.selectors;\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseDiv.js"],"names":["RepulseBase","executeOnSingleOrMultiple","RepulseDiv","constructor","selectors","ids","t","replace","value","load","data","undefined"],"mappings":"AAAA,SAASA,WAAT,QAA4B,eAA5B;AACA,SAASC,yBAAT,QAA0C,oBAA1C;AACA,OAAO,MAAMC,UAAN,SAAyBF,WAAzB,CAAqC;AACxCG,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACH;;AACD,MAAIC,GAAJ,GAAU;AACN,WAAOJ,yBAAyB,CAAC,KAAKG,SAAN,EAAkBE,CAAD,IAAOA,CAAC,CAACC,OAAF,CAAU,GAAV,EAAe,EAAf,CAAxB,CAAhC;AACH;;AACD,MAAIF,GAAJ,CAAQG,KAAR,EAAe;AACX,SAAKJ,SAAL,GAAiBH,yBAAyB,CAACO,KAAD,EAASF,CAAD,IAAQ,IAAGA,CAAE,EAArB,CAA1C;AACH;;AACDG,EAAAA,IAAI,CAACC,IAAD,EAAO;AACP,UAAMD,IAAN,CAAWC,IAAX;;AACA,QAAI,CAACA,IAAL,EAAW;AACP;AACH;;AACD,QAAIA,IAAI,CAACL,GAAL,KAAaM,SAAjB,EAA4B;AACxB,WAAKN,GAAL,GAAWK,IAAI,CAACL,GAAhB;AACH;;AACD,QAAIK,IAAI,CAACN,SAAL,KAAmBO,SAAvB,EAAkC;AAC9B,WAAKP,SAAL,GAAiBM,IAAI,CAACN,SAAtB;AACH;AACJ;;AAtBuC","sourcesContent":["import { RepulseBase } from \"./RepulseBase\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}