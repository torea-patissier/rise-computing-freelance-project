{"ast":null,"code":"import _defineProperty from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport React from 'react';\n\nfunction renderVirtual(swiper, slides, virtualData) {\n  if (!virtualData) return null;\n\n  var getSlideIndex = function getSlideIndex(index) {\n    var slideIndex = index;\n\n    if (index < 0) {\n      slideIndex = slides.length + index;\n    } else if (slideIndex >= slides.length) {\n      // eslint-disable-next-line\n      slideIndex = slideIndex - slides.length;\n    }\n\n    return slideIndex;\n  };\n\n  var style = swiper.isHorizontal() ? _defineProperty({}, swiper.rtlTranslate ? 'right' : 'left', \"\".concat(virtualData.offset, \"px\")) : {\n    top: \"\".concat(virtualData.offset, \"px\")\n  };\n  var from = virtualData.from,\n      to = virtualData.to;\n  var loopFrom = swiper.params.loop ? -slides.length : 0;\n  var loopTo = swiper.params.loop ? slides.length * 2 : slides.length;\n  var slidesToRender = [];\n\n  for (var i = loopFrom; i < loopTo; i += 1) {\n    if (i >= from && i <= to) {\n      slidesToRender.push(slides[getSlideIndex(i)]);\n    }\n  }\n\n  return slidesToRender.map(function (child) {\n    return /*#__PURE__*/React.cloneElement(child, {\n      swiper: swiper,\n      style: style\n    });\n  });\n}\n\nexport { renderVirtual };","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/swiper/react/virtual.js"],"names":["React","renderVirtual","swiper","slides","virtualData","getSlideIndex","index","slideIndex","length","style","isHorizontal","rtlTranslate","offset","top","from","to","loopFrom","params","loop","loopTo","slidesToRender","i","push","map","child","cloneElement"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,SAASC,aAAT,CAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,WAAvC,EAAoD;AAClD,MAAI,CAACA,WAAL,EAAkB,OAAO,IAAP;;AAClB,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAC7B,QAAIC,UAAU,GAAGD,KAAjB;;AACA,QAAIA,KAAK,GAAG,CAAZ,EAAe;AACbC,MAAAA,UAAU,GAAGJ,MAAM,CAACK,MAAP,GAAgBF,KAA7B;AACD,KAFD,MAEO,IAAIC,UAAU,IAAIJ,MAAM,CAACK,MAAzB,EAAiC;AACtC;AACAD,MAAAA,UAAU,GAAGA,UAAU,GAAGJ,MAAM,CAACK,MAAjC;AACD;;AACD,WAAOD,UAAP;AACD,GATD;;AAUA,MAAME,KAAK,GAAGP,MAAM,CAACQ,YAAP,yBACXR,MAAM,CAACS,YAAP,GAAsB,OAAtB,GAAgC,MADrB,YACiCP,WAAW,CAACQ,MAD7C,WAEV;AACFC,IAAAA,GAAG,YAAKT,WAAW,CAACQ,MAAjB;AADD,GAFJ;AAZkD,MAkBhDE,IAlBgD,GAoB9CV,WApB8C,CAkBhDU,IAlBgD;AAAA,MAmBhDC,EAnBgD,GAoB9CX,WApB8C,CAmBhDW,EAnBgD;AAqBlD,MAAMC,QAAQ,GAAGd,MAAM,CAACe,MAAP,CAAcC,IAAd,GAAqB,CAACf,MAAM,CAACK,MAA7B,GAAsC,CAAvD;AACA,MAAMW,MAAM,GAAGjB,MAAM,CAACe,MAAP,CAAcC,IAAd,GAAqBf,MAAM,CAACK,MAAP,GAAgB,CAArC,GAAyCL,MAAM,CAACK,MAA/D;AACA,MAAMY,cAAc,GAAG,EAAvB;;AACA,OAAK,IAAIC,CAAC,GAAGL,QAAb,EAAuBK,CAAC,GAAGF,MAA3B,EAAmCE,CAAC,IAAI,CAAxC,EAA2C;AACzC,QAAIA,CAAC,IAAIP,IAAL,IAAaO,CAAC,IAAIN,EAAtB,EAA0B;AACxBK,MAAAA,cAAc,CAACE,IAAf,CAAoBnB,MAAM,CAACE,aAAa,CAACgB,CAAD,CAAd,CAA1B;AACD;AACF;;AACD,SAAOD,cAAc,CAACG,GAAf,CAAmB,UAAAC,KAAK,EAAI;AACjC,WAAO,aAAaxB,KAAK,CAACyB,YAAN,CAAmBD,KAAnB,EAA0B;AAC5CtB,MAAAA,MAAM,EAANA,MAD4C;AAE5CO,MAAAA,KAAK,EAALA;AAF4C,KAA1B,CAApB;AAID,GALM,CAAP;AAMD;;AACD,SAASR,aAAT","sourcesContent":["import React from 'react';\nfunction renderVirtual(swiper, slides, virtualData) {\n  if (!virtualData) return null;\n  const getSlideIndex = index => {\n    let slideIndex = index;\n    if (index < 0) {\n      slideIndex = slides.length + index;\n    } else if (slideIndex >= slides.length) {\n      // eslint-disable-next-line\n      slideIndex = slideIndex - slides.length;\n    }\n    return slideIndex;\n  };\n  const style = swiper.isHorizontal() ? {\n    [swiper.rtlTranslate ? 'right' : 'left']: `${virtualData.offset}px`\n  } : {\n    top: `${virtualData.offset}px`\n  };\n  const {\n    from,\n    to\n  } = virtualData;\n  const loopFrom = swiper.params.loop ? -slides.length : 0;\n  const loopTo = swiper.params.loop ? slides.length * 2 : slides.length;\n  const slidesToRender = [];\n  for (let i = loopFrom; i < loopTo; i += 1) {\n    if (i >= from && i <= to) {\n      slidesToRender.push(slides[getSlideIndex(i)]);\n    }\n  }\n  return slidesToRender.map(child => {\n    return /*#__PURE__*/React.cloneElement(child, {\n      swiper,\n      style\n    });\n  });\n}\nexport { renderVirtual };"]},"metadata":{},"sourceType":"module"}