{"ast":null,"code":"import _regeneratorRuntime from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _createForOfIteratorHelper from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { clear as _clear, drawParticle as _drawParticle, drawParticlePlugin as _drawParticlePlugin, drawPlugin as _drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, isSsr } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\n\nfunction setTransformValue(factor, newFactor, key) {\n  var _a;\n\n  var newValue = newFactor[key];\n\n  if (newValue !== undefined) {\n    factor[key] = ((_a = factor[key]) !== null && _a !== void 0 ? _a : 1) * newValue;\n  }\n}\n\nexport var Canvas = /*#__PURE__*/function () {\n  function Canvas(container) {\n    var _this = this;\n\n    _classCallCheck(this, Canvas);\n\n    this.container = container;\n    this.size = {\n      height: 0,\n      width: 0\n    };\n    this._context = null;\n    this._generated = false;\n    this._preDrawUpdaters = [];\n    this._postDrawUpdaters = [];\n    this._resizePlugins = [];\n    this._colorPlugins = [];\n    this._mutationObserver = !isSsr() && typeof MutationObserver !== \"undefined\" ? new MutationObserver(function (records) {\n      var _iterator = _createForOfIteratorHelper(records),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var record = _step.value;\n\n          if (record.type === \"attributes\" && record.attributeName === \"style\") {\n            _this._repairStyle();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }) : undefined;\n  }\n\n  _createClass(Canvas, [{\n    key: \"clear\",\n    value: function clear() {\n      var _this2 = this;\n\n      var options = this.container.actualOptions,\n          trail = options.particles.move.trail,\n          trailFill = this._trailFill;\n\n      if (options.backgroundMask.enable) {\n        this.paint();\n      } else if (trail.enable && trail.length > 0 && trailFill) {\n        if (trailFill.color) {\n          this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n        } else if (trailFill.image) {\n          this._paintImage(trailFill.image, trailFill.opacity);\n        }\n      } else {\n        this.draw(function (ctx) {\n          _clear(ctx, _this2.size);\n        });\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _a, _b;\n\n      (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n\n      if (this._generated) {\n        (_b = this.element) === null || _b === void 0 ? void 0 : _b.remove();\n      } else {\n        this._resetOriginalStyle();\n      }\n\n      this.stop();\n      this._preDrawUpdaters = [];\n      this._postDrawUpdaters = [];\n      this._resizePlugins = [];\n      this._colorPlugins = [];\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(cb) {\n      if (!this._context) {\n        return;\n      }\n\n      return cb(this._context);\n    }\n  }, {\n    key: \"drawParticle\",\n    value: function drawParticle(particle, delta) {\n      var _this3 = this;\n\n      var _a;\n\n      if (particle.spawning || particle.destroyed) {\n        return;\n      }\n\n      var radius = particle.getRadius();\n\n      if (radius <= 0) {\n        return;\n      }\n\n      var pfColor = particle.getFillColor(),\n          psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n\n      var _this$_getPluginParti = this._getPluginParticleColors(particle),\n          _this$_getPluginParti2 = _slicedToArray(_this$_getPluginParti, 2),\n          fColor = _this$_getPluginParti2[0],\n          sColor = _this$_getPluginParti2[1];\n\n      if (!fColor) {\n        fColor = pfColor;\n      }\n\n      if (!sColor) {\n        sColor = psColor;\n      }\n\n      if (!fColor && !sColor) {\n        return;\n      }\n\n      this.draw(function (ctx) {\n        var _a, _b, _c, _d;\n\n        var options = _this3.container.actualOptions,\n            zIndexOptions = particle.options.zIndex,\n            zOpacityFactor = Math.pow(1 - particle.zIndexFactor, zIndexOptions.opacityRate),\n            opacity = (_c = (_a = particle.bubble.opacity) !== null && _a !== void 0 ? _a : (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1,\n            strokeOpacity = (_d = particle.strokeOpacity) !== null && _d !== void 0 ? _d : opacity,\n            zOpacity = opacity * zOpacityFactor,\n            zStrokeOpacity = strokeOpacity * zOpacityFactor,\n            transform = {},\n            colorStyles = {\n          fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined\n        };\n        colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n\n        _this3._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n\n        _drawParticle({\n          container: _this3.container,\n          context: ctx,\n          particle: particle,\n          delta: delta,\n          colorStyles: colorStyles,\n          backgroundMask: options.backgroundMask.enable,\n          composite: options.backgroundMask.composite,\n          radius: radius * Math.pow(1 - particle.zIndexFactor, zIndexOptions.sizeRate),\n          opacity: zOpacity,\n          shadow: particle.options.shadow,\n          transform: transform\n        });\n\n        _this3._applyPostDrawUpdaters(particle);\n      });\n    }\n  }, {\n    key: \"drawParticlePlugin\",\n    value: function drawParticlePlugin(plugin, particle, delta) {\n      this.draw(function (ctx) {\n        _drawParticlePlugin(ctx, plugin, particle, delta);\n      });\n    }\n  }, {\n    key: \"drawPlugin\",\n    value: function drawPlugin(plugin, delta) {\n      this.draw(function (ctx) {\n        _drawPlugin(ctx, plugin, delta);\n      });\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _a;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.resize();\n\n                this._initStyle();\n\n                this._initCover();\n\n                _context.prev = 3;\n                _context.next = 6;\n                return this._initTrail();\n\n              case 6:\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](3);\n                console.error(_context.t0);\n\n              case 11:\n                this.initBackground();\n\n                if (this.element) {\n                  (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.element, {\n                    attributes: true\n                  });\n                }\n\n                this.initUpdaters();\n                this.initPlugins();\n                this.paint();\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 8]]);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"initBackground\",\n    value: function initBackground() {\n      var options = this.container.actualOptions,\n          background = options.background,\n          element = this.element,\n          elementStyle = element === null || element === void 0 ? void 0 : element.style;\n\n      if (!elementStyle) {\n        return;\n      }\n\n      if (background.color) {\n        var color = rangeColorToRgb(background.color);\n        elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n      } else {\n        elementStyle.backgroundColor = \"\";\n      }\n\n      elementStyle.backgroundImage = background.image || \"\";\n      elementStyle.backgroundPosition = background.position || \"\";\n      elementStyle.backgroundRepeat = background.repeat || \"\";\n      elementStyle.backgroundSize = background.size || \"\";\n    }\n  }, {\n    key: \"initPlugins\",\n    value: function initPlugins() {\n      this._resizePlugins = [];\n\n      var _iterator2 = _createForOfIteratorHelper(this.container.plugins),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _step2$value = _slicedToArray(_step2.value, 2),\n              plugin = _step2$value[1];\n\n          if (plugin.resize) {\n            this._resizePlugins.push(plugin);\n          }\n\n          if (plugin.particleFillColor || plugin.particleStrokeColor) {\n            this._colorPlugins.push(plugin);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"initUpdaters\",\n    value: function initUpdaters() {\n      this._preDrawUpdaters = [];\n      this._postDrawUpdaters = [];\n\n      var _iterator3 = _createForOfIteratorHelper(this.container.particles.updaters),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var updater = _step3.value;\n\n          if (updater.afterDraw) {\n            this._postDrawUpdaters.push(updater);\n          }\n\n          if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n            this._preDrawUpdaters.push(updater);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"loadCanvas\",\n    value: function loadCanvas(canvas) {\n      var _a, _b;\n\n      if (this._generated) {\n        (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n      }\n\n      this._generated = canvas.dataset && generatedAttribute in canvas.dataset ? canvas.dataset[generatedAttribute] === \"true\" : this._generated;\n      this.element = canvas;\n      this.element.ariaHidden = \"true\";\n      this._originalStyle = deepExtend({}, this.element.style);\n      this.size.height = canvas.offsetHeight;\n      this.size.width = canvas.offsetWidth;\n      this._context = this.element.getContext(\"2d\");\n      (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(this.element, {\n        attributes: true\n      });\n      this.container.retina.init();\n      this.initBackground();\n    }\n  }, {\n    key: \"paint\",\n    value: function paint() {\n      var _this4 = this;\n\n      var options = this.container.actualOptions;\n      this.draw(function (ctx) {\n        if (options.backgroundMask.enable && options.backgroundMask.cover) {\n          _clear(ctx, _this4.size);\n\n          _this4._paintBase(_this4._coverColorStyle);\n        } else {\n          _this4._paintBase();\n        }\n      });\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      if (!this.element) {\n        return;\n      }\n\n      var container = this.container,\n          pxRatio = container.retina.pixelRatio,\n          size = container.canvas.size,\n          newSize = {\n        width: this.element.offsetWidth * pxRatio,\n        height: this.element.offsetHeight * pxRatio\n      };\n\n      if (newSize.height === size.height && newSize.width === size.width && newSize.height === this.element.height && newSize.width === this.element.width) {\n        return;\n      }\n\n      var oldSize = Object.assign({}, size);\n      this.element.width = size.width = this.element.offsetWidth * pxRatio;\n      this.element.height = size.height = this.element.offsetHeight * pxRatio;\n\n      if (this.container.started) {\n        this.resizeFactor = {\n          width: size.width / oldSize.width,\n          height: size.height / oldSize.height\n        };\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      var _this5 = this;\n\n      this.draw(function (ctx) {\n        _clear(ctx, _this5.size);\n      });\n    }\n  }, {\n    key: \"windowResize\",\n    value: function () {\n      var _windowResize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var container, needsRefresh;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this.element) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                this.resize();\n                container = this.container, needsRefresh = container.updateActualOptions();\n                container.particles.setDensity();\n\n                this._applyResizePlugins();\n\n                if (!needsRefresh) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                _context2.next = 9;\n                return container.refresh();\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function windowResize() {\n        return _windowResize.apply(this, arguments);\n      }\n\n      return windowResize;\n    }()\n  }, {\n    key: \"_applyPostDrawUpdaters\",\n    value: function _applyPostDrawUpdaters(particle) {\n      var _a;\n\n      var _iterator4 = _createForOfIteratorHelper(this._postDrawUpdaters),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var updater = _step4.value;\n          (_a = updater.afterDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"_applyPreDrawUpdaters\",\n    value: function _applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform) {\n      var _a;\n\n      var _iterator5 = _createForOfIteratorHelper(this._preDrawUpdaters),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var updater = _step5.value;\n\n          if (updater.getColorStyles) {\n            var _updater$getColorStyl = updater.getColorStyles(particle, ctx, radius, zOpacity),\n                fill = _updater$getColorStyl.fill,\n                stroke = _updater$getColorStyl.stroke;\n\n            if (fill) {\n              colorStyles.fill = fill;\n            }\n\n            if (stroke) {\n              colorStyles.stroke = stroke;\n            }\n          }\n\n          if (updater.getTransformValues) {\n            var updaterTransform = updater.getTransformValues(particle);\n\n            for (var key in updaterTransform) {\n              setTransformValue(transform, updaterTransform, key);\n            }\n          }\n\n          (_a = updater.beforeDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  }, {\n    key: \"_applyResizePlugins\",\n    value: function _applyResizePlugins() {\n      var _iterator6 = _createForOfIteratorHelper(this._resizePlugins),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var plugin = _step6.value;\n\n          if (plugin.resize) {\n            plugin.resize();\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n  }, {\n    key: \"_getPluginParticleColors\",\n    value: function _getPluginParticleColors(particle) {\n      var fColor, sColor;\n\n      var _iterator7 = _createForOfIteratorHelper(this._colorPlugins),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var plugin = _step7.value;\n\n          if (!fColor && plugin.particleFillColor) {\n            fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n          }\n\n          if (!sColor && plugin.particleStrokeColor) {\n            sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n          }\n\n          if (fColor && sColor) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      return [fColor, sColor];\n    }\n  }, {\n    key: \"_initCover\",\n    value: function _initCover() {\n      var options = this.container.actualOptions,\n          cover = options.backgroundMask.cover,\n          color = cover.color,\n          coverRgb = rangeColorToRgb(color);\n\n      if (coverRgb) {\n        var coverColor = {\n          r: coverRgb.r,\n          g: coverRgb.g,\n          b: coverRgb.b,\n          a: cover.opacity\n        };\n        this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n      }\n    }\n  }, {\n    key: \"_initStyle\",\n    value: function _initStyle() {\n      var element = this.element,\n          options = this.container.actualOptions;\n\n      if (!element) {\n        return;\n      }\n\n      if (this._fullScreen) {\n        this._originalStyle = deepExtend({}, element.style);\n\n        this._setFullScreenStyle();\n      } else {\n        this._resetOriginalStyle();\n      }\n\n      for (var key in options.style) {\n        if (!key || !options.style) {\n          continue;\n        }\n\n        var value = options.style[key];\n\n        if (!value) {\n          continue;\n        }\n\n        element.style.setProperty(key, value, \"important\");\n      }\n    }\n  }, {\n    key: \"_initTrail\",\n    value: function () {\n      var _initTrail2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _this6 = this;\n\n        var options, trail, trailFill, fillColor, _trail;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n\n                if (trail.enable) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 3:\n                if (!trailFill.color) {\n                  _context3.next = 11;\n                  break;\n                }\n\n                fillColor = rangeColorToRgb(trailFill.color);\n\n                if (fillColor) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 7:\n                _trail = options.particles.move.trail;\n                this._trailFill = {\n                  color: Object.assign({}, fillColor),\n                  opacity: 1 / _trail.length\n                };\n                _context3.next = 13;\n                break;\n\n              case 11:\n                _context3.next = 13;\n                return new Promise(function (resolve, reject) {\n                  if (!trailFill.image) {\n                    return;\n                  }\n\n                  var img = document.createElement(\"img\");\n                  img.addEventListener(\"load\", function () {\n                    _this6._trailFill = {\n                      image: img,\n                      opacity: 1 / trail.length\n                    };\n                    resolve();\n                  });\n                  img.addEventListener(\"error\", function (evt) {\n                    reject(evt.error);\n                  });\n                  img.src = trailFill.image;\n                });\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function _initTrail() {\n        return _initTrail2.apply(this, arguments);\n      }\n\n      return _initTrail;\n    }()\n  }, {\n    key: \"_paintBase\",\n    value: function _paintBase(baseColor) {\n      var _this7 = this;\n\n      this.draw(function (ctx) {\n        paintBase(ctx, _this7.size, baseColor);\n      });\n    }\n  }, {\n    key: \"_paintImage\",\n    value: function _paintImage(image, opacity) {\n      var _this8 = this;\n\n      this.draw(function (ctx) {\n        paintImage(ctx, _this8.size, image, opacity);\n      });\n    }\n  }, {\n    key: \"_repairStyle\",\n    value: function _repairStyle() {\n      var _a, _b;\n\n      var element = this.element;\n\n      if (!element) {\n        return;\n      }\n\n      (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n\n      this._initStyle();\n\n      this.initBackground();\n      (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(element, {\n        attributes: true\n      });\n    }\n  }, {\n    key: \"_resetOriginalStyle\",\n    value: function _resetOriginalStyle() {\n      var element = this.element,\n          originalStyle = this._originalStyle;\n\n      if (!(element && originalStyle)) {\n        return;\n      }\n\n      element.style.position = originalStyle.position;\n      element.style.zIndex = originalStyle.zIndex;\n      element.style.top = originalStyle.top;\n      element.style.left = originalStyle.left;\n      element.style.width = originalStyle.width;\n      element.style.height = originalStyle.height;\n    }\n  }, {\n    key: \"_setFullScreenStyle\",\n    value: function _setFullScreenStyle() {\n      var element = this.element;\n\n      if (!element) {\n        return;\n      }\n\n      var priority = \"important\";\n      element.style.setProperty(\"position\", \"fixed\", priority);\n      element.style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n      element.style.setProperty(\"top\", \"0\", priority);\n      element.style.setProperty(\"left\", \"0\", priority);\n      element.style.setProperty(\"width\", \"100%\", priority);\n      element.style.setProperty(\"height\", \"100%\", priority);\n    }\n  }, {\n    key: \"_fullScreen\",\n    get: function get() {\n      return this.container.actualOptions.fullScreen.enable;\n    }\n  }]);\n\n  return Canvas;\n}();","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/tsparticles-engine/esm/Core/Canvas.js"],"names":["clear","drawParticle","drawParticlePlugin","drawPlugin","paintBase","paintImage","deepExtend","isSsr","getStyleFromHsl","getStyleFromRgb","rangeColorToHsl","rangeColorToRgb","generatedAttribute","setTransformValue","factor","newFactor","key","_a","newValue","undefined","Canvas","container","size","height","width","_context","_generated","_preDrawUpdaters","_postDrawUpdaters","_resizePlugins","_colorPlugins","_mutationObserver","MutationObserver","records","record","type","attributeName","_repairStyle","options","actualOptions","trail","particles","move","trailFill","_trailFill","backgroundMask","enable","paint","length","color","_paintBase","opacity","image","_paintImage","draw","ctx","_b","disconnect","element","remove","_resetOriginalStyle","stop","cb","particle","delta","spawning","destroyed","radius","getRadius","pfColor","getFillColor","psColor","getStrokeColor","_getPluginParticleColors","fColor","sColor","_c","_d","zIndexOptions","zIndex","zOpacityFactor","zIndexFactor","opacityRate","bubble","value","strokeOpacity","zOpacity","zStrokeOpacity","transform","colorStyles","fill","stroke","_applyPreDrawUpdaters","context","composite","sizeRate","shadow","_applyPostDrawUpdaters","plugin","resize","_initStyle","_initCover","_initTrail","console","error","initBackground","observe","attributes","initUpdaters","initPlugins","background","elementStyle","style","backgroundColor","backgroundImage","backgroundPosition","position","backgroundRepeat","repeat","backgroundSize","plugins","push","particleFillColor","particleStrokeColor","updaters","updater","afterDraw","getColorStyles","getTransformValues","beforeDraw","canvas","dataset","ariaHidden","_originalStyle","offsetHeight","offsetWidth","getContext","retina","init","cover","_coverColorStyle","pxRatio","pixelRatio","newSize","oldSize","Object","assign","started","resizeFactor","needsRefresh","updateActualOptions","setDensity","_applyResizePlugins","refresh","call","updaterTransform","coverRgb","coverColor","r","g","b","a","_fullScreen","_setFullScreenStyle","setProperty","fillColor","Promise","resolve","reject","img","document","createElement","addEventListener","evt","src","baseColor","originalStyle","top","left","priority","fullScreen","toString"],"mappings":"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","sourcesContent":["import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, isSsr } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    var _a;\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = ((_a = factor[key]) !== null && _a !== void 0 ? _a : 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n        this._mutationObserver =\n            !isSsr() && typeof MutationObserver !== \"undefined\"\n                ? new MutationObserver((records) => {\n                    for (const record of records) {\n                        if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                            this._repairStyle();\n                        }\n                    }\n                })\n                : undefined;\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        var _a, _b;\n        (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n        if (this._generated) {\n            (_b = this.element) === null || _b === void 0 ? void 0 : _b.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this.stop();\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        if (!this._context) {\n            return;\n        }\n        return cb(this._context);\n    }\n    drawParticle(particle, delta) {\n        var _a;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            var _a, _b, _c, _d;\n            const options = this.container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = (_c = (_a = particle.bubble.opacity) !== null && _a !== void 0 ? _a : (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1, strokeOpacity = (_d = particle.strokeOpacity) !== null && _d !== void 0 ? _d : opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container: this.container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            drawParticlePlugin(ctx, plugin, particle, delta);\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            drawPlugin(ctx, plugin, delta);\n        });\n    }\n    async init() {\n        var _a;\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            console.error(e);\n        }\n        this.initBackground();\n        if (this.element) {\n            (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.element, { attributes: true });\n        }\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element, elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        var _a, _b;\n        if (this._generated) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(this.element, { attributes: true });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return;\n        }\n        const oldSize = Object.assign({}, size);\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    stop() {\n        this.draw((ctx) => {\n            clear(ctx, this.size);\n        });\n    }\n    async windowResize() {\n        if (!this.element) {\n            return;\n        }\n        this.resize();\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n    _applyPostDrawUpdaters(particle) {\n        var _a;\n        for (const updater of this._postDrawUpdaters) {\n            (_a = updater.afterDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    _applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform) {\n        var _a;\n        for (const updater of this._preDrawUpdaters) {\n            if (updater.getColorStyles) {\n                const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                if (fill) {\n                    colorStyles.fill = fill;\n                }\n                if (stroke) {\n                    colorStyles.stroke = stroke;\n                }\n            }\n            if (updater.getTransformValues) {\n                const updaterTransform = updater.getTransformValues(particle);\n                for (const key in updaterTransform) {\n                    setTransformValue(transform, updaterTransform, key);\n                }\n            }\n            (_a = updater.beforeDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    _applyResizePlugins() {\n        for (const plugin of this._resizePlugins) {\n            if (plugin.resize) {\n                plugin.resize();\n            }\n        }\n    }\n    _getPluginParticleColors(particle) {\n        let fColor, sColor;\n        for (const plugin of this._colorPlugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    _initCover() {\n        const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n        if (coverRgb) {\n            const coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n            this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n        }\n    }\n    _initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        if (this._fullScreen) {\n            this._originalStyle = deepExtend({}, element.style);\n            this._setFullScreenStyle();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        for (const key in options.style) {\n            if (!key || !options.style) {\n                continue;\n            }\n            const value = options.style[key];\n            if (!value) {\n                continue;\n            }\n            element.style.setProperty(key, value, \"important\");\n        }\n    }\n    async _initTrail() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n        if (!trail.enable) {\n            return;\n        }\n        if (trailFill.color) {\n            const fillColor = rangeColorToRgb(trailFill.color);\n            if (!fillColor) {\n                return;\n            }\n            const trail = options.particles.move.trail;\n            this._trailFill = {\n                color: Object.assign({}, fillColor),\n                opacity: 1 / trail.length,\n            };\n        }\n        else {\n            await new Promise((resolve, reject) => {\n                if (!trailFill.image) {\n                    return;\n                }\n                const img = document.createElement(\"img\");\n                img.addEventListener(\"load\", () => {\n                    this._trailFill = {\n                        image: img,\n                        opacity: 1 / trail.length,\n                    };\n                    resolve();\n                });\n                img.addEventListener(\"error\", (evt) => {\n                    reject(evt.error);\n                });\n                img.src = trailFill.image;\n            });\n        }\n    }\n    _paintBase(baseColor) {\n        this.draw((ctx) => {\n            paintBase(ctx, this.size, baseColor);\n        });\n    }\n    _paintImage(image, opacity) {\n        this.draw((ctx) => {\n            paintImage(ctx, this.size, image, opacity);\n        });\n    }\n    _repairStyle() {\n        var _a, _b;\n        const element = this.element;\n        if (!element) {\n            return;\n        }\n        (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n        this._initStyle();\n        this.initBackground();\n        (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(element, { attributes: true });\n    }\n    _resetOriginalStyle() {\n        const element = this.element, originalStyle = this._originalStyle;\n        if (!(element && originalStyle)) {\n            return;\n        }\n        element.style.position = originalStyle.position;\n        element.style.zIndex = originalStyle.zIndex;\n        element.style.top = originalStyle.top;\n        element.style.left = originalStyle.left;\n        element.style.width = originalStyle.width;\n        element.style.height = originalStyle.height;\n    }\n    _setFullScreenStyle() {\n        const element = this.element;\n        if (!element) {\n            return;\n        }\n        const priority = \"important\";\n        element.style.setProperty(\"position\", \"fixed\", priority);\n        element.style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n        element.style.setProperty(\"top\", \"0\", priority);\n        element.style.setProperty(\"left\", \"0\", priority);\n        element.style.setProperty(\"width\", \"100%\", priority);\n        element.style.setProperty(\"height\", \"100%\", priority);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}