{"ast":null,"code":"import _classCallCheck from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { getRangeValue } from \"tsparticles-engine\";\nexport var StarDrawer = /*#__PURE__*/function () {\n  function StarDrawer() {\n    _classCallCheck(this, StarDrawer);\n  }\n\n  _createClass(StarDrawer, [{\n    key: \"draw\",\n    value: function draw(context, particle, radius) {\n      var _a;\n\n      var sides = particle.sides,\n          inset = (_a = particle.starInset) !== null && _a !== void 0 ? _a : 2;\n      context.moveTo(0, 0 - radius);\n\n      for (var i = 0; i < sides; i++) {\n        context.rotate(Math.PI / sides);\n        context.lineTo(0, 0 - radius * inset);\n        context.rotate(Math.PI / sides);\n        context.lineTo(0, 0 - radius);\n      }\n    }\n  }, {\n    key: \"getSidesCount\",\n    value: function getSidesCount(particle) {\n      var _a, _b;\n\n      var star = particle.shapeData;\n      return Math.round(getRangeValue((_b = (_a = star === null || star === void 0 ? void 0 : star.sides) !== null && _a !== void 0 ? _a : star === null || star === void 0 ? void 0 : star.nb_sides) !== null && _b !== void 0 ? _b : 5));\n    }\n  }, {\n    key: \"particleInit\",\n    value: function particleInit(container, particle) {\n      var _a;\n\n      var star = particle.shapeData,\n          inset = getRangeValue((_a = star === null || star === void 0 ? void 0 : star.inset) !== null && _a !== void 0 ? _a : 2);\n      particle.starInset = inset;\n    }\n  }]);\n\n  return StarDrawer;\n}();","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/tsparticles-shape-star/esm/StarDrawer.js"],"names":["getRangeValue","StarDrawer","context","particle","radius","_a","sides","inset","starInset","moveTo","i","rotate","Math","PI","lineTo","_b","star","shapeData","round","nb_sides","container"],"mappings":";;AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,WAAaC,UAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,yBACSC,OADT,EACkBC,QADlB,EAC4BC,MAD5B,EACoC;AAC5B,UAAIC,EAAJ;;AACA,UAAMC,KAAK,GAAGH,QAAQ,CAACG,KAAvB;AAAA,UAA8BC,KAAK,GAAG,CAACF,EAAE,GAAGF,QAAQ,CAACK,SAAf,MAA8B,IAA9B,IAAsCH,EAAE,KAAK,KAAK,CAAlD,GAAsDA,EAAtD,GAA2D,CAAjG;AACAH,MAAAA,OAAO,CAACO,MAAR,CAAe,CAAf,EAAkB,IAAIL,MAAtB;;AACA,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAApB,EAA2BI,CAAC,EAA5B,EAAgC;AAC5BR,QAAAA,OAAO,CAACS,MAAR,CAAeC,IAAI,CAACC,EAAL,GAAUP,KAAzB;AACAJ,QAAAA,OAAO,CAACY,MAAR,CAAe,CAAf,EAAkB,IAAIV,MAAM,GAAGG,KAA/B;AACAL,QAAAA,OAAO,CAACS,MAAR,CAAeC,IAAI,CAACC,EAAL,GAAUP,KAAzB;AACAJ,QAAAA,OAAO,CAACY,MAAR,CAAe,CAAf,EAAkB,IAAIV,MAAtB;AACH;AACJ;AAXL;AAAA;AAAA,kCAYkBD,QAZlB,EAY4B;AACpB,UAAIE,EAAJ,EAAQU,EAAR;;AACA,UAAMC,IAAI,GAAGb,QAAQ,CAACc,SAAtB;AACA,aAAOL,IAAI,CAACM,KAAL,CAAWlB,aAAa,CAAC,CAACe,EAAE,GAAG,CAACV,EAAE,GAAGW,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACV,KAAvD,MAAkE,IAAlE,IAA0ED,EAAE,KAAK,KAAK,CAAtF,GAA0FA,EAA1F,GAA+FW,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACG,QAAtJ,MAAoK,IAApK,IAA4KJ,EAAE,KAAK,KAAK,CAAxL,GAA4LA,EAA5L,GAAiM,CAAlM,CAAxB,CAAP;AACH;AAhBL;AAAA;AAAA,iCAiBiBK,SAjBjB,EAiB4BjB,QAjB5B,EAiBsC;AAC9B,UAAIE,EAAJ;;AACA,UAAMW,IAAI,GAAGb,QAAQ,CAACc,SAAtB;AAAA,UAAiCV,KAAK,GAAGP,aAAa,CAAC,CAACK,EAAE,GAAGW,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACT,KAAvD,MAAkE,IAAlE,IAA0EF,EAAE,KAAK,KAAK,CAAtF,GAA0FA,EAA1F,GAA+F,CAAhG,CAAtD;AACAF,MAAAA,QAAQ,CAACK,SAAT,GAAqBD,KAArB;AACH;AArBL;;AAAA;AAAA","sourcesContent":["import { getRangeValue } from \"tsparticles-engine\";\nexport class StarDrawer {\n    draw(context, particle, radius) {\n        var _a;\n        const sides = particle.sides, inset = (_a = particle.starInset) !== null && _a !== void 0 ? _a : 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n    getSidesCount(particle) {\n        var _a, _b;\n        const star = particle.shapeData;\n        return Math.round(getRangeValue((_b = (_a = star === null || star === void 0 ? void 0 : star.sides) !== null && _a !== void 0 ? _a : star === null || star === void 0 ? void 0 : star.nb_sides) !== null && _b !== void 0 ? _b : 5));\n    }\n    particleInit(container, particle) {\n        var _a;\n        const star = particle.shapeData, inset = getRangeValue((_a = star === null || star === void 0 ? void 0 : star.inset) !== null && _a !== void 0 ? _a : 2);\n        particle.starInset = inset;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}