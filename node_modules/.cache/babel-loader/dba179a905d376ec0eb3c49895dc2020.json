{"ast":null,"code":"import _regeneratorRuntime from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _createSuper from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _inherits from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { ExternalInteractorBase } from \"tsparticles-engine\";\nimport { Push } from \"./Options/Classes/Push\";\nimport { itemFromArray } from \"tsparticles-engine\";\nexport var Pusher = /*#__PURE__*/function (_ExternalInteractorBa) {\n  _inherits(Pusher, _ExternalInteractorBa);\n\n  var _super = _createSuper(Pusher);\n\n  function Pusher(container) {\n    var _this;\n\n    _classCallCheck(this, Pusher);\n\n    _this = _super.call(this, container);\n\n    _this.handleClickMode = function (mode) {\n      if (mode !== \"push\") {\n        return;\n      }\n\n      var container = _this.container,\n          options = container.actualOptions,\n          pushOptions = options.interactivity.modes.push;\n\n      if (!pushOptions) {\n        return;\n      }\n\n      var pushNb = pushOptions.quantity;\n\n      if (pushNb <= 0) {\n        return;\n      }\n\n      var group = itemFromArray([undefined].concat(_toConsumableArray(pushOptions.groups))),\n          groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n      container.particles.push(pushNb, container.interactivity.mouse, groupOptions, group);\n    };\n\n    return _this;\n  }\n\n  _createClass(Pusher, [{\n    key: \"clear\",\n    value: function clear() {}\n  }, {\n    key: \"init\",\n    value: function init() {}\n  }, {\n    key: \"interact\",\n    value: function () {\n      var _interact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function interact() {\n        return _interact.apply(this, arguments);\n      }\n\n      return interact;\n    }()\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return true;\n    }\n  }, {\n    key: \"loadModeOptions\",\n    value: function loadModeOptions(options) {\n      if (!options.push) {\n        options.push = new Push();\n      }\n\n      for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        sources[_key - 1] = arguments[_key];\n      }\n\n      for (var _i = 0, _sources = sources; _i < _sources.length; _i++) {\n        var source = _sources[_i];\n        options.push.load(source === null || source === void 0 ? void 0 : source.push);\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }]);\n\n  return Pusher;\n}(ExternalInteractorBase);","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/tsparticles-interaction-external-push/esm/Pusher.js"],"names":["ExternalInteractorBase","Push","itemFromArray","Pusher","container","handleClickMode","mode","options","actualOptions","pushOptions","interactivity","modes","push","pushNb","quantity","group","undefined","groups","groupOptions","particles","mouse","sources","source","load"],"mappings":";;;;;;;AAAA,SAASA,sBAAT,QAAuC,oBAAvC;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,WAAaC,MAAb;AAAA;;AAAA;;AACI,kBAAYC,SAAZ,EAAuB;AAAA;;AAAA;;AACnB,8BAAMA,SAAN;;AACA,UAAKC,eAAL,GAAuB,UAACC,IAAD,EAAU;AAC7B,UAAIA,IAAI,KAAK,MAAb,EAAqB;AACjB;AACH;;AACD,UAAMF,SAAS,GAAG,MAAKA,SAAvB;AAAA,UAAkCG,OAAO,GAAGH,SAAS,CAACI,aAAtD;AAAA,UAAqEC,WAAW,GAAGF,OAAO,CAACG,aAAR,CAAsBC,KAAtB,CAA4BC,IAA/G;;AACA,UAAI,CAACH,WAAL,EAAkB;AACd;AACH;;AACD,UAAMI,MAAM,GAAGJ,WAAW,CAACK,QAA3B;;AACA,UAAID,MAAM,IAAI,CAAd,EAAiB;AACb;AACH;;AACD,UAAME,KAAK,GAAGb,aAAa,EAAEc,SAAF,4BAAgBP,WAAW,CAACQ,MAA5B,GAA3B;AAAA,UAAiEC,YAAY,GAAGH,KAAK,KAAKC,SAAV,GAAsBZ,SAAS,CAACI,aAAV,CAAwBW,SAAxB,CAAkCF,MAAlC,CAAyCF,KAAzC,CAAtB,GAAwEC,SAAxJ;AACAZ,MAAAA,SAAS,CAACe,SAAV,CAAoBP,IAApB,CAAyBC,MAAzB,EAAiCT,SAAS,CAACM,aAAV,CAAwBU,KAAzD,EAAgEF,YAAhE,EAA8EH,KAA9E;AACH,KAdD;;AAFmB;AAiBtB;;AAlBL;AAAA;AAAA,4BAmBY,CACP;AApBL;AAAA;AAAA,2BAqBW,CACN;AAtBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gCAyBgB;AACR,aAAO,IAAP;AACH;AA3BL;AAAA;AAAA,oCA4BoBR,OA5BpB,EA4ByC;AACjC,UAAI,CAACA,OAAO,CAACK,IAAb,EAAmB;AACfL,QAAAA,OAAO,CAACK,IAAR,GAAe,IAAIX,IAAJ,EAAf;AACH;;AAHgC,wCAAToB,OAAS;AAATA,QAAAA,OAAS;AAAA;;AAIjC,kCAAqBA,OAArB,8BAA8B;AAAzB,YAAMC,MAAM,eAAZ;AACDf,QAAAA,OAAO,CAACK,IAAR,CAAaW,IAAb,CAAkBD,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACV,IAAzE;AACH;AACJ;AAnCL;AAAA;AAAA,4BAoCY,CACP;AArCL;;AAAA;AAAA,EAA4BZ,sBAA5B","sourcesContent":["import { ExternalInteractorBase } from \"tsparticles-engine\";\nimport { Push } from \"./Options/Classes/Push\";\nimport { itemFromArray } from \"tsparticles-engine\";\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"push\") {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const pushNb = pushOptions.quantity;\n            if (pushNb <= 0) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            container.particles.push(pushNb, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source === null || source === void 0 ? void 0 : source.push);\n        }\n    }\n    reset() {\n    }\n}\n"]},"metadata":{},"sourceType":"module"}