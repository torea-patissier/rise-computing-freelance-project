{"ast":null,"code":"export class CircleDrawer {\n  draw(context, particle, radius) {\n    if (!particle.circleRange) {\n      particle.circleRange = {\n        min: 0,\n        max: Math.PI * 2\n      };\n    }\n\n    const circleRange = particle.circleRange;\n    context.arc(0, 0, radius, circleRange.min, circleRange.max, false);\n  }\n\n  getSidesCount() {\n    return 12;\n  }\n\n  particleInit(container, particle) {\n    var _a;\n\n    const shapeData = particle.shapeData,\n          angle = (_a = shapeData === null || shapeData === void 0 ? void 0 : shapeData.angle) !== null && _a !== void 0 ? _a : {\n      max: 360,\n      min: 0\n    };\n    particle.circleRange = typeof angle !== \"object\" ? {\n      min: 0,\n      max: angle * Math.PI / 180\n    } : {\n      min: angle.min * Math.PI / 180,\n      max: angle.max * Math.PI / 180\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/tsparticles-shape-circle/esm/CircleDrawer.js"],"names":["CircleDrawer","draw","context","particle","radius","circleRange","min","max","Math","PI","arc","getSidesCount","particleInit","container","_a","shapeData","angle"],"mappings":"AAAA,OAAO,MAAMA,YAAN,CAAmB;AACtBC,EAAAA,IAAI,CAACC,OAAD,EAAUC,QAAV,EAAoBC,MAApB,EAA4B;AAC5B,QAAI,CAACD,QAAQ,CAACE,WAAd,EAA2B;AACvBF,MAAAA,QAAQ,CAACE,WAAT,GAAuB;AAAEC,QAAAA,GAAG,EAAE,CAAP;AAAUC,QAAAA,GAAG,EAAEC,IAAI,CAACC,EAAL,GAAU;AAAzB,OAAvB;AACH;;AACD,UAAMJ,WAAW,GAAGF,QAAQ,CAACE,WAA7B;AACAH,IAAAA,OAAO,CAACQ,GAAR,CAAY,CAAZ,EAAe,CAAf,EAAkBN,MAAlB,EAA0BC,WAAW,CAACC,GAAtC,EAA2CD,WAAW,CAACE,GAAvD,EAA4D,KAA5D;AACH;;AACDI,EAAAA,aAAa,GAAG;AACZ,WAAO,EAAP;AACH;;AACDC,EAAAA,YAAY,CAACC,SAAD,EAAYV,QAAZ,EAAsB;AAC9B,QAAIW,EAAJ;;AACA,UAAMC,SAAS,GAAGZ,QAAQ,CAACY,SAA3B;AAAA,UAAsCC,KAAK,GAAG,CAACF,EAAE,GAAGC,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAACC,KAAtE,MAAiF,IAAjF,IAAyFF,EAAE,KAAK,KAAK,CAArG,GAAyGA,EAAzG,GAA8G;AACxJP,MAAAA,GAAG,EAAE,GADmJ;AAExJD,MAAAA,GAAG,EAAE;AAFmJ,KAA5J;AAIAH,IAAAA,QAAQ,CAACE,WAAT,GACI,OAAOW,KAAP,KAAiB,QAAjB,GACM;AACEV,MAAAA,GAAG,EAAE,CADP;AAEEC,MAAAA,GAAG,EAAGS,KAAK,GAAGR,IAAI,CAACC,EAAd,GAAoB;AAF3B,KADN,GAKM;AAAEH,MAAAA,GAAG,EAAGU,KAAK,CAACV,GAAN,GAAYE,IAAI,CAACC,EAAlB,GAAwB,GAA/B;AAAoCF,MAAAA,GAAG,EAAGS,KAAK,CAACT,GAAN,GAAYC,IAAI,CAACC,EAAlB,GAAwB;AAAjE,KANV;AAOH;;AAxBqB","sourcesContent":["export class CircleDrawer {\n    draw(context, particle, radius) {\n        if (!particle.circleRange) {\n            particle.circleRange = { min: 0, max: Math.PI * 2 };\n        }\n        const circleRange = particle.circleRange;\n        context.arc(0, 0, radius, circleRange.min, circleRange.max, false);\n    }\n    getSidesCount() {\n        return 12;\n    }\n    particleInit(container, particle) {\n        var _a;\n        const shapeData = particle.shapeData, angle = (_a = shapeData === null || shapeData === void 0 ? void 0 : shapeData.angle) !== null && _a !== void 0 ? _a : {\n            max: 360,\n            min: 0,\n        };\n        particle.circleRange =\n            typeof angle !== \"object\"\n                ? {\n                    min: 0,\n                    max: (angle * Math.PI) / 180,\n                }\n                : { min: (angle.min * Math.PI) / 180, max: (angle.max * Math.PI) / 180 };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}