{"ast":null,"code":"import { Container } from \"./Container\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nimport { itemFromSingleOrMultiple } from \"../Utils/Utils\";\n\nasync function getDataFromUrl(jsonUrl, index) {\n  const url = itemFromSingleOrMultiple(jsonUrl, index);\n\n  if (!url) {\n    return;\n  }\n\n  const response = await fetch(url);\n\n  if (response.ok) {\n    return response.json();\n  }\n\n  console.error(`tsParticles - Error ${response.status} while retrieving config file`);\n}\n\nexport class Loader {\n  constructor(engine) {\n    this._engine = engine;\n  }\n\n  load(tagId, options, index) {\n    const params = {\n      index,\n      remote: false\n    };\n\n    if (typeof tagId === \"string\") {\n      params.tagId = tagId;\n    } else {\n      params.options = tagId;\n    }\n\n    if (typeof options === \"number\") {\n      params.index = options;\n    } else {\n      params.options = options !== null && options !== void 0 ? options : params.options;\n    }\n\n    return this.loadOptions(params);\n  }\n\n  async loadJSON(tagId, jsonUrl, index) {\n    let url, id;\n\n    if (typeof jsonUrl === \"number\" || jsonUrl === undefined) {\n      url = tagId;\n    } else {\n      id = tagId;\n      url = jsonUrl;\n    }\n\n    return this.loadRemoteOptions({\n      tagId: id,\n      url,\n      index,\n      remote: true\n    });\n  }\n\n  async loadOptions(params) {\n    var _a, _b, _c;\n\n    const tagId = (_a = params.tagId) !== null && _a !== void 0 ? _a : `tsparticles${Math.floor(getRandom() * 10000)}`,\n          {\n      index,\n      url: jsonUrl,\n      remote\n    } = params,\n          options = remote ? await getDataFromUrl(jsonUrl, index) : params.options;\n    let domContainer = (_b = params.element) !== null && _b !== void 0 ? _b : document.getElementById(tagId);\n\n    if (!domContainer) {\n      domContainer = document.createElement(\"div\");\n      domContainer.id = tagId;\n      (_c = document.querySelector(\"body\")) === null || _c === void 0 ? void 0 : _c.append(domContainer);\n    }\n\n    const currentOptions = itemFromSingleOrMultiple(options, index),\n          dom = this._engine.dom(),\n          oldIndex = dom.findIndex(v => v.id === tagId);\n\n    if (oldIndex >= 0) {\n      const old = this._engine.domItem(oldIndex);\n\n      if (old && !old.destroyed) {\n        old.destroy();\n        dom.splice(oldIndex, 1);\n      }\n    }\n\n    let canvasEl;\n\n    if (domContainer.tagName.toLowerCase() === \"canvas\") {\n      canvasEl = domContainer;\n      canvasEl.dataset[generatedAttribute] = \"false\";\n    } else {\n      const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n\n      if (existingCanvases.length) {\n        canvasEl = existingCanvases[0];\n        canvasEl.dataset[generatedAttribute] = \"false\";\n      } else {\n        canvasEl = document.createElement(\"canvas\");\n        canvasEl.dataset[generatedAttribute] = \"true\";\n        domContainer.appendChild(canvasEl);\n      }\n    }\n\n    if (!canvasEl.style.width) {\n      canvasEl.style.width = \"100%\";\n    }\n\n    if (!canvasEl.style.height) {\n      canvasEl.style.height = \"100%\";\n    }\n\n    const newItem = new Container(this._engine, tagId, currentOptions);\n\n    if (oldIndex >= 0) {\n      dom.splice(oldIndex, 0, newItem);\n    } else {\n      dom.push(newItem);\n    }\n\n    newItem.canvas.loadCanvas(canvasEl);\n    await newItem.start();\n    return newItem;\n  }\n\n  async loadRemoteOptions(params) {\n    return this.loadOptions(params);\n  }\n\n  async set(id, domContainer, options, index) {\n    const params = {\n      index,\n      remote: false\n    };\n\n    if (typeof id === \"string\") {\n      params.tagId = id;\n    } else {\n      params.element = id;\n    }\n\n    if (domContainer instanceof HTMLElement) {\n      params.element = domContainer;\n    } else {\n      params.options = domContainer;\n    }\n\n    if (typeof options === \"number\") {\n      params.index = options;\n    } else {\n      params.options = options !== null && options !== void 0 ? options : params.options;\n    }\n\n    return this.loadOptions(params);\n  }\n\n  async setJSON(id, domContainer, jsonUrl, index) {\n    let url, newId, newIndex, element;\n\n    if (id instanceof HTMLElement) {\n      element = id;\n      url = domContainer;\n      newIndex = jsonUrl;\n    } else {\n      newId = id;\n      element = domContainer;\n      url = jsonUrl;\n      newIndex = index;\n    }\n\n    return this.loadRemoteOptions({\n      tagId: newId,\n      url,\n      index: newIndex,\n      element,\n      remote: true\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/tsparticles-engine/esm/Core/Loader.js"],"names":["Container","generatedAttribute","getRandom","itemFromSingleOrMultiple","getDataFromUrl","jsonUrl","index","url","response","fetch","ok","json","console","error","status","Loader","constructor","engine","_engine","load","tagId","options","params","remote","loadOptions","loadJSON","id","undefined","loadRemoteOptions","_a","_b","_c","Math","floor","domContainer","element","document","getElementById","createElement","querySelector","append","currentOptions","dom","oldIndex","findIndex","v","old","domItem","destroyed","destroy","splice","canvasEl","tagName","toLowerCase","dataset","existingCanvases","getElementsByTagName","length","appendChild","style","width","height","newItem","push","canvas","loadCanvas","start","set","HTMLElement","setJSON","newId","newIndex"],"mappings":"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","sourcesContent":["import { Container } from \"./Container\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nimport { itemFromSingleOrMultiple } from \"../Utils/Utils\";\nasync function getDataFromUrl(jsonUrl, index) {\n    const url = itemFromSingleOrMultiple(jsonUrl, index);\n    if (!url) {\n        return;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    console.error(`tsParticles - Error ${response.status} while retrieving config file`);\n}\nexport class Loader {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    load(tagId, options, index) {\n        const params = { index, remote: false };\n        if (typeof tagId === \"string\") {\n            params.tagId = tagId;\n        }\n        else {\n            params.options = tagId;\n        }\n        if (typeof options === \"number\") {\n            params.index = options;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    async loadJSON(tagId, jsonUrl, index) {\n        let url, id;\n        if (typeof jsonUrl === \"number\" || jsonUrl === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = jsonUrl;\n        }\n        return this.loadRemoteOptions({ tagId: id, url, index, remote: true });\n    }\n    async loadOptions(params) {\n        var _a, _b, _c;\n        const tagId = (_a = params.tagId) !== null && _a !== void 0 ? _a : `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url: jsonUrl, remote } = params, options = remote ? await getDataFromUrl(jsonUrl, index) : params.options;\n        let domContainer = (_b = params.element) !== null && _b !== void 0 ? _b : document.getElementById(tagId);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = tagId;\n            (_c = document.querySelector(\"body\")) === null || _c === void 0 ? void 0 : _c.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this._engine.dom(), oldIndex = dom.findIndex((v) => v.id === tagId);\n        if (oldIndex >= 0) {\n            const old = this._engine.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this._engine, tagId, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n    async loadRemoteOptions(params) {\n        return this.loadOptions(params);\n    }\n    async set(id, domContainer, options, index) {\n        const params = { index, remote: false };\n        if (typeof id === \"string\") {\n            params.tagId = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (domContainer instanceof HTMLElement) {\n            params.element = domContainer;\n        }\n        else {\n            params.options = domContainer;\n        }\n        if (typeof options === \"number\") {\n            params.index = options;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    async setJSON(id, domContainer, jsonUrl, index) {\n        let url, newId, newIndex, element;\n        if (id instanceof HTMLElement) {\n            element = id;\n            url = domContainer;\n            newIndex = jsonUrl;\n        }\n        else {\n            newId = id;\n            element = domContainer;\n            url = jsonUrl;\n            newIndex = index;\n        }\n        return this.loadRemoteOptions({ tagId: newId, url, index: newIndex, element, remote: true });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}