{"ast":null,"code":"import _classCallCheck from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar shapes = new Map();\nexport var ShapeManager = /*#__PURE__*/function () {\n  function ShapeManager(engine) {\n    _classCallCheck(this, ShapeManager);\n\n    this._engine = engine;\n  }\n\n  _createClass(ShapeManager, [{\n    key: \"addShape\",\n    value: function addShape(name, drawer) {\n      if (!this.getShape(name)) {\n        shapes.set(name, drawer);\n      }\n    }\n  }, {\n    key: \"getShape\",\n    value: function getShape(name) {\n      return shapes.get(name);\n    }\n  }, {\n    key: \"getSupportedShapes\",\n    value: function getSupportedShapes() {\n      return shapes.keys();\n    }\n  }]);\n\n  return ShapeManager;\n}();","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/tsparticles-plugin-emitters/esm/ShapeManager.js"],"names":["shapes","Map","ShapeManager","engine","_engine","name","drawer","getShape","set","get","keys"],"mappings":";;AAAA,IAAMA,MAAM,GAAG,IAAIC,GAAJ,EAAf;AACA,WAAaC,YAAb;AACI,wBAAYC,MAAZ,EAAoB;AAAA;;AAChB,SAAKC,OAAL,GAAeD,MAAf;AACH;;AAHL;AAAA;AAAA,6BAIaE,IAJb,EAImBC,MAJnB,EAI2B;AACnB,UAAI,CAAC,KAAKC,QAAL,CAAcF,IAAd,CAAL,EAA0B;AACtBL,QAAAA,MAAM,CAACQ,GAAP,CAAWH,IAAX,EAAiBC,MAAjB;AACH;AACJ;AARL;AAAA;AAAA,6BASaD,IATb,EASmB;AACX,aAAOL,MAAM,CAACS,GAAP,CAAWJ,IAAX,CAAP;AACH;AAXL;AAAA;AAAA,yCAYyB;AACjB,aAAOL,MAAM,CAACU,IAAP,EAAP;AACH;AAdL;;AAAA;AAAA","sourcesContent":["const shapes = new Map();\nexport class ShapeManager {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    addShape(name, drawer) {\n        if (!this.getShape(name)) {\n            shapes.set(name, drawer);\n        }\n    }\n    getShape(name) {\n        return shapes.get(name);\n    }\n    getSupportedShapes() {\n        return shapes.keys();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}