{"ast":null,"code":"import { ExternalInteractorBase } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n\n    this.handleClickMode = mode => {\n      const container = this.container,\n            options = container.actualOptions;\n\n      if (!options.interactivity.modes.remove || mode !== \"remove\") {\n        return;\n      }\n\n      const removeNb = options.interactivity.modes.remove.quantity;\n      container.particles.removeQuantity(removeNb);\n    };\n  }\n\n  clear() {}\n\n  init() {}\n\n  async interact() {}\n\n  isEnabled() {\n    return true;\n  }\n\n  loadModeOptions(options, ...sources) {\n    if (!options.remove) {\n      options.remove = new Remove();\n    }\n\n    for (const source of sources) {\n      options.remove.load(source === null || source === void 0 ? void 0 : source.remove);\n    }\n  }\n\n  reset() {}\n\n}","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/tsparticles-interaction-external-remove/esm/Remover.js"],"names":["ExternalInteractorBase","Remove","Remover","constructor","container","handleClickMode","mode","options","actualOptions","interactivity","modes","remove","removeNb","quantity","particles","removeQuantity","clear","init","interact","isEnabled","loadModeOptions","sources","source","load","reset"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,oBAAvC;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,OAAO,MAAMC,OAAN,SAAsBF,sBAAtB,CAA6C;AAChDG,EAAAA,WAAW,CAACC,SAAD,EAAY;AACnB,UAAMA,SAAN;;AACA,SAAKC,eAAL,GAAwBC,IAAD,IAAU;AAC7B,YAAMF,SAAS,GAAG,KAAKA,SAAvB;AAAA,YAAkCG,OAAO,GAAGH,SAAS,CAACI,aAAtD;;AACA,UAAI,CAACD,OAAO,CAACE,aAAR,CAAsBC,KAAtB,CAA4BC,MAA7B,IAAuCL,IAAI,KAAK,QAApD,EAA8D;AAC1D;AACH;;AACD,YAAMM,QAAQ,GAAGL,OAAO,CAACE,aAAR,CAAsBC,KAAtB,CAA4BC,MAA5B,CAAmCE,QAApD;AACAT,MAAAA,SAAS,CAACU,SAAV,CAAoBC,cAApB,CAAmCH,QAAnC;AACH,KAPD;AAQH;;AACDI,EAAAA,KAAK,GAAG,CACP;;AACDC,EAAAA,IAAI,GAAG,CACN;;AACD,QAAMC,QAAN,GAAiB,CAChB;;AACDC,EAAAA,SAAS,GAAG;AACR,WAAO,IAAP;AACH;;AACDC,EAAAA,eAAe,CAACb,OAAD,EAAU,GAAGc,OAAb,EAAsB;AACjC,QAAI,CAACd,OAAO,CAACI,MAAb,EAAqB;AACjBJ,MAAAA,OAAO,CAACI,MAAR,GAAiB,IAAIV,MAAJ,EAAjB;AACH;;AACD,SAAK,MAAMqB,MAAX,IAAqBD,OAArB,EAA8B;AAC1Bd,MAAAA,OAAO,CAACI,MAAR,CAAeY,IAAf,CAAoBD,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACX,MAA3E;AACH;AACJ;;AACDa,EAAAA,KAAK,GAAG,CACP;;AA9B+C","sourcesContent":["import { ExternalInteractorBase } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== \"remove\") {\n                return;\n            }\n            const removeNb = options.interactivity.modes.remove.quantity;\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source === null || source === void 0 ? void 0 : source.remove);\n        }\n    }\n    reset() {\n    }\n}\n"]},"metadata":{},"sourceType":"module"}