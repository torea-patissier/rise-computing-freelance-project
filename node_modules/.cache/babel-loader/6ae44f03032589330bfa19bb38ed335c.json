{"ast":null,"code":"import { elementIndex } from '../../shared/utils.js';\nexport default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n\n  const swiper = this;\n  let newIndex = index;\n\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      newIndex = elementIndex(swiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === newIndex)[0]);\n    }\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/swiper/core/slide/slideToLoop.js"],"names":["elementIndex","slideToLoop","index","speed","params","runCallbacks","internal","indexAsNumber","parseInt","swiper","newIndex","loop","virtual","enabled","slidesBefore","slides","filter","slideEl","getAttribute","slideTo"],"mappings":"AAAA,SAASA,YAAT,QAA6B,uBAA7B;AACA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAG,CAA7B,EAAgCC,KAAK,GAAG,KAAKC,MAAL,CAAYD,KAApD,EAA2DE,YAAY,GAAG,IAA1E,EAAgFC,QAAhF,EAA0F;AACvG,MAAI,OAAOJ,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAMK,aAAa,GAAGC,QAAQ,CAACN,KAAD,EAAQ,EAAR,CAA9B;AACAA,IAAAA,KAAK,GAAGK,aAAR;AACD;;AACD,QAAME,MAAM,GAAG,IAAf;AACA,MAAIC,QAAQ,GAAGR,KAAf;;AACA,MAAIO,MAAM,CAACL,MAAP,CAAcO,IAAlB,EAAwB;AACtB,QAAIF,MAAM,CAACG,OAAP,IAAkBH,MAAM,CAACL,MAAP,CAAcQ,OAAd,CAAsBC,OAA5C,EAAqD;AACnD;AACAH,MAAAA,QAAQ,GAAGA,QAAQ,GAAGD,MAAM,CAACG,OAAP,CAAeE,YAArC;AACD,KAHD,MAGO;AACLJ,MAAAA,QAAQ,GAAGV,YAAY,CAACS,MAAM,CAACM,MAAP,CAAcC,MAAd,CAAqBC,OAAO,IAAIA,OAAO,CAACC,YAAR,CAAqB,yBAArB,IAAkD,CAAlD,KAAwDR,QAAxF,EAAkG,CAAlG,CAAD,CAAvB;AACD;AACF;;AACD,SAAOD,MAAM,CAACU,OAAP,CAAeT,QAAf,EAAyBP,KAAzB,EAAgCE,YAAhC,EAA8CC,QAA9C,CAAP;AACD","sourcesContent":["import { elementIndex } from '../../shared/utils.js';\nexport default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      newIndex = elementIndex(swiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === newIndex)[0]);\n    }\n  }\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}"]},"metadata":{},"sourceType":"module"}