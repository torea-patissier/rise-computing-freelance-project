{"ast":null,"code":"import _classCallCheck from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Vector, isPointInside } from \"tsparticles-engine\";\nexport var NoneOutMode = /*#__PURE__*/function () {\n  function NoneOutMode(container) {\n    _classCallCheck(this, NoneOutMode);\n\n    this.container = container;\n    this.modes = [\"none\"];\n  }\n\n  _createClass(NoneOutMode, [{\n    key: \"update\",\n    value: function update(particle, direction, delta, outMode) {\n      if (!this.modes.includes(outMode)) {\n        return;\n      }\n\n      if (particle.options.move.distance.horizontal && (direction === \"left\" || direction === \"right\") || particle.options.move.distance.vertical && (direction === \"top\" || direction === \"bottom\")) {\n        return;\n      }\n\n      var gravityOptions = particle.options.move.gravity,\n          container = this.container;\n      var canvasSize = container.canvas.size;\n      var pRadius = particle.getRadius();\n\n      if (!gravityOptions.enable) {\n        if (particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius || particle.velocity.y < 0 && particle.position.y >= -pRadius || particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius || particle.velocity.x < 0 && particle.position.x >= -pRadius) {\n          return;\n        }\n\n        if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n          container.particles.remove(particle);\n        }\n      } else {\n        var position = particle.position;\n\n        if (!gravityOptions.inverse && position.y > canvasSize.height + pRadius && direction === \"bottom\" || gravityOptions.inverse && position.y < -pRadius && direction === \"top\") {\n          container.particles.remove(particle);\n        }\n      }\n    }\n  }]);\n\n  return NoneOutMode;\n}();","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/open-react-template/node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js"],"names":["Vector","isPointInside","NoneOutMode","container","modes","particle","direction","delta","outMode","includes","options","move","distance","horizontal","vertical","gravityOptions","gravity","canvasSize","canvas","size","pRadius","getRadius","enable","velocity","y","position","height","x","width","origin","particles","remove","inverse"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,aAAjB,QAAsC,oBAAtC;AACA,WAAaC,WAAb;AACI,uBAAYC,SAAZ,EAAuB;AAAA;;AACnB,SAAKA,SAAL,GAAiBA,SAAjB;AACA,SAAKC,KAAL,GAAa,CAAC,MAAD,CAAb;AACH;;AAJL;AAAA;AAAA,2BAKWC,QALX,EAKqBC,SALrB,EAKgCC,KALhC,EAKuCC,OALvC,EAKgD;AACxC,UAAI,CAAC,KAAKJ,KAAL,CAAWK,QAAX,CAAoBD,OAApB,CAAL,EAAmC;AAC/B;AACH;;AACD,UAAKH,QAAQ,CAACK,OAAT,CAAiBC,IAAjB,CAAsBC,QAAtB,CAA+BC,UAA/B,KACAP,SAAS,KAAK,MAAd,IAAwBA,SAAS,KAAK,OADtC,CAAD,IAECD,QAAQ,CAACK,OAAT,CAAiBC,IAAjB,CAAsBC,QAAtB,CAA+BE,QAA/B,KACIR,SAAS,KAAK,KAAd,IAAuBA,SAAS,KAAK,QADzC,CAFL,EAG0D;AACtD;AACH;;AACD,UAAMS,cAAc,GAAGV,QAAQ,CAACK,OAAT,CAAiBC,IAAjB,CAAsBK,OAA7C;AAAA,UAAsDb,SAAS,GAAG,KAAKA,SAAvE;AACA,UAAMc,UAAU,GAAGd,SAAS,CAACe,MAAV,CAAiBC,IAApC;AACA,UAAMC,OAAO,GAAGf,QAAQ,CAACgB,SAAT,EAAhB;;AACA,UAAI,CAACN,cAAc,CAACO,MAApB,EAA4B;AACxB,YAAKjB,QAAQ,CAACkB,QAAT,CAAkBC,CAAlB,GAAsB,CAAtB,IAA2BnB,QAAQ,CAACoB,QAAT,CAAkBD,CAAlB,IAAuBP,UAAU,CAACS,MAAX,GAAoBN,OAAvE,IACCf,QAAQ,CAACkB,QAAT,CAAkBC,CAAlB,GAAsB,CAAtB,IAA2BnB,QAAQ,CAACoB,QAAT,CAAkBD,CAAlB,IAAuB,CAACJ,OADpD,IAECf,QAAQ,CAACkB,QAAT,CAAkBI,CAAlB,GAAsB,CAAtB,IAA2BtB,QAAQ,CAACoB,QAAT,CAAkBE,CAAlB,IAAuBV,UAAU,CAACW,KAAX,GAAmBR,OAFtE,IAGCf,QAAQ,CAACkB,QAAT,CAAkBI,CAAlB,GAAsB,CAAtB,IAA2BtB,QAAQ,CAACoB,QAAT,CAAkBE,CAAlB,IAAuB,CAACP,OAHxD,EAGkE;AAC9D;AACH;;AACD,YAAI,CAACnB,aAAa,CAACI,QAAQ,CAACoB,QAAV,EAAoBtB,SAAS,CAACe,MAAV,CAAiBC,IAArC,EAA2CnB,MAAM,CAAC6B,MAAlD,EAA0DT,OAA1D,EAAmEd,SAAnE,CAAlB,EAAiG;AAC7FH,UAAAA,SAAS,CAAC2B,SAAV,CAAoBC,MAApB,CAA2B1B,QAA3B;AACH;AACJ,OAVD,MAWK;AACD,YAAMoB,QAAQ,GAAGpB,QAAQ,CAACoB,QAA1B;;AACA,YAAK,CAACV,cAAc,CAACiB,OAAhB,IACDP,QAAQ,CAACD,CAAT,GAAaP,UAAU,CAACS,MAAX,GAAoBN,OADhC,IAEDd,SAAS,KAAK,QAFd,IAGCS,cAAc,CAACiB,OAAf,IAA0BP,QAAQ,CAACD,CAAT,GAAa,CAACJ,OAAxC,IAAmDd,SAAS,KAAK,KAHtE,EAG8E;AAC1EH,UAAAA,SAAS,CAAC2B,SAAV,CAAoBC,MAApB,CAA2B1B,QAA3B;AACH;AACJ;AACJ;AAtCL;;AAAA;AAAA","sourcesContent":["import { Vector, isPointInside } from \"tsparticles-engine\";\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"none\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical &&\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < 0 && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < 0 && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === \"bottom\") ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}