{"ast":null,"code":"import _classCallCheck from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Vector, calcPositionOrRandomFromSizeRanged, deepExtend, getRangeValue, isPointInside, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize\";\nexport var EmitterInstance = /*#__PURE__*/function () {\n  function EmitterInstance(engine, emitters, container, options, position) {\n    _classCallCheck(this, EmitterInstance);\n\n    var _a, _b, _c, _d, _e, _f, _g;\n\n    var _h;\n\n    this.emitters = emitters;\n    this.container = container;\n    this._engine = engine;\n    this._currentDuration = 0;\n    this._currentEmitDelay = 0;\n    this._currentSpawnDelay = 0;\n    this._initialPosition = position;\n\n    if (options instanceof Emitter) {\n      this.options = options;\n    } else {\n      this.options = new Emitter();\n      this.options.load(options);\n    }\n\n    this._spawnDelay = ((_a = this.options.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000 / this.container.retina.reduceFactor;\n    this.position = (_b = this._initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n    this.name = this.options.name;\n    this._shape = (_c = this._engine.emitterShapeManager) === null || _c === void 0 ? void 0 : _c.getShape(this.options.shape);\n    this.fill = this.options.fill;\n    this._firstSpawn = !this.options.life.wait;\n    this._startParticlesAdded = false;\n    var particlesOptions = deepExtend({}, this.options.particles);\n    particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : particlesOptions = {};\n    (_d = particlesOptions.move) !== null && _d !== void 0 ? _d : particlesOptions.move = {};\n    (_e = (_h = particlesOptions.move).direction) !== null && _e !== void 0 ? _e : _h.direction = this.options.direction;\n\n    if (this.options.spawnColor) {\n      this.spawnColor = rangeColorToHsl(this.options.spawnColor);\n    }\n\n    this._paused = !this.options.autoPlay;\n    this._particlesOptions = particlesOptions;\n    this.size = (_f = this.options.size) !== null && _f !== void 0 ? _f : function () {\n      var size = new EmitterSize();\n      size.load({\n        height: 0,\n        mode: \"percent\",\n        width: 0\n      });\n      return size;\n    }();\n    this._lifeCount = (_g = this.options.life.count) !== null && _g !== void 0 ? _g : -1;\n    this._immortal = this._lifeCount <= 0;\n\n    this._engine.dispatchEvent(\"emitterCreated\", {\n      container: container,\n      data: {\n        emitter: this\n      }\n    });\n\n    this.play();\n  }\n\n  _createClass(EmitterInstance, [{\n    key: \"externalPause\",\n    value: function externalPause() {\n      this._paused = true;\n      this.pause();\n    }\n  }, {\n    key: \"externalPlay\",\n    value: function externalPlay() {\n      this._paused = false;\n      this.play();\n    }\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      if (this.options.domId) {\n        var container = this.container,\n            element = document.getElementById(this.options.domId);\n\n        if (element) {\n          var elRect = element.getBoundingClientRect();\n          return {\n            x: (elRect.x + elRect.width / 2) * container.retina.pixelRatio,\n            y: (elRect.y + elRect.height / 2) * container.retina.pixelRatio\n          };\n        }\n      }\n\n      return this.position;\n    }\n  }, {\n    key: \"getSize\",\n    value: function getSize() {\n      var container = this.container;\n\n      if (this.options.domId) {\n        var element = document.getElementById(this.options.domId);\n\n        if (element) {\n          var elRect = element.getBoundingClientRect();\n          return {\n            width: elRect.width * container.retina.pixelRatio,\n            height: elRect.height * container.retina.pixelRatio\n          };\n        }\n      }\n\n      return {\n        width: this.size.mode === \"percent\" ? container.canvas.size.width * this.size.width / 100 : this.size.width,\n        height: this.size.mode === \"percent\" ? container.canvas.size.height * this.size.height / 100 : this.size.height\n      };\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      if (this._paused) {\n        return;\n      }\n\n      delete this._emitDelay;\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      var _a;\n\n      if (this._paused) {\n        return;\n      }\n\n      if (!(this.container.retina.reduceFactor && (this._lifeCount > 0 || this._immortal || !this.options.life.count) && (this._firstSpawn || this._currentSpawnDelay >= ((_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0)))) {\n        return;\n      }\n\n      if (this._emitDelay === undefined) {\n        var delay = getRangeValue(this.options.rate.delay);\n        this._emitDelay = 1000 * delay / this.container.retina.reduceFactor;\n      }\n\n      if (this._lifeCount > 0 || this._immortal) {\n        this.prepareToDie();\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var initialPosition = this._initialPosition;\n      this.position = initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin) ? initialPosition : this.calcPosition();\n    }\n  }, {\n    key: \"update\",\n    value: function update(delta) {\n      var _a, _b, _c;\n\n      if (this._paused) {\n        return;\n      }\n\n      if (this._firstSpawn) {\n        this._firstSpawn = false;\n        this._currentSpawnDelay = (_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0;\n        this._currentEmitDelay = (_b = this._emitDelay) !== null && _b !== void 0 ? _b : 0;\n      }\n\n      if (!this._startParticlesAdded) {\n        this._startParticlesAdded = true;\n        this.emitParticles(this.options.startCount);\n      }\n\n      if (this._duration !== undefined) {\n        this._currentDuration += delta.value;\n\n        if (this._currentDuration >= this._duration) {\n          this.pause();\n\n          if (this._spawnDelay !== undefined) {\n            delete this._spawnDelay;\n          }\n\n          if (!this._immortal) {\n            this._lifeCount--;\n          }\n\n          if (this._lifeCount > 0 || this._immortal) {\n            this.position = this.calcPosition();\n            this._spawnDelay = ((_c = this.options.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000 / this.container.retina.reduceFactor;\n          } else {\n            this.destroy();\n          }\n\n          this._currentDuration -= this._duration;\n          delete this._duration;\n        }\n      }\n\n      if (this._spawnDelay !== undefined) {\n        this._currentSpawnDelay += delta.value;\n\n        if (this._currentSpawnDelay >= this._spawnDelay) {\n          this._engine.dispatchEvent(\"emitterPlay\", {\n            container: this.container\n          });\n\n          this.play();\n          this._currentSpawnDelay -= this._currentSpawnDelay;\n          delete this._spawnDelay;\n        }\n      }\n\n      if (this._emitDelay !== undefined) {\n        this._currentEmitDelay += delta.value;\n\n        if (this._currentEmitDelay >= this._emitDelay) {\n          this.emit();\n          this._currentEmitDelay -= this._emitDelay;\n        }\n      }\n    }\n  }, {\n    key: \"calcPosition\",\n    value: function calcPosition() {\n      return calcPositionOrRandomFromSizeRanged({\n        size: this.container.canvas.size,\n        position: this.options.position\n      });\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.emitters.removeEmitter(this);\n\n      this._engine.dispatchEvent(\"emitterDestroyed\", {\n        container: this.container,\n        data: {\n          emitter: this\n        }\n      });\n    }\n  }, {\n    key: \"emit\",\n    value: function emit() {\n      if (this._paused) {\n        return;\n      }\n\n      var quantity = getRangeValue(this.options.rate.quantity);\n      this.emitParticles(quantity);\n    }\n  }, {\n    key: \"emitParticles\",\n    value: function emitParticles(quantity) {\n      var _a, _b, _c;\n\n      var position = this.getPosition(),\n          size = this.getSize(),\n          singleParticlesOptions = itemFromSingleOrMultiple(this._particlesOptions);\n\n      for (var i = 0; i < quantity; i++) {\n        var particlesOptions = deepExtend({}, singleParticlesOptions);\n\n        if (this.spawnColor) {\n          var hslAnimation = (_a = this.options.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n\n          if (hslAnimation) {\n            this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n            this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n            this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n          }\n\n          if (!particlesOptions.color) {\n            particlesOptions.color = {\n              value: this.spawnColor\n            };\n          } else {\n            particlesOptions.color.value = this.spawnColor;\n          }\n        }\n\n        if (!position) {\n          return;\n        }\n\n        var pPosition = (_c = (_b = this._shape) === null || _b === void 0 ? void 0 : _b.randomPosition(position, size, this.fill)) !== null && _c !== void 0 ? _c : position;\n        this.container.particles.addParticle(pPosition, particlesOptions);\n      }\n    }\n  }, {\n    key: \"prepareToDie\",\n    value: function prepareToDie() {\n      var _a;\n\n      if (this._paused) {\n        return;\n      }\n\n      var duration = (_a = this.options.life) === null || _a === void 0 ? void 0 : _a.duration;\n\n      if (this.container.retina.reduceFactor && (this._lifeCount > 0 || this._immortal) && duration !== undefined && duration > 0) {\n        this._duration = duration * 1000;\n      }\n    }\n  }, {\n    key: \"setColorAnimation\",\n    value: function setColorAnimation(animation, initValue, maxValue) {\n      var _a;\n\n      var container = this.container;\n\n      if (!animation.enable) {\n        return initValue;\n      }\n\n      var colorOffset = randomInRange(animation.offset),\n          delay = getRangeValue(this.options.rate.delay),\n          emitFactor = 1000 * delay / container.retina.reduceFactor,\n          colorSpeed = getRangeValue((_a = animation.speed) !== null && _a !== void 0 ? _a : 0);\n      return (initValue + colorSpeed * container.fpsLimit / emitFactor + colorOffset * 3.6) % maxValue;\n    }\n  }]);\n\n  return EmitterInstance;\n}();","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/tsparticles-plugin-emitters/esm/EmitterInstance.js"],"names":["Vector","calcPositionOrRandomFromSizeRanged","deepExtend","getRangeValue","isPointInside","itemFromSingleOrMultiple","randomInRange","rangeColorToHsl","Emitter","EmitterSize","EmitterInstance","engine","emitters","container","options","position","_a","_b","_c","_d","_e","_f","_g","_h","_engine","_currentDuration","_currentEmitDelay","_currentSpawnDelay","_initialPosition","load","_spawnDelay","life","delay","retina","reduceFactor","calcPosition","name","_shape","emitterShapeManager","getShape","shape","fill","_firstSpawn","wait","_startParticlesAdded","particlesOptions","particles","move","direction","spawnColor","_paused","autoPlay","_particlesOptions","size","height","mode","width","_lifeCount","count","_immortal","dispatchEvent","data","emitter","play","pause","domId","element","document","getElementById","elRect","getBoundingClientRect","x","pixelRatio","y","canvas","_emitDelay","undefined","rate","prepareToDie","initialPosition","origin","delta","emitParticles","startCount","_duration","value","destroy","emit","removeEmitter","quantity","getPosition","getSize","singleParticlesOptions","i","hslAnimation","animation","h","setColorAnimation","s","l","color","pPosition","randomPosition","addParticle","duration","initValue","maxValue","enable","colorOffset","offset","emitFactor","colorSpeed","speed","fpsLimit"],"mappings":"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","sourcesContent":["import { Vector, calcPositionOrRandomFromSizeRanged, deepExtend, getRangeValue, isPointInside, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize\";\nexport class EmitterInstance {\n    constructor(engine, emitters, container, options, position) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        var _h;\n        this.emitters = emitters;\n        this.container = container;\n        this._engine = engine;\n        this._currentDuration = 0;\n        this._currentEmitDelay = 0;\n        this._currentSpawnDelay = 0;\n        this._initialPosition = position;\n        if (options instanceof Emitter) {\n            this.options = options;\n        }\n        else {\n            this.options = new Emitter();\n            this.options.load(options);\n        }\n        this._spawnDelay = (((_a = this.options.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000) / this.container.retina.reduceFactor;\n        this.position = (_b = this._initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n        this.name = this.options.name;\n        this._shape = (_c = this._engine.emitterShapeManager) === null || _c === void 0 ? void 0 : _c.getShape(this.options.shape);\n        this.fill = this.options.fill;\n        this._firstSpawn = !this.options.life.wait;\n        this._startParticlesAdded = false;\n        let particlesOptions = deepExtend({}, this.options.particles);\n        particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : (particlesOptions = {});\n        (_d = particlesOptions.move) !== null && _d !== void 0 ? _d : (particlesOptions.move = {});\n        (_e = (_h = particlesOptions.move).direction) !== null && _e !== void 0 ? _e : (_h.direction = this.options.direction);\n        if (this.options.spawnColor) {\n            this.spawnColor = rangeColorToHsl(this.options.spawnColor);\n        }\n        this._paused = !this.options.autoPlay;\n        this._particlesOptions = particlesOptions;\n        this.size =\n            (_f = this.options.size) !== null && _f !== void 0 ? _f : (() => {\n                const size = new EmitterSize();\n                size.load({\n                    height: 0,\n                    mode: \"percent\",\n                    width: 0,\n                });\n                return size;\n            })();\n        this._lifeCount = (_g = this.options.life.count) !== null && _g !== void 0 ? _g : -1;\n        this._immortal = this._lifeCount <= 0;\n        this._engine.dispatchEvent(\"emitterCreated\", {\n            container,\n            data: {\n                emitter: this,\n            },\n        });\n        this.play();\n    }\n    externalPause() {\n        this._paused = true;\n        this.pause();\n    }\n    externalPlay() {\n        this._paused = false;\n        this.play();\n    }\n    getPosition() {\n        if (this.options.domId) {\n            const container = this.container, element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    x: (elRect.x + elRect.width / 2) * container.retina.pixelRatio,\n                    y: (elRect.y + elRect.height / 2) * container.retina.pixelRatio,\n                };\n            }\n        }\n        return this.position;\n    }\n    getSize() {\n        const container = this.container;\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    width: elRect.width * container.retina.pixelRatio,\n                    height: elRect.height * container.retina.pixelRatio,\n                };\n            }\n        }\n        return {\n            width: this.size.mode === \"percent\"\n                ? (container.canvas.size.width * this.size.width) / 100\n                : this.size.width,\n            height: this.size.mode === \"percent\"\n                ? (container.canvas.size.height * this.size.height) / 100\n                : this.size.height,\n        };\n    }\n    pause() {\n        if (this._paused) {\n            return;\n        }\n        delete this._emitDelay;\n    }\n    play() {\n        var _a;\n        if (this._paused) {\n            return;\n        }\n        if (!(this.container.retina.reduceFactor &&\n            (this._lifeCount > 0 || this._immortal || !this.options.life.count) &&\n            (this._firstSpawn || this._currentSpawnDelay >= ((_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0)))) {\n            return;\n        }\n        if (this._emitDelay === undefined) {\n            const delay = getRangeValue(this.options.rate.delay);\n            this._emitDelay = (1000 * delay) / this.container.retina.reduceFactor;\n        }\n        if (this._lifeCount > 0 || this._immortal) {\n            this.prepareToDie();\n        }\n    }\n    resize() {\n        const initialPosition = this._initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    update(delta) {\n        var _a, _b, _c;\n        if (this._paused) {\n            return;\n        }\n        if (this._firstSpawn) {\n            this._firstSpawn = false;\n            this._currentSpawnDelay = (_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0;\n            this._currentEmitDelay = (_b = this._emitDelay) !== null && _b !== void 0 ? _b : 0;\n        }\n        if (!this._startParticlesAdded) {\n            this._startParticlesAdded = true;\n            this.emitParticles(this.options.startCount);\n        }\n        if (this._duration !== undefined) {\n            this._currentDuration += delta.value;\n            if (this._currentDuration >= this._duration) {\n                this.pause();\n                if (this._spawnDelay !== undefined) {\n                    delete this._spawnDelay;\n                }\n                if (!this._immortal) {\n                    this._lifeCount--;\n                }\n                if (this._lifeCount > 0 || this._immortal) {\n                    this.position = this.calcPosition();\n                    this._spawnDelay = (((_c = this.options.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000) / this.container.retina.reduceFactor;\n                }\n                else {\n                    this.destroy();\n                }\n                this._currentDuration -= this._duration;\n                delete this._duration;\n            }\n        }\n        if (this._spawnDelay !== undefined) {\n            this._currentSpawnDelay += delta.value;\n            if (this._currentSpawnDelay >= this._spawnDelay) {\n                this._engine.dispatchEvent(\"emitterPlay\", {\n                    container: this.container,\n                });\n                this.play();\n                this._currentSpawnDelay -= this._currentSpawnDelay;\n                delete this._spawnDelay;\n            }\n        }\n        if (this._emitDelay !== undefined) {\n            this._currentEmitDelay += delta.value;\n            if (this._currentEmitDelay >= this._emitDelay) {\n                this.emit();\n                this._currentEmitDelay -= this._emitDelay;\n            }\n        }\n    }\n    calcPosition() {\n        return calcPositionOrRandomFromSizeRanged({\n            size: this.container.canvas.size,\n            position: this.options.position,\n        });\n    }\n    destroy() {\n        this.emitters.removeEmitter(this);\n        this._engine.dispatchEvent(\"emitterDestroyed\", {\n            container: this.container,\n            data: {\n                emitter: this,\n            },\n        });\n    }\n    emit() {\n        if (this._paused) {\n            return;\n        }\n        const quantity = getRangeValue(this.options.rate.quantity);\n        this.emitParticles(quantity);\n    }\n    emitParticles(quantity) {\n        var _a, _b, _c;\n        const position = this.getPosition(), size = this.getSize(), singleParticlesOptions = itemFromSingleOrMultiple(this._particlesOptions);\n        for (let i = 0; i < quantity; i++) {\n            const particlesOptions = deepExtend({}, singleParticlesOptions);\n            if (this.spawnColor) {\n                const hslAnimation = (_a = this.options.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n                if (hslAnimation) {\n                    this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n                    this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n                    this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n                }\n                if (!particlesOptions.color) {\n                    particlesOptions.color = {\n                        value: this.spawnColor,\n                    };\n                }\n                else {\n                    particlesOptions.color.value = this.spawnColor;\n                }\n            }\n            if (!position) {\n                return;\n            }\n            const pPosition = (_c = (_b = this._shape) === null || _b === void 0 ? void 0 : _b.randomPosition(position, size, this.fill)) !== null && _c !== void 0 ? _c : position;\n            this.container.particles.addParticle(pPosition, particlesOptions);\n        }\n    }\n    prepareToDie() {\n        var _a;\n        if (this._paused) {\n            return;\n        }\n        const duration = (_a = this.options.life) === null || _a === void 0 ? void 0 : _a.duration;\n        if (this.container.retina.reduceFactor &&\n            (this._lifeCount > 0 || this._immortal) &&\n            duration !== undefined &&\n            duration > 0) {\n            this._duration = duration * 1000;\n        }\n    }\n    setColorAnimation(animation, initValue, maxValue) {\n        var _a;\n        const container = this.container;\n        if (!animation.enable) {\n            return initValue;\n        }\n        const colorOffset = randomInRange(animation.offset), delay = getRangeValue(this.options.rate.delay), emitFactor = (1000 * delay) / container.retina.reduceFactor, colorSpeed = getRangeValue((_a = animation.speed) !== null && _a !== void 0 ? _a : 0);\n        return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * 3.6) % maxValue;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}