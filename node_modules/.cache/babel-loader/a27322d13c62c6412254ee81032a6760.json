{"ast":null,"code":"import { animate, cancelAnimation } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { FrameManager } from \"./Utils/FrameManager\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\n\nfunction guardCheck(container) {\n  return container && !container.destroyed;\n}\n\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n  const options = new Options(engine, container);\n  loadOptions(options, ...sourceOptionsArr);\n  return options;\n}\n\nconst defaultPathGeneratorKey = \"default\",\n      defaultPathGenerator = {\n  generate: p => {\n    const v = p.velocity.copy();\n    v.angle += v.length * Math.PI / 180;\n    return v;\n  },\n  init: () => {},\n  update: () => {},\n  reset: () => {}\n};\nexport class Container {\n  constructor(engine, id, sourceOptions) {\n    this.id = id;\n    this._engine = engine;\n    this.fpsLimit = 120;\n    this.smooth = false;\n    this._delay = 0;\n    this.duration = 0;\n    this.lifeTime = 0;\n    this._firstStart = true;\n    this.started = false;\n    this.destroyed = false;\n    this._paused = true;\n    this.lastFrameTime = 0;\n    this.zLayers = 100;\n    this.pageHidden = false;\n    this._sourceOptions = sourceOptions;\n    this._initialSourceOptions = sourceOptions;\n    this.retina = new Retina(this);\n    this.canvas = new Canvas(this);\n    this.particles = new Particles(this._engine, this);\n    this.frameManager = new FrameManager(this);\n    this.pathGenerators = new Map();\n    this.interactivity = {\n      mouse: {\n        clicking: false,\n        inside: false\n      }\n    };\n    this.plugins = new Map();\n    this.drawers = new Map();\n    this._options = loadContainerOptions(this._engine, this);\n    this.actualOptions = loadContainerOptions(this._engine, this);\n    this._eventListeners = new EventListeners(this);\n\n    if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n      this._intersectionObserver = new IntersectionObserver(entries => this._intersectionManager(entries));\n    }\n\n    this._engine.dispatchEvent(\"containerBuilt\", {\n      container: this\n    });\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  get sourceOptions() {\n    return this._sourceOptions;\n  }\n\n  addClickHandler(callback) {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    const el = this.interactivity.element;\n\n    if (!el) {\n      return;\n    }\n\n    const clickOrTouchHandler = (e, pos, radius) => {\n      if (!guardCheck(this)) {\n        return;\n      }\n\n      const pxRatio = this.retina.pixelRatio,\n            posRetina = {\n        x: pos.x * pxRatio,\n        y: pos.y * pxRatio\n      },\n            particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n      callback(e, particles);\n    };\n\n    const clickHandler = e => {\n      if (!guardCheck(this)) {\n        return;\n      }\n\n      const mouseEvent = e,\n            pos = {\n        x: mouseEvent.offsetX || mouseEvent.clientX,\n        y: mouseEvent.offsetY || mouseEvent.clientY\n      };\n      clickOrTouchHandler(e, pos, 1);\n    };\n\n    const touchStartHandler = () => {\n      if (!guardCheck(this)) {\n        return;\n      }\n\n      touched = true;\n      touchMoved = false;\n    };\n\n    const touchMoveHandler = () => {\n      if (!guardCheck(this)) {\n        return;\n      }\n\n      touchMoved = true;\n    };\n\n    const touchEndHandler = e => {\n      if (!guardCheck(this)) {\n        return;\n      }\n\n      if (touched && !touchMoved) {\n        const touchEvent = e;\n        let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n\n        if (!lastTouch) {\n          lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n\n          if (!lastTouch) {\n            return;\n          }\n        }\n\n        const element = this.canvas.element,\n              canvasRect = element ? element.getBoundingClientRect() : undefined,\n              pos = {\n          x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n          y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0)\n        };\n        clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n      }\n\n      touched = false;\n      touchMoved = false;\n    };\n\n    const touchCancelHandler = () => {\n      if (!guardCheck(this)) {\n        return;\n      }\n\n      touched = false;\n      touchMoved = false;\n    };\n\n    let touched = false,\n        touchMoved = false;\n    el.addEventListener(\"click\", clickHandler);\n    el.addEventListener(\"touchstart\", touchStartHandler);\n    el.addEventListener(\"touchmove\", touchMoveHandler);\n    el.addEventListener(\"touchend\", touchEndHandler);\n    el.addEventListener(\"touchcancel\", touchCancelHandler);\n  }\n\n  addPath(key, generator, override = false) {\n    if (!guardCheck(this) || !override && this.pathGenerators.has(key)) {\n      return false;\n    }\n\n    this.pathGenerators.set(key, generator !== null && generator !== void 0 ? generator : defaultPathGenerator);\n    return true;\n  }\n\n  destroy() {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    this.stop();\n    this.particles.destroy();\n    this.canvas.destroy();\n\n    for (const [, drawer] of this.drawers) {\n      if (drawer.destroy) {\n        drawer.destroy(this);\n      }\n    }\n\n    for (const key of this.drawers.keys()) {\n      this.drawers.delete(key);\n    }\n\n    this._engine.plugins.destroy(this);\n\n    this.destroyed = true;\n\n    const mainArr = this._engine.dom(),\n          idx = mainArr.findIndex(t => t === this);\n\n    if (idx >= 0) {\n      mainArr.splice(idx, 1);\n    }\n\n    this._engine.dispatchEvent(\"containerDestroyed\", {\n      container: this\n    });\n  }\n\n  draw(force) {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    let refreshTime = force;\n    this._drawAnimationFrame = animate()(async timestamp => {\n      if (refreshTime) {\n        this.lastFrameTime = undefined;\n        refreshTime = false;\n      }\n\n      await this.frameManager.nextFrame(timestamp);\n    });\n  }\n\n  exportConfiguration() {\n    return JSON.stringify(this.actualOptions, (key, value) => {\n      if (key === \"_engine\" || key === \"_container\") {\n        return;\n      }\n\n      return value;\n    }, 2);\n  }\n\n  exportImage(callback, type, quality) {\n    const element = this.canvas.element;\n\n    if (element) {\n      element.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n    }\n  }\n\n  exportImg(callback) {\n    this.exportImage(callback);\n  }\n\n  getAnimationStatus() {\n    return !this._paused && !this.pageHidden && guardCheck(this);\n  }\n\n  handleClickMode(mode) {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    this.particles.handleClickMode(mode);\n\n    for (const [, plugin] of this.plugins) {\n      if (plugin.handleClickMode) {\n        plugin.handleClickMode(mode);\n      }\n    }\n  }\n\n  async init() {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    const shapes = this._engine.plugins.getSupportedShapes();\n\n    for (const type of shapes) {\n      const drawer = this._engine.plugins.getShapeDrawer(type);\n\n      if (drawer) {\n        this.drawers.set(type, drawer);\n      }\n    }\n\n    this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n    this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n\n    const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n\n    for (const [id, plugin] of availablePlugins) {\n      this.plugins.set(id, plugin);\n    }\n\n    this.retina.init();\n    await this.canvas.init();\n    this.updateActualOptions();\n    this.canvas.initBackground();\n    this.canvas.resize();\n    this.zLayers = this.actualOptions.zLayers;\n    this.duration = getRangeValue(this.actualOptions.duration) * 1000;\n    this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n    this.lifeTime = 0;\n    this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n    this.smooth = this.actualOptions.smooth;\n\n    for (const [, drawer] of this.drawers) {\n      if (drawer.init) {\n        await drawer.init(this);\n      }\n    }\n\n    for (const [, plugin] of this.plugins) {\n      if (plugin.init) {\n        await plugin.init();\n      }\n    }\n\n    this._engine.dispatchEvent(\"containerInit\", {\n      container: this\n    });\n\n    this.particles.init();\n    this.particles.setDensity();\n\n    for (const [, plugin] of this.plugins) {\n      if (plugin.particlesSetup) {\n        plugin.particlesSetup();\n      }\n    }\n\n    this._engine.dispatchEvent(\"particlesSetup\", {\n      container: this\n    });\n  }\n\n  async loadTheme(name) {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    this._currentTheme = name;\n    await this.refresh();\n  }\n\n  pause() {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    if (this._drawAnimationFrame !== undefined) {\n      cancelAnimation()(this._drawAnimationFrame);\n      delete this._drawAnimationFrame;\n    }\n\n    if (this._paused) {\n      return;\n    }\n\n    for (const [, plugin] of this.plugins) {\n      if (plugin.pause) {\n        plugin.pause();\n      }\n    }\n\n    if (!this.pageHidden) {\n      this._paused = true;\n    }\n\n    this._engine.dispatchEvent(\"containerPaused\", {\n      container: this\n    });\n  }\n\n  play(force) {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    const needsUpdate = this._paused || force;\n\n    if (this._firstStart && !this.actualOptions.autoPlay) {\n      this._firstStart = false;\n      return;\n    }\n\n    if (this._paused) {\n      this._paused = false;\n    }\n\n    if (needsUpdate) {\n      for (const [, plugin] of this.plugins) {\n        if (plugin.play) {\n          plugin.play();\n        }\n      }\n    }\n\n    this._engine.dispatchEvent(\"containerPlay\", {\n      container: this\n    });\n\n    this.draw(needsUpdate || false);\n  }\n\n  async refresh() {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    this.stop();\n    return this.start();\n  }\n\n  async reset() {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    this._options = loadContainerOptions(this._engine, this);\n    return this.refresh();\n  }\n\n  setNoise(noiseOrGenerator, init, update) {\n    if (!guardCheck(this)) {\n      return;\n    }\n\n    this.setPath(noiseOrGenerator, init, update);\n  }\n\n  setPath(pathOrGenerator, init, update) {\n    if (!pathOrGenerator || !guardCheck(this)) {\n      return;\n    }\n\n    const pathGenerator = Object.assign({}, defaultPathGenerator);\n\n    if (typeof pathOrGenerator === \"function\") {\n      pathGenerator.generate = pathOrGenerator;\n\n      if (init) {\n        pathGenerator.init = init;\n      }\n\n      if (update) {\n        pathGenerator.update = update;\n      }\n    } else {\n      const oldGenerator = pathGenerator;\n      pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n      pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n      pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n    }\n\n    this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n  }\n\n  async start() {\n    if (!guardCheck(this) || this.started) {\n      return;\n    }\n\n    await this.init();\n    this.started = true;\n    await new Promise(resolve => {\n      this._delayTimeout = setTimeout(async () => {\n        this._eventListeners.addListeners();\n\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n          this._intersectionObserver.observe(this.interactivity.element);\n        }\n\n        for (const [, plugin] of this.plugins) {\n          if (plugin.start) {\n            await plugin.start();\n          }\n        }\n\n        this._engine.dispatchEvent(\"containerStarted\", {\n          container: this\n        });\n\n        this.play();\n        resolve();\n      }, this._delay);\n    });\n  }\n\n  stop() {\n    if (!guardCheck(this) || !this.started) {\n      return;\n    }\n\n    if (this._delayTimeout) {\n      clearTimeout(this._delayTimeout);\n      delete this._delayTimeout;\n    }\n\n    this._firstStart = true;\n    this.started = false;\n\n    this._eventListeners.removeListeners();\n\n    this.pause();\n    this.particles.clear();\n    this.canvas.stop();\n\n    if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n      this._intersectionObserver.unobserve(this.interactivity.element);\n    }\n\n    for (const [, plugin] of this.plugins) {\n      if (plugin.stop) {\n        plugin.stop();\n      }\n    }\n\n    for (const key of this.plugins.keys()) {\n      this.plugins.delete(key);\n    }\n\n    this._sourceOptions = this._options;\n\n    this._engine.dispatchEvent(\"containerStopped\", {\n      container: this\n    });\n  }\n\n  updateActualOptions() {\n    this.actualOptions.responsive = [];\n    const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n    this.actualOptions.setTheme(this._currentTheme);\n\n    if (this.responsiveMaxWidth === newMaxWidth) {\n      return false;\n    }\n\n    this.responsiveMaxWidth = newMaxWidth;\n    return true;\n  }\n\n  _intersectionManager(entries) {\n    if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n      return;\n    }\n\n    for (const entry of entries) {\n      if (entry.target !== this.interactivity.element) {\n        continue;\n      }\n\n      (entry.isIntersecting ? this.play : this.pause)();\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/tsparticles-engine/esm/Core/Container.js"],"names":["animate","cancelAnimation","Canvas","EventListeners","FrameManager","Options","Particles","Retina","getRangeValue","loadOptions","guardCheck","container","destroyed","loadContainerOptions","engine","sourceOptionsArr","options","defaultPathGeneratorKey","defaultPathGenerator","generate","p","v","velocity","copy","angle","length","Math","PI","init","update","reset","Container","constructor","id","sourceOptions","_engine","fpsLimit","smooth","_delay","duration","lifeTime","_firstStart","started","_paused","lastFrameTime","zLayers","pageHidden","_sourceOptions","_initialSourceOptions","retina","canvas","particles","frameManager","pathGenerators","Map","interactivity","mouse","clicking","inside","plugins","drawers","_options","actualOptions","_eventListeners","IntersectionObserver","_intersectionObserver","entries","_intersectionManager","dispatchEvent","addClickHandler","callback","el","element","clickOrTouchHandler","e","pos","radius","pxRatio","pixelRatio","posRetina","x","y","quadTree","queryCircle","clickHandler","mouseEvent","offsetX","clientX","offsetY","clientY","touchStartHandler","touched","touchMoved","touchMoveHandler","touchEndHandler","touchEvent","lastTouch","touches","changedTouches","canvasRect","getBoundingClientRect","undefined","left","top","max","radiusX","radiusY","touchCancelHandler","addEventListener","addPath","key","generator","override","has","set","destroy","stop","drawer","keys","delete","mainArr","dom","idx","findIndex","t","splice","draw","force","refreshTime","_drawAnimationFrame","timestamp","nextFrame","exportConfiguration","JSON","stringify","value","exportImage","type","quality","toBlob","exportImg","getAnimationStatus","handleClickMode","mode","plugin","shapes","getSupportedShapes","getShapeDrawer","availablePlugins","getAvailablePlugins","updateActualOptions","initBackground","resize","delay","setDensity","particlesSetup","loadTheme","name","_currentTheme","refresh","pause","play","needsUpdate","autoPlay","start","setNoise","noiseOrGenerator","setPath","pathOrGenerator","pathGenerator","Object","assign","oldGenerator","Promise","resolve","_delayTimeout","setTimeout","addListeners","HTMLElement","observe","clearTimeout","removeListeners","clear","unobserve","responsive","newMaxWidth","setResponsive","size","width","setTheme","responsiveMaxWidth","pauseOnOutsideViewport","entry","target","isIntersecting"],"mappings":"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","sourcesContent":["import { animate, cancelAnimation } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { FrameManager } from \"./Utils/FrameManager\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => {\n        const v = p.velocity.copy();\n        v.angle += (v.length * Math.PI) / 180;\n        return v;\n    },\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this.duration = 0;\n        this.lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.frameManager = new FrameManager(this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator !== null && generator !== void 0 ? generator : defaultPathGenerator);\n        return true;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            if (drawer.destroy) {\n                drawer.destroy(this);\n            }\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = animate()(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this.frameManager.nextFrame(timestamp);\n        });\n    }\n    exportConfiguration() {\n        return JSON.stringify(this.actualOptions, (key, value) => {\n            if (key === \"_engine\" || key === \"_container\") {\n                return;\n            }\n            return value;\n        }, 2);\n    }\n    exportImage(callback, type, quality) {\n        const element = this.canvas.element;\n        if (element) {\n            element.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n        }\n    }\n    exportImg(callback) {\n        this.exportImage(callback);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            if (plugin.handleClickMode) {\n                plugin.handleClickMode(mode);\n            }\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this.duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this.lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            if (drawer.init) {\n                await drawer.init(this);\n            }\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.init) {\n                await plugin.init();\n            }\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            if (plugin.particlesSetup) {\n                plugin.particlesSetup();\n            }\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimation()(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.pause) {\n                plugin.pause();\n            }\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._options = loadContainerOptions(this._engine, this);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = Object.assign({}, defaultPathGenerator);\n        if (typeof pathOrGenerator === \"function\") {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    if (plugin.start) {\n                        await plugin.start();\n                    }\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.stop) {\n                plugin.stop();\n            }\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n    _intersectionManager(entries) {\n        if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n            return;\n        }\n        for (const entry of entries) {\n            if (entry.target !== this.interactivity.element) {\n                continue;\n            }\n            (entry.isIntersecting ? this.play : this.pause)();\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}