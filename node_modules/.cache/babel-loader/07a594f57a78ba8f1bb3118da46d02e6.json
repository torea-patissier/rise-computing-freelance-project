{"ast":null,"code":"import _regeneratorRuntime from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction initDelta(value) {\n  var fpsLimit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 60;\n  var smooth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return {\n    value: value,\n    factor: smooth ? 60 / fpsLimit : 60 * value / 1000\n  };\n}\n\nexport var FrameManager = /*#__PURE__*/function () {\n  function FrameManager(container) {\n    _classCallCheck(this, FrameManager);\n\n    this.container = container;\n  }\n\n  _createClass(FrameManager, [{\n    key: \"nextFrame\",\n    value: function () {\n      var _nextFrame = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(timestamp) {\n        var _a, container, delta;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                container = this.container;\n\n                if (!(!container.smooth && container.lastFrameTime !== undefined && timestamp < container.lastFrameTime + 1000 / container.fpsLimit)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                container.draw(false);\n                return _context.abrupt(\"return\");\n\n              case 5:\n                (_a = container.lastFrameTime) !== null && _a !== void 0 ? _a : container.lastFrameTime = timestamp;\n                delta = initDelta(timestamp - container.lastFrameTime, container.fpsLimit, container.smooth);\n                container.lifeTime += delta.value;\n                container.lastFrameTime = timestamp;\n\n                if (!(delta.value > 1000)) {\n                  _context.next = 12;\n                  break;\n                }\n\n                container.draw(false);\n                return _context.abrupt(\"return\");\n\n              case 12:\n                _context.next = 14;\n                return container.particles.draw(delta);\n\n              case 14:\n                if (!(container.duration > 0 && container.lifeTime > container.duration)) {\n                  _context.next = 17;\n                  break;\n                }\n\n                container.destroy();\n                return _context.abrupt(\"return\");\n\n              case 17:\n                if (container.getAnimationStatus()) {\n                  container.draw(false);\n                }\n\n                _context.next = 23;\n                break;\n\n              case 20:\n                _context.prev = 20;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(\"tsParticles error in animation loop\", _context.t0);\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 20]]);\n      }));\n\n      function nextFrame(_x) {\n        return _nextFrame.apply(this, arguments);\n      }\n\n      return nextFrame;\n    }()\n  }]);\n\n  return FrameManager;\n}();","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/tsparticles-engine/esm/Core/Utils/FrameManager.js"],"names":["initDelta","value","fpsLimit","smooth","factor","FrameManager","container","timestamp","lastFrameTime","undefined","draw","_a","delta","lifeTime","particles","duration","destroy","getAnimationStatus","console","error"],"mappings":";;;;;AAAA,SAASA,SAAT,CAAmBC,KAAnB,EAAyD;AAAA,MAA/BC,QAA+B,uEAApB,EAAoB;AAAA,MAAhBC,MAAgB,uEAAP,KAAO;AACrD,SAAO;AACHF,IAAAA,KAAK,EAALA,KADG;AAEHG,IAAAA,MAAM,EAAED,MAAM,GAAG,KAAKD,QAAR,GAAoB,KAAKD,KAAN,GAAe;AAF7C,GAAP;AAIH;;AACD,WAAaI,YAAb;AACI,wBAAYC,SAAZ,EAAuB;AAAA;;AACnB,SAAKA,SAAL,GAAiBA,SAAjB;AACH;;AAHL;AAAA;AAAA;AAAA,iGAIoBC,SAJpB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOkBD,gBAAAA,SAPlB,GAO8B,KAAKA,SAPnC;;AAAA,sBAQgB,CAACA,SAAS,CAACH,MAAX,IACAG,SAAS,CAACE,aAAV,KAA4BC,SAD5B,IAEAF,SAAS,GAAGD,SAAS,CAACE,aAAV,GAA0B,OAAOF,SAAS,CAACJ,QAVvE;AAAA;AAAA;AAAA;;AAWgBI,gBAAAA,SAAS,CAACI,IAAV,CAAe,KAAf;AAXhB;;AAAA;AAcY,iBAACC,EAAE,GAAGL,SAAS,CAACE,aAAhB,MAAmC,IAAnC,IAA2CG,EAAE,KAAK,KAAK,CAAvD,GAA2DA,EAA3D,GAAiEL,SAAS,CAACE,aAAV,GAA0BD,SAA3F;AACMK,gBAAAA,KAflB,GAe0BZ,SAAS,CAACO,SAAS,GAAGD,SAAS,CAACE,aAAvB,EAAsCF,SAAS,CAACJ,QAAhD,EAA0DI,SAAS,CAACH,MAApE,CAfnC;AAgBYG,gBAAAA,SAAS,CAACO,QAAV,IAAsBD,KAAK,CAACX,KAA5B;AACAK,gBAAAA,SAAS,CAACE,aAAV,GAA0BD,SAA1B;;AAjBZ,sBAkBgBK,KAAK,CAACX,KAAN,GAAc,IAlB9B;AAAA;AAAA;AAAA;;AAmBgBK,gBAAAA,SAAS,CAACI,IAAV,CAAe,KAAf;AAnBhB;;AAAA;AAAA;AAAA,uBAsBkBJ,SAAS,CAACQ,SAAV,CAAoBJ,IAApB,CAAyBE,KAAzB,CAtBlB;;AAAA;AAAA,sBAuBgBN,SAAS,CAACS,QAAV,GAAqB,CAArB,IAA0BT,SAAS,CAACO,QAAV,GAAqBP,SAAS,CAACS,QAvBzE;AAAA;AAAA;AAAA;;AAwBgBT,gBAAAA,SAAS,CAACU,OAAV;AAxBhB;;AAAA;AA2BY,oBAAIV,SAAS,CAACW,kBAAV,EAAJ,EAAoC;AAChCX,kBAAAA,SAAS,CAACI,IAAV,CAAe,KAAf;AACH;;AA7Bb;AAAA;;AAAA;AAAA;AAAA;AAgCYQ,gBAAAA,OAAO,CAACC,KAAR,CAAc,qCAAd;;AAhCZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA","sourcesContent":["function initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nexport class FrameManager {\n    constructor(container) {\n        this.container = container;\n    }\n    async nextFrame(timestamp) {\n        var _a;\n        try {\n            const container = this.container;\n            if (!container.smooth &&\n                container.lastFrameTime !== undefined &&\n                timestamp < container.lastFrameTime + 1000 / container.fpsLimit) {\n                container.draw(false);\n                return;\n            }\n            (_a = container.lastFrameTime) !== null && _a !== void 0 ? _a : (container.lastFrameTime = timestamp);\n            const delta = initDelta(timestamp - container.lastFrameTime, container.fpsLimit, container.smooth);\n            container.lifeTime += delta.value;\n            container.lastFrameTime = timestamp;\n            if (delta.value > 1000) {\n                container.draw(false);\n                return;\n            }\n            await container.particles.draw(delta);\n            if (container.duration > 0 && container.lifeTime > container.duration) {\n                container.destroy();\n                return;\n            }\n            if (container.getAnimationStatus()) {\n                container.draw(false);\n            }\n        }\n        catch (e) {\n            console.error(\"tsParticles error in animation loop\", e);\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}