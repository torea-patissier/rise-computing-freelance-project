{"ast":null,"code":"import _classCallCheck from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport var HslColorManager = /*#__PURE__*/function () {\n  function HslColorManager() {\n    _classCallCheck(this, HslColorManager);\n\n    this.key = \"hsl\";\n    this.stringPrefix = \"hsl\";\n  }\n\n  _createClass(HslColorManager, [{\n    key: \"handleColor\",\n    value: function handleColor(color) {\n      var _a;\n\n      var colorValue = color.value,\n          hslColor = (_a = colorValue.hsl) !== null && _a !== void 0 ? _a : color.value;\n\n      if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n        return hslToRgb(hslColor);\n      }\n    }\n  }, {\n    key: \"handleRangeColor\",\n    value: function handleRangeColor(color) {\n      var _a;\n\n      var colorValue = color.value,\n          hslColor = (_a = colorValue.hsl) !== null && _a !== void 0 ? _a : color.value;\n\n      if (hslColor.h !== undefined && hslColor.l !== undefined) {\n        return hslToRgb({\n          h: getRangeValue(hslColor.h),\n          l: getRangeValue(hslColor.l),\n          s: getRangeValue(hslColor.s)\n        });\n      }\n    }\n  }, {\n    key: \"parseString\",\n    value: function parseString(input) {\n      if (!input.startsWith(\"hsl\")) {\n        return;\n      }\n\n      var regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i,\n          result = regex.exec(input);\n      return result ? hslaToRgba({\n        a: result.length > 4 ? parseAlpha(result[5]) : 1,\n        h: parseInt(result[1], 10),\n        l: parseInt(result[3], 10),\n        s: parseInt(result[2], 10)\n      }) : undefined;\n    }\n  }]);\n\n  return HslColorManager;\n}();","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/tsparticles-engine/esm/Utils/HslColorManager.js"],"names":["getRangeValue","parseAlpha","hslToRgb","hslaToRgba","HslColorManager","key","stringPrefix","color","_a","colorValue","value","hslColor","hsl","h","undefined","s","l","input","startsWith","regex","result","exec","a","length","parseInt"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,eAA1C;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,cAArC;AACA,WAAaC,eAAb;AACI,6BAAc;AAAA;;AACV,SAAKC,GAAL,GAAW,KAAX;AACA,SAAKC,YAAL,GAAoB,KAApB;AACH;;AAJL;AAAA;AAAA,gCAKgBC,KALhB,EAKuB;AACf,UAAIC,EAAJ;;AACA,UAAMC,UAAU,GAAGF,KAAK,CAACG,KAAzB;AAAA,UAAgCC,QAAQ,GAAG,CAACH,EAAE,GAAGC,UAAU,CAACG,GAAjB,MAA0B,IAA1B,IAAkCJ,EAAE,KAAK,KAAK,CAA9C,GAAkDA,EAAlD,GAAuDD,KAAK,CAACG,KAAxG;;AACA,UAAIC,QAAQ,CAACE,CAAT,KAAeC,SAAf,IAA4BH,QAAQ,CAACI,CAAT,KAAeD,SAA3C,IAAwDH,QAAQ,CAACK,CAAT,KAAeF,SAA3E,EAAsF;AAClF,eAAOZ,QAAQ,CAACS,QAAD,CAAf;AACH;AACJ;AAXL;AAAA;AAAA,qCAYqBJ,KAZrB,EAY4B;AACpB,UAAIC,EAAJ;;AACA,UAAMC,UAAU,GAAGF,KAAK,CAACG,KAAzB;AAAA,UAAgCC,QAAQ,GAAG,CAACH,EAAE,GAAGC,UAAU,CAACG,GAAjB,MAA0B,IAA1B,IAAkCJ,EAAE,KAAK,KAAK,CAA9C,GAAkDA,EAAlD,GAAuDD,KAAK,CAACG,KAAxG;;AACA,UAAIC,QAAQ,CAACE,CAAT,KAAeC,SAAf,IAA4BH,QAAQ,CAACK,CAAT,KAAeF,SAA/C,EAA0D;AACtD,eAAOZ,QAAQ,CAAC;AACZW,UAAAA,CAAC,EAAEb,aAAa,CAACW,QAAQ,CAACE,CAAV,CADJ;AAEZG,UAAAA,CAAC,EAAEhB,aAAa,CAACW,QAAQ,CAACK,CAAV,CAFJ;AAGZD,UAAAA,CAAC,EAAEf,aAAa,CAACW,QAAQ,CAACI,CAAV;AAHJ,SAAD,CAAf;AAKH;AACJ;AAtBL;AAAA;AAAA,gCAuBgBE,KAvBhB,EAuBuB;AACf,UAAI,CAACA,KAAK,CAACC,UAAN,CAAiB,KAAjB,CAAL,EAA8B;AAC1B;AACH;;AACD,UAAMC,KAAK,GAAG,oEAAd;AAAA,UAAoFC,MAAM,GAAGD,KAAK,CAACE,IAAN,CAAWJ,KAAX,CAA7F;AACA,aAAOG,MAAM,GACPjB,UAAU,CAAC;AACTmB,QAAAA,CAAC,EAAEF,MAAM,CAACG,MAAP,GAAgB,CAAhB,GAAoBtB,UAAU,CAACmB,MAAM,CAAC,CAAD,CAAP,CAA9B,GAA4C,CADtC;AAETP,QAAAA,CAAC,EAAEW,QAAQ,CAACJ,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAFF;AAGTJ,QAAAA,CAAC,EAAEQ,QAAQ,CAACJ,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAHF;AAITL,QAAAA,CAAC,EAAES,QAAQ,CAACJ,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ;AAJF,OAAD,CADH,GAOPN,SAPN;AAQH;AApCL;;AAAA;AAAA","sourcesContent":["import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        var _a;\n        const colorValue = color.value, hslColor = (_a = colorValue.hsl) !== null && _a !== void 0 ? _a : color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        var _a;\n        const colorValue = color.value, hslColor = (_a = colorValue.hsl) !== null && _a !== void 0 ? _a : color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}