{"ast":null,"code":"import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  var swiper = this;\n  var data = swiper.touchEventsData;\n  var pointerIndex = data.evCache.findIndex(function (cachedEv) {\n    return cachedEv.pointerId === event.pointerId;\n  });\n\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) return;\n  var params = swiper.params,\n      touches = swiper.touches,\n      rtl = swiper.rtlTranslate,\n      slidesGrid = swiper.slidesGrid,\n      enabled = swiper.enabled;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  var e = event;\n  if (e.originalEvent) e = e.originalEvent;\n\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n\n  data.allowTouchCallbacks = false;\n\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  } // Return Grab Cursor\n\n\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  } // Time diff\n\n\n  var touchEndTime = now();\n  var timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click\n\n  if (swiper.allowClick) {\n    var pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n\n  data.lastClickTime = now();\n  nextTick(function () {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  var currentPos;\n\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.cssMode) {\n    return;\n  }\n\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos: currentPos\n    });\n    return;\n  } // Find current slide\n\n\n  var stopIndex = 0;\n  var groupSize = swiper.slidesSizesGrid[0];\n\n  for (var i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    var _increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n    if (typeof slidesGrid[i + _increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + _increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + _increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  var rewindFirstIndex = null;\n  var rewindLastIndex = null;\n\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  } // Find current slide size\n\n\n  var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  var increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    var isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/swiper/core/events/onTouchEnd.js"],"names":["now","nextTick","onTouchEnd","event","swiper","data","touchEventsData","pointerIndex","evCache","findIndex","cachedEv","pointerId","splice","includes","type","params","touches","rtl","rtlTranslate","slidesGrid","enabled","simulateTouch","pointerType","e","originalEvent","allowTouchCallbacks","emit","isTouched","isMoved","grabCursor","setGrabCursor","startMoving","allowSlideNext","allowSlidePrev","touchEndTime","timeDiff","touchStartTime","allowClick","pathTree","path","composedPath","updateClickedSlide","target","lastClickTime","destroyed","swipeDirection","diff","currentTranslate","startTranslate","currentPos","followFinger","translate","cssMode","freeMode","stopIndex","groupSize","slidesSizesGrid","i","length","slidesPerGroupSkip","slidesPerGroup","increment","rewindFirstIndex","rewindLastIndex","rewind","isBeginning","virtual","slides","isEnd","ratio","longSwipesMs","longSwipes","slideTo","activeIndex","longSwipesRatio","Math","abs","shortSwipes","isNavButtonTarget","navigation","nextEl","prevEl"],"mappings":"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","sourcesContent":["import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) return;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}