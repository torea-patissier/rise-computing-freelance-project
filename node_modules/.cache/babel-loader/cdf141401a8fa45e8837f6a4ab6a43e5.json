{"ast":null,"code":"import _regeneratorRuntime from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _createForOfIteratorHelper from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _asyncToGenerator from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { arrayRandomIndex, executeOnSingleOrMultiple, itemFromArray } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterInstance } from \"./EmitterInstance\";\nexport var Emitters = /*#__PURE__*/function () {\n  function Emitters(engine, container) {\n    var _this = this;\n\n    _classCallCheck(this, Emitters);\n\n    this.container = container;\n    this._engine = engine;\n    this.array = [];\n    this.emitters = [];\n    this.interactivityEmitters = {\n      random: {\n        count: 1,\n        enable: false\n      },\n      value: []\n    };\n\n    container.getEmitter = function (idxOrName) {\n      return idxOrName === undefined || typeof idxOrName === \"number\" ? _this.array[idxOrName || 0] : _this.array.find(function (t) {\n        return t.name === idxOrName;\n      });\n    };\n\n    container.addEmitter = function (options, position) {\n      return _this.addEmitter(options, position);\n    };\n\n    container.removeEmitter = function (idxOrName) {\n      var emitter = container.getEmitter(idxOrName);\n\n      if (emitter) {\n        _this.removeEmitter(emitter);\n      }\n    };\n\n    container.playEmitter = function (idxOrName) {\n      var emitter = container.getEmitter(idxOrName);\n\n      if (emitter) {\n        emitter.externalPlay();\n      }\n    };\n\n    container.pauseEmitter = function (idxOrName) {\n      var emitter = container.getEmitter(idxOrName);\n\n      if (emitter) {\n        emitter.externalPause();\n      }\n    };\n  }\n\n  _createClass(Emitters, [{\n    key: \"addEmitter\",\n    value: function addEmitter(options, position) {\n      var emitterOptions = new Emitter();\n      emitterOptions.load(options);\n      var emitter = new EmitterInstance(this._engine, this, this.container, emitterOptions, position);\n      this.array.push(emitter);\n      return emitter;\n    }\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      var _this2 = this;\n\n      var emitterOptions = this.emitters,\n          modeEmitters = this.interactivityEmitters;\n\n      if (mode === \"emitter\") {\n        var emittersModeOptions;\n\n        if (modeEmitters && modeEmitters.value instanceof Array) {\n          if (modeEmitters.value.length > 0 && modeEmitters.random.enable) {\n            emittersModeOptions = [];\n            var usedIndexes = [];\n\n            for (var i = 0; i < modeEmitters.random.count; i++) {\n              var idx = arrayRandomIndex(modeEmitters.value);\n\n              if (usedIndexes.includes(idx) && usedIndexes.length < modeEmitters.value.length) {\n                i--;\n                continue;\n              }\n\n              usedIndexes.push(idx);\n              emittersModeOptions.push(itemFromArray(modeEmitters.value, idx));\n            }\n          } else {\n            emittersModeOptions = modeEmitters.value;\n          }\n        } else {\n          emittersModeOptions = modeEmitters === null || modeEmitters === void 0 ? void 0 : modeEmitters.value;\n        }\n\n        var emittersOptions = emittersModeOptions !== null && emittersModeOptions !== void 0 ? emittersModeOptions : emitterOptions,\n            ePosition = this.container.interactivity.mouse.clickPosition;\n        executeOnSingleOrMultiple(emittersOptions, function (emitter) {\n          _this2.addEmitter(emitter, ePosition);\n        });\n      }\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _iterator, _step, emitterOptions;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.emitters = this.container.actualOptions.emitters;\n                this.interactivityEmitters = this.container.actualOptions.interactivity.modes.emitters;\n\n                if (this.emitters instanceof Array) {\n                  _iterator = _createForOfIteratorHelper(this.emitters);\n\n                  try {\n                    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                      emitterOptions = _step.value;\n                      this.addEmitter(emitterOptions);\n                    }\n                  } catch (err) {\n                    _iterator.e(err);\n                  } finally {\n                    _iterator.f();\n                  }\n                } else {\n                  this.addEmitter(this.emitters);\n                }\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      var _iterator2 = _createForOfIteratorHelper(this.array),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var emitter = _step2.value;\n          emitter.pause();\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      var _iterator3 = _createForOfIteratorHelper(this.array),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var emitter = _step3.value;\n          emitter.play();\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"removeEmitter\",\n    value: function removeEmitter(emitter) {\n      var index = this.array.indexOf(emitter);\n\n      if (index >= 0) {\n        this.array.splice(index, 1);\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var _iterator4 = _createForOfIteratorHelper(this.array),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var emitter = _step4.value;\n          emitter.resize();\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.array = [];\n    }\n  }, {\n    key: \"update\",\n    value: function update(delta) {\n      var _iterator5 = _createForOfIteratorHelper(this.array),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var emitter = _step5.value;\n          emitter.update(delta);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  }]);\n\n  return Emitters;\n}();","map":{"version":3,"sources":["/Users/torea/Desktop/freelanceProject2/rise-consulting/node_modules/tsparticles-plugin-emitters/esm/Emitters.js"],"names":["arrayRandomIndex","executeOnSingleOrMultiple","itemFromArray","Emitter","EmitterInstance","Emitters","engine","container","_engine","array","emitters","interactivityEmitters","random","count","enable","value","getEmitter","idxOrName","undefined","find","t","name","addEmitter","options","position","removeEmitter","emitter","playEmitter","externalPlay","pauseEmitter","externalPause","emitterOptions","load","push","mode","modeEmitters","emittersModeOptions","Array","length","usedIndexes","i","idx","includes","emittersOptions","ePosition","interactivity","mouse","clickPosition","actualOptions","modes","pause","play","index","indexOf","splice","resize","delta","update"],"mappings":"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","sourcesContent":["import { arrayRandomIndex, executeOnSingleOrMultiple, itemFromArray } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterInstance } from \"./EmitterInstance\";\nexport class Emitters {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = {\n            random: {\n                count: 1,\n                enable: false,\n            },\n            value: [],\n        };\n        container.getEmitter = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addEmitter = (options, position) => this.addEmitter(options, position);\n        container.removeEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                this.removeEmitter(emitter);\n            }\n        };\n        container.playEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPlay();\n            }\n        };\n        container.pauseEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPause();\n            }\n        };\n    }\n    addEmitter(options, position) {\n        const emitterOptions = new Emitter();\n        emitterOptions.load(options);\n        const emitter = new EmitterInstance(this._engine, this, this.container, emitterOptions, position);\n        this.array.push(emitter);\n        return emitter;\n    }\n    handleClickMode(mode) {\n        const emitterOptions = this.emitters, modeEmitters = this.interactivityEmitters;\n        if (mode === \"emitter\") {\n            let emittersModeOptions;\n            if (modeEmitters && modeEmitters.value instanceof Array) {\n                if (modeEmitters.value.length > 0 && modeEmitters.random.enable) {\n                    emittersModeOptions = [];\n                    const usedIndexes = [];\n                    for (let i = 0; i < modeEmitters.random.count; i++) {\n                        const idx = arrayRandomIndex(modeEmitters.value);\n                        if (usedIndexes.includes(idx) && usedIndexes.length < modeEmitters.value.length) {\n                            i--;\n                            continue;\n                        }\n                        usedIndexes.push(idx);\n                        emittersModeOptions.push(itemFromArray(modeEmitters.value, idx));\n                    }\n                }\n                else {\n                    emittersModeOptions = modeEmitters.value;\n                }\n            }\n            else {\n                emittersModeOptions = modeEmitters === null || modeEmitters === void 0 ? void 0 : modeEmitters.value;\n            }\n            const emittersOptions = emittersModeOptions !== null && emittersModeOptions !== void 0 ? emittersModeOptions : emitterOptions, ePosition = this.container.interactivity.mouse.clickPosition;\n            executeOnSingleOrMultiple(emittersOptions, (emitter) => {\n                this.addEmitter(emitter, ePosition);\n            });\n        }\n    }\n    async init() {\n        this.emitters = this.container.actualOptions.emitters;\n        this.interactivityEmitters = this.container.actualOptions.interactivity.modes.emitters;\n        if (this.emitters instanceof Array) {\n            for (const emitterOptions of this.emitters) {\n                this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            this.addEmitter(this.emitters);\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    update(delta) {\n        for (const emitter of this.array) {\n            emitter.update(delta);\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}